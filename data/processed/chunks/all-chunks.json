[
  {
    "id": "8bc991fa_0000",
    "content": "--- 페이지 1 ---\n bizMOB4(Vue) 개발자가이드\nFor Mobile\nInnovative Mobile & Fintech Solutions, Ready to Provide\nSam Kim\n\n--- 페이지 2 ---\nbizMOB4(Vue)\n\n--- 페이지 3 ---\n3\nI. Mobile Platform\nbizMOB4 Vue",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 0,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 54,
    "char_count": 185,
    "created_at": "2025-08-01T15:32:19.479Z"
  },
  {
    "id": "8bc991fa_0001",
    "content": "--- 페이지 4 ---\n4\nbizMOB4 Vue – Mobile Platform\n✔\nPlatform 의 필요성\nWith Platform\nWithout Platform\n개발 기간\n개발 툴 및 기반 SW 제공으로 짧게 걸림\n無에서 새로 개발해야 하므로 길게 걸림\n품질 보증\n이미 검증된 플랫폼 사용하므로 보증가능\n개발 결과물의 품질 보증할 수 없음\n운영 및 관리 환경\n플랫폼에서 운영 및 관리 환경 제공\n별도로 개발해야 함\n서비스 확장\n플랫폼 기반으로 손쉽게 확장 가능\n기존 시스템 수정해야 하므로 어려움\n유지 보수\n플랫폼 제공 업체에서 정기적 패치 적용\n개발된 업무 컨텐츠만 유지 보수하면 됨\n전체 시스템 소스를 잘 알고 있는 \n개발자만 유지보수 가능\n개발 비용\n플랫폼 라이선스가 따로 필요하나,\n개발비 감소로 전체 비용은 작음\n라이선스는 따로 없으나, 개발비용이 커서\n전체 비용은 큼\n개발자 수준\n주요 기술은 플랫폼에서 제공하므로, 필요한\n개발자 수준이 아주 높지 않음\n모든 것을 새로 구현해야 하므로 필요한 \n개발자 수준이 아주 높아야 함\n위험 관리\n플랫폼에 위험 관리 경험과 기술이 축적되어\n예상치 못한 상황에 대한 대처가 쉬움\n예상치 못한 상황 발생시 위험 부담 큼\n다양한 단말 대응\n다양한 OS와 해상도의 단말에 대한 방안이\n플랫폼에 녹아 있어 쉽게 대응 가능\n다양한 단말에 일일이 대응하여 개발 해야 함\n보안\n플랫폼에서 보안 정책 제공\n보안을 위한 정책 및 SW 별도 개발해야 함\n플랫폼을 사용하여 App을 제작하는 것이 다양한 측면에서 월등한 이점을 가지고 있습니다.",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 1,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 316,
    "char_count": 772,
    "created_at": "2025-08-01T15:32:19.481Z"
  },
  {
    "id": "8bc991fa_0002",
    "content": "--- 페이지 5 ---\n5\nbizMOB4 Vue – Mobile Platform\n✔\nMobile 플랫폼 Client - 개발기술비교\n개발방법\nNative App\nMobile Web\nHybrid App, Web\n개요\n• OS에서 제공하는 기능/UI개발가능 \n• 성능이 최적화 가능 \n• 디바이스 기능 사용 유리\n• 숙련된 개발자 적고 러닝커브가 길다. \n유지 보수 시 상이한 개발 기술자 \n(안드로이드/아이폰/윈도우 모바일) \n• WEB Site 개발 방식과 동일 \n• 웹 개발자 수급 용이\n• 개발 리소스 절약 (One source multiplatform) \n• OS에 맞는UI개발 불가능 \n• 보안취약 \n• 웹 기능외 디바이스 기능 일부 사용\n• 배포 시 서비스 중단\n• UI는 웹 기술을 이용\n• 디바이스 기능은 자바스크립트 API를 \n이용하여 네이티브 전체기능 사용가능\n• 자바스크립트 API는 하이브리드 \n프레임워크에 의해 제공\n• 모바일 웹의 장점인 개발 리소스는 절약됨\nUI\nNative UI Component\n( OS Vender provided )\n Web ( HTML, CSS, JS )\nNative UI Component(OS Vender Provided) \n + \nWeb Component ( HTML, CSS, JS )\nCommunication \nProtocol\n Socket 기반\n( HTTP, SOAP, etc )\n HTTP\n Javascript API + Socket 기반\n( HTTP, SOAP, etc )\nData type \ntext or binary preferred, xml, json",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 2,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 261,
    "char_count": 796,
    "created_at": "2025-08-01T15:32:19.481Z"
  },
  {
    "id": "8bc991fa_0003",
    "content": "--- 페이지 6 ---\n6\nbizMOB4 Vue – Mobile Platform\n✔\nMobile 플랫폼 Client - 개발 방식 비교 \nNative 방식 개발\nWeb App 방식 개발\nHybrid 방식 개발\nWP\nContainer\nAndroid \nContainer\niPhone \nContainer\nConcept\n장점\n단점\n단일 WebKit (HTML, css, JS)\nWP\nContainer\nAndroid \nContainer\niPhone \nContainer\nConcept\nOS 특화된 UI Container\n단일 Web App(HTML)\n장점\nApp 개발시 Web의 장점(UI)과\nNative의 장점(기능) 사용\n개발인력 多\n단점\n중간 성능\nConcept\nHTML표준으로 Web 구현\nAny Browser 상에서 구동\n장점\nOS 상관없이 Web 표준으로 \nPC/모바일 전체 사용가능\n단점\n낮은 성능, 보안, \n단말기능 사용제한\nHTML, CSS, JS\nWeb Browser\n각 OS에 맞게 전용 App 개발\n최적화된 성능, 보안\n개발 및 유지보수 고비용\n숙련된 개발자 수급 힘듬",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 3,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 176,
    "char_count": 549,
    "created_at": "2025-08-01T15:32:19.481Z"
  },
  {
    "id": "8bc991fa_0004",
    "content": "--- 페이지 7 ---\n7\nbizMOB4 Vue – Mobile Platform\n✔\nMobile 플랫폼 Client - 특장점 비교\n구분\nNative App 방식\nWeb Browsing 방식\nHybrid App 방식\n어플리케이션타입\n 바이너리( OS 별 )\n 웹 어플리케이션 배포파일\n App+ Web\n배포방법\n 어플리케이션 배포\n 필요 없음\n 최초App은 배포\n업그레이드\n 어플리케이션 업그레이드\n 웹 서버에 어플리케이션 배포\n 어플리케이션 업그레이드 + \n Web Application Update\nUI 수준(난이도)\n 상\n 하\n 하\nGraphic Performance\n상\n하\n중\n어플리케이션개발자\n App 개발자( OS별 )\n ( Window : C, Android : Java, iOS : Obj.C)\n웹 개발자\n App 개발자+ 웹 개발자\n개발 편의성\n 웹 지식필요\n 플랫폼에 대한 지식필요\nApp + Web 지식\n원격삭제\n 수용가능\n 불가능\n 수용가능\n복사제어\n 가능\n 어려움\n 가능\n파일다운로드제어\n 가능\n 어려움\n 가능\n단말원격제어\n 가능\n 어려움\n 가능\nPush 서비스\n 가능\n 어려움\n 가능\n로컬자원활용\n 일부가능\n 어려움\n 일부 가능\n멀티 플랫폼 지원\n어려움\n쉬움.\n중간\nOffline Mode\n기본지원\n불가능\n가능\n다중 사용자 공동작업\n어려움\n쉬움\n쉬움\n키보드Customizing\n 가능\n 불가능\n 가능\n단점\n OS별 Application 개발\n Device Control 제한\n Security, Privacy Manage 불가\n OS 별 최소의App 개발,재활용성 높음",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 4,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 276,
    "char_count": 781,
    "created_at": "2025-08-01T15:32:19.481Z"
  },
  {
    "id": "8bc991fa_0005",
    "content": "--- 페이지 8 ---\n8\nbizMOB4 Vue – Mobile Platform\n구분\nCordova\nPlatform\n개요\nApp Framwork\nApp 개발 및 관리/배포/운영/통계 기능 포함\n보안\n버전 별 취약점 존재 ( 일부 버전 오픈마켓 제약 )\nCordova 기반 제품 : 버전별 취약점 존재\n비 Cordova : 개발사 기준\n보안 패치\nCordova 공식 Update 기준\nCordova 기반 제품 : Cordova 공식 Update 기준\n비 Cordova : 즉시 지원\n배포형태\nApp내 웹 컨텐츠 포함. \nNative방식과 동일한 App Update통한 배포\n개발사 기준\n개발도구\n각 OS 별 개발 도구(Visual Studio, Eclipse 등) 기반에Cordova SDK 설치\nEclipse , IntelliJ등 일반 개발 도구의 플러그인 설치 ( 개발사 기준 )\n개발실행환경\n각 OS별 개발 도구에 따른 Runtime\n각 제조사별 Emulator\n기능수정\nPlugIn 형태의 추가 개발\n전체 소스 수정 가능\n서버모듈\n없음\nClient 통신 Protocol과 상응하는 Server군 필요\n✔\nFramework VS Platform - Cordova 와 플랫폼 비교\n\n--- 페이지 9 ---\n9\nbizMOB Platform\nbizMOB4 Vue",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 5,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 218,
    "char_count": 651,
    "created_at": "2025-08-01T15:32:19.481Z"
  },
  {
    "id": "8bc991fa_0006",
    "content": "--- 페이지 10 ---\n10\nbizMOB4 Vue – Mobile Platform\nApplication Level\n( HTML5, CSS, TypeScript, Vue , Ionic )\nContainer Service Level\n( Native API )\nBase\nBase\nExt\nCore Level\n( Service Manager )\nApplication Level\n( Java )\nCore Level\n( Service Manager )\nbizMOB™ Server Platform\nProvided \nLevel\nHidden\nLevel\nWeb\nApplication\n• 프로젝트 요건에 따른 Application Source \n ( Html, CSS, TypeScript, Vue , Ionic )\nProvided \nLevel\nHidden\nLevel\nContainer\n• Mobile Base Plug-In ( Push, Camera,, GPS, etc )\n• Project Extends Plug-In\nCore\n• Navigation Management\n• Session Management\n• Window Stack Management\n• Base Plug-In, Process Control\n• Event Management\nApplication\n• 프로젝트 요건에 따른 Application Source \n ( Java Adapter )\nCore\n• Data, Thread, Interface control\n• Device , User Monitoring\n• General Aspect",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 6,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 206,
    "char_count": 779,
    "created_at": "2025-08-01T15:32:19.481Z"
  },
  {
    "id": "8bc991fa_0007",
    "content": "--- 페이지 11 ---\n11\nbizMOB4 Vue – Mobile Platform\n✔\nbizMOB Client Architecture\nWeb App(HTML5, CSS, TypeScript, Vue, Ionic )\nAndroid\nContainer\niOS\nContainer\nWindows\nPhone\nContainer\nPlug-in\nPlug-in\nPlug-in\nPlug-in\nPlug-in\nPlug-in\nAndroid\niOS\nWinodws\nPhone(*)\nOnce-source Multi-use\nHTML, CSS, JS로 업무 UI를 개발하여 각 OS별 Container 상에서 \n동일에서 동작.\n1\n4\n2\n3\n단말 및 OS에 특화된 Container\nOS 별 : Android, iOS\n화면 사이즈별 : 스마트폰, 패드\nPlug-in을 통한 기능 확장\nBase Plug-in : 서버통신, 전화, 카메라, 파일시스템, 전화번호부 등\nCustom Plug-in : 외부기기 연동, 외부 라이브러리 연동 등\nOS 버전 업그레이드에 대한 기술 대응\n새로운 OS나 버전이 나올 때, 시장의 상황에 맞게 Container \n업그레이드 제공",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 7,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 180,
    "char_count": 577,
    "created_at": "2025-08-01T15:32:19.481Z"
  },
  {
    "id": "8bc991fa_0008",
    "content": "--- 페이지 12 ---\n12\nbizMOB4 Vue – Mobile Platform\n✔\nbizMOB Mobile Platform - Hybrid 구성 방식\nbizMOB™ Hybrid App은 HTML UI 템플릿을 단말의 안전한 저장소에 보관하며, 서버에서는 데이터만 가져 옵니다. 이를 통해 \nTransaction 속도를 향상시킬 수 있으며, 강력한 보안 및 버전 관리가 가능합니다.\nApp 영역(Native)\nApp 영역(Native)\n* bizMOB™ 플랫폼은 이 방식도 \n지원합니다.\nUI 리소스를 제외한 최소의 데이터 Transaction 수행, 속도 \n향상\n전송되는 데이터에 대한 암호화 등 보안 처리 \n탁월\n2\nClient 소스는 앱실행시 강제 업데이트 다운로드로 최신버전 \n보장\n3\nbizMOB™ Hybrid App – 샌드박스 방식\n일반적인 Hybrid Web – 웹캐싱 방식\nJSON : 일반업무 \nBinary : 업그레이드\n 첨부파일 \n (보안채널 \n지원)\n Storage\n웹브라우져 캐시\n보안취약,저장용량 한계\n최신 버전 보장 불가\nWeb Cache\n1\nHTML(WebView) 영역\nHTML(WebView) 영역\nHTML/HTTP(S)\n웹서버기반의 \n버전관리\n매번 캐싱 여부 체크\n캐싱된 데이터 \n해킹가능\n앱 변경 없이 \n관리자 포탈에서 \n변경된 템플릿을\n압축 전송하여 \n업그레이드",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 8,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 241,
    "char_count": 675,
    "created_at": "2025-08-01T15:32:19.481Z"
  },
  {
    "id": "8bc991fa_0009",
    "content": "--- 페이지 13 ---\n13\nbizMOB4 Vue – Mobile Platform\n✔\n앱 배포 및 업데이트\nbizMOB™ 하이브리드 앱의 배포는 관리자 포탈과 앱스토어 서버를 통해 이루어지며, 초기 배포 후에는 2단계로 분리된 자동 \n업데이트 메커니즘을 통해 픽스 및 업그레이드 패치가 이루어집니다. B2C용 앱 초기 배포는 Open Market( Google Play store와 \napple appStore ) 을 통해 이루어 집니다. \n초기 \n하이브리드 \n앱\n초기 앱 등록 및 배포\n관리자 \n포탈\n앱스토어 \n서버\n등록\n등록\n접속/다운로드/설치\n자동 업데이트\nUI 업데이트\n(HTML)\n관리자 \n포탈\n등록\n컨테이너(앱) \n업데이트\n(Native)\n앱스토어 \n서버\n등록\n로그인 시 업데이트 \n체크\n업데이트 있으면 \n자동 업데이트 \n진행\n1\n1\n2\n1\n1\n2\n3",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 9,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 160,
    "char_count": 428,
    "created_at": "2025-08-01T15:32:19.481Z"
  },
  {
    "id": "8bc991fa_0010",
    "content": "--- 페이지 14 ---\n14\nbizMOB4 Vue – Mobile Platform\n✔\nbizMOB Platform 제품군 - Service Builder(개발 환경 제품)\nService Builder 는 클라이언트(모바일)와 서버간의 전문 설계/관리 툴로, 전문의 생성, 수정, 테스트 기능을 제공하며, 개발자간에 \n전문 공유를 쉽게 제공하여 변경된 전문을 바로 확인을 할 수 있도록 합니다.\n구 분\n특 징\nJSON 타입 사용 \n웹에서 널리 쓰이는 JSON 타입은 파싱과 빌드를 위한 오픈 라이브러리를 사용할 수 있어,\n 어느 개발자나 쉽게 개발할 수 있음. 이를 통해 생산성을 크게 높임.\n스키마 파일의 생성\nJSON 스키마를 생성하여 서버와 클라이언트간에 주고 받는 데이터를 validation을 할 수 있도록 하여 \n전문의 안전성을 확보.\n전문 테스트\n생성한 전문을 테스트 하는 기능을 제공하여 전문에 대한 입력값과 결과값을 확인\n사용자 편의성\n개발자가 쉽게 사용 가능한 UI를 제공하여 빠르게 전문 생성\n개발자가 전문마다 중복으로 작성하는 소스 코드를 자동 생성\n하나의 서비스에 대해 클라이언트 화면UI에서부터 레거시 \n어댑터까지 서비스 흐름을 한눈에 확인\n개발 생산성\n개발 용이성\n\n--- 페이지 15 ---\n15\nbizMOB4 Vue – Mobile Platform\n✔\nbizMOB Platform 제품군 - Service Builder\n< HE003 전문 >\n개별 POJO 클래스 생성 \n전문1개에 Java 패키지 1개 \nClient 전문 요청",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 10,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 287,
    "char_count": 761,
    "created_at": "2025-08-01T15:32:19.481Z"
  },
  {
    "id": "8bc991fa_0011",
    "content": "--- 페이지 16 ---\n16\nbizMOB4 Vue – Mobile Platform\n✔\nbizMOB Platform 제품군 - Admin Portal\n회사 관리\n1\n단말기 관리\n2\n어플리케이션 관리\n3\n사용자 관리\n4\n통계 관리\n5\n모니터링\n6\n로그 관리\n7\n• 지원 단말 리스트\n• 지원 단말 등록, 삭제\n• 지원 단말 세부 정보\n• 기업용 어플리케이션 리스트\n• 기업용 어플리케이션 등록, 삭제 \n• 기업용 어플리케이션 세부 정보\n• 사용자 리스트\n• 사용자 등록, 삭제\n• 사용자 세부 정보\n• 등록 단말기 리스트\n• 기간별 접속 현황\n• 기간별 사용 현황\n• 업무별 사용 현황\n• 서버 자원 모니터링\n• 서버 상세 정보\n• 포탈 로그\n• 어플리케이션 사용 로그\n• 회사 리스트\n• 회사 정보\n• 회사 등록, 삭제\n\n--- 페이지 17 ---\n17\nbizMOB4 Vue – Mobile Platform\nNative PlugIn 연동 개발 시에 Front 화면에서 API 호출에 의한 간편하게 Native기능을 구현 할 수 있습니다.\nbizMOB™ Developer Site, Sample App을 통해 이슈, Forum, API 등 다양한 정보를 제공 하고 있습니다.\n[Sample App \nExamples]\n[ API WebSite \n]\n✔\nbizMOB Platform 제품군 - Xross 와 Core ( Javascript API )",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 11,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 242,
    "char_count": 697,
    "created_at": "2025-08-01T15:32:19.481Z"
  },
  {
    "id": "8bc991fa_0012",
    "content": "--- 페이지 18 ---\n18\nbizMOB4 Vue – Mobile Platform\n항목\n설명\n대표기능\nApp\nApp(bizMOB) 관련 API\n앱 종료, 앱 타임아웃\nDevice\n단말기 관련 API\n단말기 정보\nSystem\nOS 제공 기능 API\n전화, 문자, 지도\nContacts\n연락처 관련 API\n연락처목록 검색\nNetwork\n네트워크 관련 API\nbizMOB 서버 통신\nFile\n파일 관련 API\n파일 정보, 복사, 삭제, 압축, 다운로드, 업로드\nProperties\n영구 저장소 관련 API\n영구 데이터 저장, 삭제\nStorage\n휘발성 저장소 관련 API\n휘발성 데이터 저장, 삭제\nDataBase\n컨테이너 SQLite DB 관련 API\nDB 연결, CRUD\nLogger\nWeb Application 로깅 관련 기능\n로그 기록\n✔\nbizMOB Platform 제품군 - bizMOB Xross 와 Core ( Javascript API )",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 12,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 157,
    "char_count": 477,
    "created_at": "2025-08-01T15:32:19.481Z"
  },
  {
    "id": "8bc991fa_0013",
    "content": "--- 페이지 19 ---\n19\nbizMOB4 Vue – Mobile Platform\n✔\nbizMOB Client Architecture – Xross, Core\nContainer Core\nBase PlugIn\nCustom\nPlugIn\nbizMOB Container Framework\nXross\nCore\nbizMOB Web Framework\nMobile Device ( OS )\nWeb\nApplicatio\nn\nHTTP\nJSON\nNetwork\nProperties\nStorage\nEtc\nClass\nProperties\nNetwork\nStorage\nEtc\nInterface\nNetwork\n\n--- 페이지 20 ---\n20\nbizMOB4 Vue – Mobile Platform\n✔\nbizMOB Client Architecture – Event\nContainer Core\nBase PlugIn\nCustom\nPlugIn\nbizMOB Container Framework\nXross\nCore\nbizMOB Web Framework\nMobile Device ( OS )\nWeb\nApplicatio\nn\nEvent\nJSON\nEventManager\nNetwork\naddEvent\nStorage\nEtc\nInterface\nEvent\nHandler\nEvent\nHandler\nRespon\nser\nEvent\nJSON",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 13,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 169,
    "char_count": 661,
    "created_at": "2025-08-01T15:32:19.481Z"
  },
  {
    "id": "8bc991fa_0014",
    "content": "--- 페이지 21 ---\n21\nbizMOB4 Vue – Mobile Platform\n✔\nbizMOB Client Architecture – Callback\nContainer Core\nBase PlugIn\nCustom\nPlugIn\nbizMOB Container Framework\nXross\nCore\nbizMOB Web Framework\nMobile Device ( OS )\nWeb\nApplicatio\nn\nCallback\nJSON\nCallbackManager\nNetwork\nEtc\nInterface\nUser\nCallback\nUser\nCallback\nCallback\nJSON\nNetwork\nNetwork\nStore\nResponser",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 14,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 91,
    "char_count": 351,
    "created_at": "2025-08-01T15:32:19.481Z"
  },
  {
    "id": "8bc991fa_0015",
    "content": "--- 페이지 22 ---\n22\nbizMOB4 Vue – Mobile Platform\n✔\nbizMOB Client Architecture - \n통신프로토콜\n모바일 클라이언트 <-> 모바일 서버\n - JSON 전문 over HTTP\n - 보안을 강화하기 위해서 SSL을 적용한 HTTPS 사용 가능\nbizMOB Server\n( Switch , Web Server 연동)\nLegacy Server\nbizMOB Container\nRequest over HTTP(S)\nSocket, HTTP, UDP, \netc\n-URI\n > 전문번호\n-Parameter\n > JSON 전문\n- Defined Protocol\n- Defined Message\nResponse over \nHTTP(S)\n-By-pass\nbizMOB Web\nRequest over HTTP\n-URI\n > 전문번호\n-Parameter\n > JSON 전문\nResponse over \nHTTP(S)\n- javascript Function Call\n > Callback ID\n- Parameter\n > JSON 전문\nSocket, HTTP, UDP, \netc\n- Defined Protocol\n- Defined Message\n\n--- 페이지 23 ---\n23\nbizMOB4 신규/변경 기능\nbizMOB4 Vue",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 15,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 184,
    "char_count": 646,
    "created_at": "2025-08-01T15:32:19.481Z"
  },
  {
    "id": "8bc991fa_0016",
    "content": "--- 페이지 24 ---\n24\nbizMOB4 Vue - Directory Structures 1/2\n프로젝트 폴더 구성\n폴더/파일 명\nDescription\n/dist\n프로젝트 배포시에 빌드된 컨텐츠 파일이 생성되는 폴더. 해당 폴더 아래 환경설정 이름을 가진 폴더가 생성되고 그 \n하위에 배포 컨텐츠가 생성된다.\n/node_module\nPackage.json에 정의된 설치한 모든 플러그인 파일들이 생성된다. \n주의) 용량이 매우 크므로 svn에 저장하지 않는다.\n/public\n정적인 Resource를 저장하는 공간으로 폰트, 외부JS lib와 같은 것들만 저장한다.\n/public/bizMOB\nNative API script lib 주의) 수정 금지.\n/public/mock\n서버 전문이 정의되고 서버 개발이 완료되기 전까지 사용하기 위한 mock데이터를 정의한 json파일 폴더\n/public/extlib\n외부 javascript lib 파일 저장 폴더\n/public/fonts\n특정 폰트 사용시 저장 폴더. Default : Google NotoSans Font\nIndex.html\nWelcome 파일\n/src\n프로젝트 소스 폴더\n/src/assets\n프로젝트 리소스파일 저장 폴더 css, image 파일들을 저장한다.\n/src/locales\n다국어 설정시 언어팩 저장 폴더\n/src/router\nView Rounting 설정 폴더\n/src/shared\n프로젝트 공통 기능 class 정의폴더. bizMOB, constants(상수선언), project( 프로젝트 공통 ) 으로 분류",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 16,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 270,
    "char_count": 780,
    "created_at": "2025-08-01T15:32:19.481Z"
  },
  {
    "id": "8bc991fa_0017",
    "content": "/src/shared\n프로젝트 공통 기능 class 정의폴더. bizMOB, constants(상수선언), project( 프로젝트 공통 ) 으로 분류\n주의) bizMOB 폴더내 파일은 수정 금지.\n/src/store\n공유 데이터 사용 Vuex plugin 폴더 주의) 수정 금지.\n/src/views\nView Screen 저장 폴더",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 17,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 63,
    "char_count": 186,
    "created_at": "2025-08-01T15:32:19.481Z"
  },
  {
    "id": "8bc991fa_0018",
    "content": "--- 페이지 25 ---\n25\nbizMOB4 Vue - Directory Structures 2/2\n프로젝트 폴더 구성\n폴더/파일 명\nDescription\n/src/App.vue\nBootstraping vue 파일. \n주의) 어플리케이션 초기화 관련 로직 외에는 코딩하지 않는다.\n/src/main.ts\nBootstraping Class 파일. \n주의) 어플리케이션 초기화 관련 로직 외에는 코딩하지 않는다.\n/env\n/env.xxxxxxx\n어플리케이션 환경변수 정의 파일\n/package.json\n/package-lock.json\n설치한 npm 플러그인 정보 파일\n주의) 플러그인 설치시 cli를 통해서만 설치/삭제 한다.\n/vue.config.js\nVue framework 설정 파일",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 18,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 130,
    "char_count": 385,
    "created_at": "2025-08-01T15:32:19.481Z"
  },
  {
    "id": "8bc991fa_0019",
    "content": "--- 페이지 26 ---\n26\nbizMOB4 Vue – 화면제어\nVue Router Class를 활용하여 화면을 제어하며 bizMOB3.x 의 WebView 스택이 중첩되는 구조가 아님. \nOpen\nClose\nReplace\n새로운 화면을 생성\n- 이전 화면의 상태를 보존이 필요할 경우 ( 화면 목록 )\n- 일반적인 게시판 목록/상세 구조 개발 시 사용\nSample Project ( Vue3 – Navigator 참조 )\ne.g ) this.$route.push(“/bbs/detail”);\n다른 화면으로 이동\n- History Back시 이전 화면으로 돌아가기 \n- 화면의 스텝이 단계별로 진행되는 경우 사용 ( 단계별 화면 이동 \n설계시 )\nSample Project ( Vue3 – Navigator 참조 )\ne.g ) this.$route.replace(“/bbs/step2”);",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 19,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 148,
    "char_count": 442,
    "created_at": "2025-08-01T15:32:19.482Z"
  },
  {
    "id": "8bc991fa_0020",
    "content": "--- 페이지 27 ---\n27\nbizMOB4 Vue – 환경 설정\napp.config – 앱 구동 설정, 환경별로 설정 추가 가능\n/public/bizMOB/app.config\n-\n기본적으로 Production(운영), UAT(staging), SIT(개발환경)\n을 제공한다.\n-\n추가 환경설정이 필요할 경우 Native팀과 협의하여 추가 \n가능하다.\nDepth 1\nDepth 2\nDepth 3\nDescription\n설정값\nVERSION \nNATIVE\n앱 버전 정보\n4.0 ( 임의 설정 금지 )\nFRONT\n프론트 버전 정보\n4.0 ( 임의 설정 금지 )\nSETTINGS\nTYPE\n앱 타입 \nB2B , B2C\nAPPLICATION_TYPE\n앱 모드 \nMOBILE , WEB\nNOTICE_USE\n공지기능 사용 여부\ntrue, false\nSECURITY\nCONTENTS_INTEGRIT\nY\nContents 위변조검사 실행 여부\ntrue, false\nINACTIVITY_SECOND\nS\n앱 미사용 시간 설정(초단위)\n0 (Unlimited), 1 이상 정수\nSTATUSBAR\nMODE\n표시 모드 설정\nDEFAULT , EXTEND , FULL\nBGCOLOR\n배경색\nRGB 값.\nTEXT_BLIGHT\n야간모드 설정\nBLACK/WHITE\nWEBVIEW\nBACKGROUNDCOLOR\nNORMAL\n웹뷰 배경색\naRGB 값.\nDIALOG\n팝업 창 배경색\naRGB 값.\nNETWORK\nFILE\nCONNECT\n파일 업로드/다운로드시 서버 Connection Timeout 시간설정\n(초단위)\n1 이상 정수\nREAD",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 20,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 246,
    "char_count": 782,
    "created_at": "2025-08-01T15:32:19.482Z"
  },
  {
    "id": "8bc991fa_0021",
    "content": "팝업 창 배경색\naRGB 값.\nNETWORK\nFILE\nCONNECT\n파일 업로드/다운로드시 서버 Connection Timeout 시간설정\n(초단위)\n1 이상 정수\nREAD\n파일 업로드/다운로드시 서버 ReadTimeout시간설정(초단위)\n1 이상 정수\nAPI\nCONNECT\n전문 통신시서버 Connection Timeout시간설정(초단위)\n1 이상 정수\nREAD\n전문 통신시 서버 ReadTimeout시간설정(초단위)\n1 이상 정수\nPUSH\nURL\nbizPush 서버 URL\nURL String\n앱 설정 세부항목",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 21,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 98,
    "char_count": 287,
    "created_at": "2025-08-01T15:32:19.482Z"
  },
  {
    "id": "8bc991fa_0022",
    "content": "--- 페이지 29 ---\n29\nbizMOB4 Vue – LifeCycle\n개요\n일반 웹 파일이 렌더링 되는 과정처럼 Vue프레임워크에서는 각 Vue Component들이 생성/삭제 될때 마다 각 과정별로 Event Handler \n인터페이스를 제공한다. Component 의 전체 lifecycle은 오른쪽 그럼과 같다.\nDescription\nHooking Method\nDescription\nsetup()\n렌더링 엔진이 Component를 로드 했을때 발생하는 이벤트. Composition API인 setup 메소드로 정의 할 \n수 있다.\nbeforeCreate()\n렌더링 엔진이 Component instance 생성/초기화 한 직후에 발생하는 이벤트.\ncreated()\nComponent instance의 전체 Options API를 실행한 직후에 호출되는 이벤트\nbeforeMount()\n생성된 Component instance를 DOM에 삽입 직전에 호출되는 이벤트\nmounted()\nDOM에 로드 후 호출되는 이벤트. Window Object의 load 이벤트와 동일하다.\nbeforeUpdate()\nComponent내 Re-rendering/painting 되기 직전에 호출되는 이벤트\nupdate()\nComponent내 Re-rendering/painting 된 후에 호출되는 이벤트\nBeforeUnmount()\nComponent가 DOM에서 삭제되기 전에 발생하는 이벤트\nunmounted()\nComponent가 DOM에서 삭제 된 후 발생하는 이벤트",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 22,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 252,
    "char_count": 766,
    "created_at": "2025-08-01T15:32:19.482Z"
  },
  {
    "id": "8bc991fa_0023",
    "content": "--- 페이지 31 ---\n31\nbizMOB4 Vue – 코딩 준수사항\nbizMOB에서 javascript Library 수정 금지 ( Xross, Core )\n /public/bizMOB 하위 javascript Library에 대한 재정의 금지, 개선사항 및 버그가 존재하는 경우 담당자에게 수정을 요청\nshared 폴더내 Service Classes 수정 금지\n /src/shared/bizMOB 하위 typescript services에 대한 수정 금지. 개선사항 및 버그가 존재하는 경우 담당자에게 수정을 요청\n변수, 함수 명명\n 의미있는 이름으로 부여\n 변수 및 함수는 Camel Casing(소문자를 기본으로, 구분되는 단어의 첫글자를 대문자로) 규약 적용\n 올바른 예) userName(사용자명), orderDate(주문일)\n 잘못된 예) a, num1, Value, tmp\n 상수는 대문자를 기본으로 하고 구분되는 단어 사이에 ‘_’ 삽입\n ex) GRADE_A(A등급)\n bizMOB 전문의 request는 ‘req’ + 전문코드 선언\n bizMOB 전문의 response는 ‘res’ + 전문코드 선언\nCode Format\n 제어문(if, for 등)에서 {} 생략없이 사용하고 {}는 줄바꿈을 사용하여 코딩\n String을 선언할 경우 ‘ 대신 “ 사용\n 조건문/반복문에 사용되는 비교값은 하드코딩하지 않고 상수로 선언하여 사용\n 상수 변수는 대문자로 단어의 구분은 “_”를 사용하고 Page변수내 선언하거나 공통파일( ex : common.js )을 생성하여 관리.\n준수사항",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 23,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 279,
    "char_count": 782,
    "created_at": "2025-08-01T15:32:19.482Z"
  },
  {
    "id": "8bc991fa_0024",
    "content": "--- 페이지 32 ---\n32\nbizMOB4 Vue – 코딩 준수 사항\n조건/반복문\n 분기하는 사유 또는 조건을 설명. 비교값은 변수명을 의미있게 부여하여 사용한다.\nStatic Resource\n 정적인 리소스들은 반드시 public 폴더 하위에 두어 사용합니다. \n > bizMOB : bizMOB Framework 관련 파일들\n > extLib : 외부 JS library 를 위한 폴더\n > fonts : 앱에서 사용할 font 파일. 기본 폰트로 Google NotoSans 폰트가 있다. ( 다국어 프로젝트일 경우는 필수 )\n > mock : 서버 전문 통신시 mock data를 활용하기 위한 response json 설정 파일 폴더\n준수사항\n1.\n //Correct Case\n2.\n// 선택된 제품이 사용자가 선택할 수 있는 제한 갯수를 넘을 경우\n3.\n if(productCheckList.length > \nbizMOB.Constant.MAXIMUM_COUNT)\n4.\n {\n5.\n }\n1.\n// Bad Case\n2.\n // 선택된 제품이 사용자가 선택할 수 있는 제한 갯수를 넘을 경우\n3.\n if(productCheckList.length > 10 )\n4.\n {\n5.\n }",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 24,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 205,
    "char_count": 610,
    "created_at": "2025-08-01T15:32:19.482Z"
  },
  {
    "id": "8bc991fa_0025",
    "content": "--- 페이지 33 ---\n33\nbizMOB4 Vue – Vuex 활용하기\nVuex를 사용하는 이유\n기본적으로 vue 생태계에서 컴포넌트 간 여러 정보들을 관리하려면 부모-자식 관계로 데이터들을 넘겨주고 받아야한다. 하지만 현실적으로 복잡한 컴포넌트 관계속에서 \n계속 주고 받으려면 여러 컴포넌트 파일에서 data 속성을 관리해주어야 하는 단점이 있다.\n따라서 여러 컴포넌트에서 공유해야할 데이터가 있다면 Vuex를 활용하여 데이터를 주고 받으면 편리하다.\nState VS WebStorage\nWeb 어플리케이션 개발시 대표적인 데이터 공유 Storage 기능으로 브라우져의 Web Storage 기능이 있다.\n스토리지는 Local/Session 두가지 종류의 스토리지 기능을 제공 하지만 몇가지 차이점을 이해 해야한다.\nVuex(state)\n LifeCycle : State는 어플리케이션 종료시( Framework Reload 또는 브라우져 새로 고침 ) 데이터가 초기화\n Data 공유 : 실시간으로 Component간에 공유된다.\n 적용대상 : Application 전체 및 여러 Component끼리 실시간으로 공유되어야 하며 Application 시작시 \n 데이터 갱신이 필요한 경우 e.g ) 로그인 후 사용자 정보, 사용자별 메뉴 권한\nLocalStorage\n LifeCycle : 영구.\n Data 공유 : 각 Component에서 매번 데이터를 호출하여 갱신하여야 한다..\n 적용대상 : Application 전체 및 고정 데이터로서 여러 Component에서 공유할 데이터가 필요한 경우",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 25,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 293,
    "char_count": 787,
    "created_at": "2025-08-01T15:32:19.482Z"
  },
  {
    "id": "8bc991fa_0026",
    "content": "적용대상 : Application 전체 및 고정 데이터로서 여러 Component에서 공유할 데이터가 필요한 경우\n \nSessionStorage\n LifeCycle : 브라우져 종료시\n Data 공유 : 각 Component에서 매번 데이터를 호출하여 갱신하여야 한다..\n 적용대상 : Application 전체 및 고정 데이터로서 여러 Component에서 공유할 데이터가 필요한 경우",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 26,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 78,
    "char_count": 216,
    "created_at": "2025-08-01T15:32:19.482Z"
  },
  {
    "id": "8bc991fa_0027",
    "content": "--- 페이지 34 ---\n34\nbizMOB4 Vue – Vuex 활용하기\nService로 사용하기\nbizMOB GlobalSharedService 를 import 합니다. setup composition API내 서비스를 생성합니다.\nimport GlobalSharedService from “@/shared/bizMOB/GlobalDataService”;\nsetup(){\n const { getGlobalDataByKey,removeGlobalDataByKey, setGlobalDataByKey } = GlobalSharedService();\n return { getGlobalDataByKey,removeGlobalDataByKey, setGlobalDataByKey }\n}\n제공된 mutations를 사용하여 데이터를 사용합니다. 저장할 데이터 Type은 원하는 형태로 지정시 자동으로 \n저장됩니다.\nmounted(){\n this.setGlobalDataByKey(\"mydata1\",\"Composition String\");\n this.setGlobalDataByKey(\"mydata2\",{data1:\"Composition JSON\"} );\n},\nClass로 사용하기\nbizMOB GlobalDataUtil Class를 import 합니다. setup composition API내 인스턴스를 생성합니다\nimport GlobalDataUtil from '@/shared/bizMOB/GlobalDataUtil';\n setup() {\n const gdu = new GlobalDataUtil();",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 27,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 225,
    "char_count": 784,
    "created_at": "2025-08-01T15:32:19.482Z"
  },
  {
    "id": "8bc991fa_0028",
    "content": "setup() {\n const gdu = new GlobalDataUtil();\n return { gdu }\n },\n제공된 methods를 사용하여 데이터를 사용합니다. 저장할 데이터 Type은 원하는 형태로 지정시 자동으로 \n저장됩니다.\n this.gdu.setGlobalDataByKey(\"Function1\",\"Function String\" );\n this.gdu.setGlobalDataByKey(\"Function2\",{data1:\"Function JSON\"} );\n1. Custom state 사용을 원할 경우 ProjectSharedModule.ts를 수정하여 \n직접 구현할 수 있습니다.\n2.별도 모듈 생성시에는 등록과정이 필요합니다.",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 28,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 116,
    "char_count": 361,
    "created_at": "2025-08-01T15:32:19.482Z"
  },
  {
    "id": "8bc991fa_0029",
    "content": "--- 페이지 35 ---\n35\nbizMOB4 Vue – mock 데이터 활용하기\nmock data 정의\n 프로젝트 초기 Server 전문이 미 완성일 경우 Service Builder에 정의된 내용을 기반으로 bizMOB 전문 프로토콜의 Response Object를 정의하여 사용한다.\n mock data file 생성 component 내 사용 예시\n1.\n// 기본 포맷\n2.\n{\n3.\n \"header\": {\n4.\n\"result\": true,\n5.\n\"error_code\": \"\",\n6.\n\"error_text\": \"\",\n7.\n\"trcode\": \" HAL0010\", // Service Builder에 정의된 TrCode\n8.\n\"trcodeName\": \"\"\n9.\n },\n10.\n \"body\": {\n11.\n // Service Builder에 정의된 내용 작성\n12.\n }\n13.\n}\n1.\nthis.$bizMOB.Network.requestTr({\n2.\n _bMock: true , // true로 설정시 정의한 mock데이터를 \n리턴\n3.\n _sTrcode: \"HAL0010\",\n4.\n _oBody: {\n5.\n // Service Builder에 정의된 내용 작성 \n6.\n },\n7.\n _fCallback: (res: any) => {\n8.\n // json에 정의된 mock data가 parameter로 전달\n9.\n } \n10.\n});",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 29,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 210,
    "char_count": 693,
    "created_at": "2025-08-01T15:32:19.482Z"
  },
  {
    "id": "8bc991fa_0030",
    "content": "--- 페이지 36 ---\n36\nbizMOB4 Vue – Component\n개요\n컴포넌트를 생성하기 위한 html, vue 파일 기본 설정을 따라 생성한다.\nComponent 폴더 생성\n프로젝트 내 메뉴 또는 기능에 맞게 폴더를 생성하여 하위에 Templet, Vue파일을 생성한다. 파일명은 UX설계서에 정의된 화면 ID를 기준으로 생성한다.\n ( 그림 1-1 )\nTemplet 파일 생성\n퍼블리싱 된 html파일을 복사하여 Templet파일에 붙여 놓고 저장한다. ( 그림 1-2 )\nVue 파일 생성\nVue 파일을 생성하고 Component에서 사용할 Templet 파일을 지정한다. ( 그림 1-3 )\n그림1-1\n그림 1-2 ( Intro.html )\n그림 1-3( Intro.vue )",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 30,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 137,
    "char_count": 388,
    "created_at": "2025-08-01T15:32:19.482Z"
  },
  {
    "id": "8bc991fa_0031",
    "content": "--- 페이지 37 ---\n37\nbizMOB4 Vue – Routes\n개요\n각 컴포넌트를 호출하기 위한 라우팅 정보를 세팅한다. \nDescription\nrouter/index.ts\n라우터 클래스를 로딩하여 선언할 수 있는 최상위 Root Router class이며 프로젝트에서 생성한\n라우팅 클래스를 import하여 설정 할 수 있다. ( 그림 1-1 그림 참조 )\nrouter/xxxx.ts ( Routes Class )\n라우터 폴더 내에 생성하고 모든 컴포넌트에 대하여 라우팅 정보를 생성한다.\n선언시 아래 Properties를 사용 하여 정의 한다. ( 그림 1-2 그림 참조 )\nProperies\nDescription\npath\n컴포넌트 호출시 URI로 호출할 경우에 대한 path 설정을 지정한다. 기본값은 \"/“(root)\n로 설정되어 있다.\ncomponent\nPath 설정과 매핑할 Component을 import한 후 class명을 설정한다.\nredirectTo\n특정 uri를 redirect 시키고 싶을때 설정한다.\n그림1-1\n그림 1-2",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 31,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 186,
    "char_count": 533,
    "created_at": "2025-08-01T15:32:19.482Z"
  },
  {
    "id": "8bc991fa_0032",
    "content": "--- 페이지 38 ---\n38\nbizMOB4 Vue - Component Communication\n컴포넌트간 데이터 공유를 위한 글로벌 공유 데이터 설정하기\n개요\nDescription\nService Import \nGlobal Data 설정을 위한 Service Class를 import합니다.\nimport GlobalSharedService from '@/shared/bizMOB/GlobalDataService’;\nsetup API에서 instance를 생성한다.\nconst { getGlobalDataByKey,removeGlobalDataByKey, setGlobalDataByKey } = GlobalSharedService();\nreturn { getGlobalDataByKey, setGlobalDataByKey, removeGlobalDataByKey, gdu }\nbizMOB API \n데이터 저장/삭제/조회는 API에서 제공하는 메서드를 통해 사용합니다.\nMethods\nDescription\nsetGlobalDataByKey\n데이터 저장, 데이터는 Script에서 제공하는 기본 데이터 \n타입으로 Key, Value 를 인자로 사용한다. (그림 1-1 참조)\ngetGlobalDataByKey\n데이터 조회, 저장시 지정한 Key값으로 조회한다. (그림 1-1 \n참조)\nremoveGlobalDataByKey\n데이터 삭제, 저장시 지정한 Key값으로 삭제한다. (그림 1-1 \n참조)\n그림 1-1",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 32,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 228,
    "char_count": 733,
    "created_at": "2025-08-01T15:32:19.482Z"
  },
  {
    "id": "8bc991fa_0033",
    "content": "--- 페이지 39 ---\n39\nbizMOB4 Vue - 다국어설정 ( i18n Module )\n {lang code}.json\n개요\n다국어 지원은 i18n Module을 사용합니다.\n참조 ) \n https://vue-i18n.intlify.dev/\nDescription\n지원 언어팩 생성하기\n/src/locale/ 폴더 하위에 lang cd값(ISO 639-1 codes 2digit)을 이름으로 하여 파일을 \n생성합니다.\n언어팩 설정\n생성한 언어팩 파일 내에 Project 규칙에 맞게 json 형태로 데이터를 작성합니다.\n{\n  \"intro\": {\n    \"title\": \"bizMOB sample project\"\n  },\n    \"main\": {\n      \"greeting\": \"Wellcome\",\n      \"name_greeting\": \"Hello {name}\"\n    }\n}\n모듈 문법 활용\nhttps://vue-i18n.intlify.dev/api/general.html#createi18n",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 33,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 156,
    "char_count": 507,
    "created_at": "2025-08-01T15:32:19.482Z"
  },
  {
    "id": "8bc991fa_0034",
    "content": "--- 페이지 40 ---\n40\nbizMOB4 Vue - 다국어 설정( 서비스등록 )\n다국어 프로젝트의 경우 서비스를 별도로 등록해야 동작을 하며 프로젝트 기본값은 서비스가 시작되지 않습니다.\n개요\nService import\nbizMOB LocalService Class를 import 합니다. setup Composition API를 활용하여 서비스를 \n생성합니다.\nsetup(){\n const localSvc = new LocaleService();\n \n return { localSvc }\n}\nService 등록\nApp.vue 파일을 열고 LocalService를 시작합니다. mounted Composition API를 활용하여 \n서비스를 등록합니다.\nmounted(){\n this.localSvc.initLocale(); \n},\n언어변경 설정\n사용자/어플리케이션내에서 언어변경시 감지를 위한 이벤트 및 LocalService의 이벤트 \n핸들러를 등록해 줍니다.\n watch: {\n '$i18n.locale': function(newLocaleCd) {\n this.localSvc.changeLocale(newLocaleCd);\n },\n },",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 34,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 190,
    "char_count": 587,
    "created_at": "2025-08-01T15:32:19.482Z"
  },
  {
    "id": "8bc991fa_0035",
    "content": "--- 페이지 41 ---\n41\nbizMOB4 Vue - Logger\n어플리케이션 퍼포먼스를 위해서 로그 레벨을 환경별로 자동으로 조정되는 별도 Log Class를 사용합니다.\n개요\nlogger Class\nGlobal 사용등록된 로거 클래스를 바로 사용할 수 있습니다.\nthis.$logger\nMethods\nLog level에 맞게 각 로그 메소드를 사용합니다.\nMethods\nDescription\nlog\n개발시 필요한 정보를 표시합니다.\nInfo\n구간별 데이터 정보를 표시합니다.\nwarn\n예외처리에 대한 별도 로그를 표시합니다.\nerror\n에러 발생시 로그를 표시합니다.\n\n--- 페이지 42 ---\n42\nbizMOB 신규/ 변경 Native PlugIn\n\n--- 페이지 43 ---\n43\nbizMOB4 Vue – 신규/변경 Native PlugIns\n개요\n전체 네이티브 플러그인 사용 API정보는 아래 사이트를 참조 하십시오.\nhttps://developers.mcnc.co.kr/\nDescription\nClass\nbizMOB.Localization\n-\n다국어 정보 처리 \nMethods\nOptions\nreturn\nDescription\nsetLocale(options)\n_fCallback : 콜백 함수\nVoid\n현재 언어 정보를 저장합니다.\ngetLocale(options)\n_sLocaleCd : 설정 언어코드\n_fCallback : 콜백 함수\n{ locale : 설정값 }\n현재 설정된 언어정보를 가져옵니다.",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 35,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 248,
    "char_count": 738,
    "created_at": "2025-08-01T15:32:19.483Z"
  },
  {
    "id": "8bc991fa_0036",
    "content": "--- 페이지 44 ---\n44\nbizMOB4 Vue – 신규/변경 Native PlugIns\nDescription\nClass\nbizMOB.Network\n-\nbizMOB Server 통신 플러그인\nMethods\nOptions\nreturn\nDescription\nchangeLocale(options)\n_sLocaleCd : 설정 언어코드\nVoid\n통신시 요청할 언어 정보를 설정합니다.\nrequestLogin (options)\n_bMock : mock data 사용여부\n_sUserId : 인증 받을 사용자 아이디입니다.\n_sPassword : 인증 받을 사용자 패스워드입니다.\n_sTrcode : 전문코드입니다.\n_oHeader : 전문 Header 객체입니다.\n_oBody : bizMOB전문 Body 객체입니다.\n_bProgressEnable(default:true) : 서버에 요청 통신 \n중일때 화면에 progress 를 표시할지에 대한 \n여부입니다.\n_fCallback : 서버와 통신 후 실행될 callback \n함수입니다.\n{\n \"header\" : Object(전문 통신의 Header),\n \"body\" : Object(전문 통신의 Body)\n}\nbizMOB 서버에 사용자 정보 인증을 요청\n합니다.\nrequestTr (options)\n_bMock : mock data 사용여부\n_sTrcode : 전문코드입니다.\n_oHeader : 전문 Header 객체입니다.\n_oBody : bizMOB전문 Body 객체입니다.\n_bProgressEnable(default:true) : 서버에 요청 통신",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 36,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 250,
    "char_count": 787,
    "created_at": "2025-08-01T15:32:19.483Z"
  },
  {
    "id": "8bc991fa_0037",
    "content": "_oBody : bizMOB전문 Body 객체입니다.\n_bProgressEnable(default:true) : 서버에 요청 통신 \n중일때 화면에 progress 를 표시할지에 대한 \n여부입니다.\n_fCallback : 서버와 통신 후 실행될 callback \n함수입니다.\n{\n \"header\" : Object(전문 통신의 Header),\n \"body\" : Object(전문 통신의 Body)\n}\nbizMOB 서버와 전문 통신을 합니다. \n(post방식)",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 37,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 84,
    "char_count": 254,
    "created_at": "2025-08-01T15:32:19.483Z"
  },
  {
    "id": "8bc991fa_0038",
    "content": "--- 페이지 45 ---\n45\nbizMOB4 Vue – 신규/변경 Native PlugIns\nDescription\nClass\nbizMOB.Push\n-\nbizMOB Push Server 통신 플러그인\nMethods\nOptions\nreturn\nDescription\nregisterToServer\n(options)\n _sUserId\n : 사용자 ID\n_fCallback : 실행 후 호출될 callback \n함수입니다.\n{\n \"result\" : Boolean(true : 성공, false : 실패),\n \"resultCode\" : String(결과 코드),\n \"resultMessage\" : String(결과 메세지)\n}\n푸시서버에 사용자 등록 \n후 결과 값을 반환합니다. _fCallback의 파라미터\n로 반환됩니다.\n\n--- 페이지 46 ---\n46\nbizMOB4 Vue – Native PlugIns\nDescription\nClass\nbizMOB.App\n-\nbizMOB Native App 제어 플러그인\nMethods\nOptions\nreturn\nDescription\nexit\n(options)\n_sType(Default : kill) : 어플리케이션 \n종료 유형입니다. \nkill : 어플리케이션 종료, \nlogout : 어플리케이션 재시작.\nVoid\n어플리케이션을 종료합니다.\ncallPlugIn\n(options)\nId: 커스텀 플러그인의 id\nParam : 커스텀 플러그인에서 사용할 \n파라미터\n{플러그인 리턴값}\n커스텀 플러그인을 호출합니다.",
    "metadata": {
      "source_file": "data/source/guides/tutorials/bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_name": "bizMOB4(Vue) 개발자가이드 For Mobile.pdf",
      "file_type": "pdf",
      "chunk_index": 38,
      "total_chunks": 39,
      "chunk_strategy": "guides/tutorials",
      "chunk_size": 800,
      "overlap": 100,
      "original_metadata": {
        "title": "bizMOB4Vue 모바일 개발자 가이드.v.1.0",
        "author": "",
        "pages": 47,
        "parsed_at": "2025-08-01T07:01:17.020819"
      },
      "position": {}
    },
    "tokens": 237,
    "char_count": 754,
    "created_at": "2025-08-01T15:32:19.483Z"
  },
  {
    "id": "3960dffd_0000",
    "content": "<class name=\"Device\">\n <description>\n Front화면 개발시 Native 앱 또는 디바이스 정보를 제공하는 Class.\n 디바이스/앱 정보는 bizMOB Native app에서 직접 이 Class내 프로퍼트로 저장합니다.\n 저장 시점은 3.x에서는 웹뷰 생성시마다 loading complete 또는 Resume 이벤트시에 저장되며,\n 4.x에서는 SPA방식의 환경으로 loading complete 초기1회만 정보를 저장합니다.\n </description>\n <method name=\"isIOS\">\n <description>실행환경이 iOS인지 아닌지 유무 내용을 제공</description>\n <request />\n <response>\n <type>boolean</type>\n <response>iOS 환경 여부를 나타내는 Boolean 값</response>\n <value>\n <case condition=\"iOS 환경\">true</case>\n <case",
    "metadata": {
      "source_file": "data/source/guides/api-docs/bizMOB-Device.mdx",
      "file_name": "bizMOB-Device.mdx",
      "file_type": "mdx",
      "chunk_index": 0,
      "total_chunks": 2,
      "chunk_strategy": "guides/api-docs",
      "chunk_size": 500,
      "overlap": 0,
      "original_metadata": {
        "word_count": 92,
        "parsed_at": "2025-08-01T07:01:15.352524"
      },
      "position": {}
    },
    "tokens": 160,
    "char_count": 498,
    "created_at": "2025-08-01T15:32:19.502Z"
  },
  {
    "id": "3960dffd_0001",
    "content": "condition=\"기타 환경\">false</case>\n </value>\n <example>true</example>\n </response>\n <example>\n ```js\n if (bizMOB.Device.isIOS()) {\n requestTr.bioType = \"face\";\n } else {\n requestTr.bioType = \"finger\";\n }\n ```\n </example>\n </method>\n</class>",
    "metadata": {
      "source_file": "data/source/guides/api-docs/bizMOB-Device.mdx",
      "file_name": "bizMOB-Device.mdx",
      "file_type": "mdx",
      "chunk_index": 1,
      "total_chunks": 2,
      "chunk_strategy": "guides/api-docs",
      "chunk_size": 500,
      "overlap": 0,
      "original_metadata": {
        "word_count": 92,
        "parsed_at": "2025-08-01T07:01:15.352524"
      },
      "position": {}
    },
    "tokens": 66,
    "char_count": 236,
    "created_at": "2025-08-01T15:32:19.503Z"
  },
  {
    "id": "1dce56e8_0000",
    "content": "<class name=\"Network\">\n <description>\n Front화면 개발시 Native 앱 또는 디바이스 정보를 제공하는 Class.디바이스/앱 정보는 bizMOB Native app에서 직접 이 Class내 프로퍼트로 저장합니다.\n 저장 시점은 3.x에서는 웹뷰 생성시마다 loading complete 또는 Resume 이벤트시에 저장되며 4.x에서는 SPA방식의 환경으로 loading complete 초기1회만 정보를 저장합니다.\n </description>\n <method name=\"requestTr\">\n <description>bizMOB Server 전문 통신 기능</description>\n <request>\n <parameter name=\"_sTrcode\" type=\"string\">\n bizMOB Server 전문 코드(TrCode)\n </parameter>\n <parameter name=\"_oHeader\" type=\"Object\" Optional>",
    "metadata": {
      "source_file": "data/source/guides/api-docs/bizMOB-Network.mdx",
      "file_name": "bizMOB-Network.mdx",
      "file_type": "mdx",
      "chunk_index": 0,
      "total_chunks": 6,
      "chunk_strategy": "guides/api-docs",
      "chunk_size": 500,
      "overlap": 0,
      "original_metadata": {
        "word_count": 320,
        "parsed_at": "2025-08-01T07:01:15.352029"
      },
      "position": {}
    },
    "tokens": 154,
    "char_count": 496,
    "created_at": "2025-08-01T15:32:19.504Z"
  },
  {
    "id": "1dce56e8_0001",
    "content": "bizMOB Server 전문 호출시 설정할 header object. 별도로 추가할 필드가 있을때 주로 사용하고 기본값으로는 프로젝트에서 설정코드(TrCode)\n <property name=\"result\" type=\"boolean\">\n <value>true 또는 false. 서버통신 후 처리 성공 여부값</value>\n </property>\n <property name=\"error_code\" type=\"string\">\n <value>bizMOB Server통신시 실패일 경우 서버에서 전달하는 에러코드값. eg)CDR1100</value>\n </property>\n <property name=\"error_text\" type=\"string\">\n <value>bizMOB Server통신시 실패일 경우 서버에서 전달하는 에러메세지. eg)카드잔액부족</value>\n </property>\n <property name=\"info_text\" type=\"string\">\n <value>bizMOB",
    "metadata": {
      "source_file": "data/source/guides/api-docs/bizMOB-Network.mdx",
      "file_name": "bizMOB-Network.mdx",
      "file_type": "mdx",
      "chunk_index": 1,
      "total_chunks": 6,
      "chunk_strategy": "guides/api-docs",
      "chunk_size": 500,
      "overlap": 0,
      "original_metadata": {
        "word_count": 320,
        "parsed_at": "2025-08-01T07:01:15.352029"
      },
      "position": {}
    },
    "tokens": 157,
    "char_count": 499,
    "created_at": "2025-08-01T15:32:19.504Z"
  },
  {
    "id": "1dce56e8_0002",
    "content": "Server통신 후 서버에서 보넬 추가 메세지</value>\n </property>\n <property name=\"message_version\" type=\"string\">\n <value>bizMOB Server통신 프로토콜 버전</value>\n </property>\n <property name=\"login_session_id\" type=\"string\">\n <value>bizMOB Server통신시 요청한 세션 id. 서버에 생성된 session값이 자동으로 설정됨</value>\n </property>\n <property name=\"trcode\" type=\"string\">\n <value>bizMOB Server 전문 코드(TrCode). xross Core에서 자동으로 설정.</value>\n </property>\n </parameter>\n <parameter name=\"_oBody\" type=\"Object\" Optional>\n Server 전문 코드(TrCode). Service Bu",
    "metadata": {
      "source_file": "data/source/guides/api-docs/bizMOB-Network.mdx",
      "file_name": "bizMOB-Network.mdx",
      "file_type": "mdx",
      "chunk_index": 2,
      "total_chunks": 6,
      "chunk_strategy": "guides/api-docs",
      "chunk_size": 500,
      "overlap": 0,
      "original_metadata": {
        "word_count": 320,
        "parsed_at": "2025-08-01T07:01:15.352029"
      },
      "position": {}
    },
    "tokens": 148,
    "char_count": 500,
    "created_at": "2025-08-01T15:32:19.504Z"
  },
  {
    "id": "1dce56e8_0003",
    "content": "ilder에 정의된 전문 json구조에 맞게 값을 설정.\n </parameter>\n <parameter name=\"_bMock\" type=\"boolean\" Optional version=\"4.x\">\n true 또는 false. 개발환경에서 Server에 전문이 개발되지 않아 Front에서 직접 호출이 불가능 할경우 mock data내 정의된 값을 return하여 Front에서 처리로직을 개발하고 싶을 경우 true로 설정하여 사용.\n </parameter>\n <parameter name=\"_bProgressEnable\" Optional type=\"boolean\">\n true 또는 false. bizMOB Server 통신시 Native app에서 프로그래스바를 표시할지 여부.\n <case _bProgressEnable=\"true\">기본값. 서버전문 요청시 Native App에서 Progress bar창을 보여준다..사용자가 두번터치하여 중복요청하는 경우를 방지하기 위해 기본값은 tr",
    "metadata": {
      "source_file": "data/source/guides/api-docs/bizMOB-Network.mdx",
      "file_name": "bizMOB-Network.mdx",
      "file_type": "mdx",
      "chunk_index": 3,
      "total_chunks": 6,
      "chunk_strategy": "guides/api-docs",
      "chunk_size": 500,
      "overlap": 0,
      "original_metadata": {
        "word_count": 320,
        "parsed_at": "2025-08-01T07:01:15.352029"
      },
      "position": {}
    },
    "tokens": 165,
    "char_count": 500,
    "created_at": "2025-08-01T15:32:19.504Z"
  },
  {
    "id": "1dce56e8_0004",
    "content": "ue로 설정되어 있다.</case>\n <case _bProgressEnable=\"false\">Native App에서 Progress bar창을 보여주지 않는다. 백그라운드로 데이터를 받아 저장해야 할경우 같은 비동기 데이터 처리에 사용할 때 설정한다.</case>\n </parameter>\n <parameter name=\"_fCallback\" type=\"function\" version=\"3.x\">bizMOB Server 통신 후 Front에서 response data를 받아처리할 callback 함수</parameter>\n </request>\n <response>\n <type>JSON</type>\n <value>호출한 전문의 body필드내 response data와 프로젝트에서 정의한 header필드의 json데이터</value>\n </response>\n <example>\n ```js\n bizMOB.Network.requestTr({\n \"_sTrcode\" : \"DM0002\",\n \"_o",
    "metadata": {
      "source_file": "data/source/guides/api-docs/bizMOB-Network.mdx",
      "file_name": "bizMOB-Network.mdx",
      "file_type": "mdx",
      "chunk_index": 4,
      "total_chunks": 6,
      "chunk_strategy": "guides/api-docs",
      "chunk_size": 500,
      "overlap": 0,
      "original_metadata": {
        "word_count": 320,
        "parsed_at": "2025-08-01T07:01:15.352029"
      },
      "position": {}
    },
    "tokens": 155,
    "char_count": 500,
    "created_at": "2025-08-01T15:32:19.504Z"
  },
  {
    "id": "1dce56e8_0005",
    "content": "Header\" : {\"userGrade\" : \"chief\"},\n \"_oBody\" : {\n \"startIndex\" : 0,\n \"endIndex\" : 9\n },\n \"_fCallback\" : function(resDM0002){\n bizMOB.logger.log(JSON.stringify(resDM0002));\n }\n });\n ```\n </example>\n </method>",
    "metadata": {
      "source_file": "data/source/guides/api-docs/bizMOB-Network.mdx",
      "file_name": "bizMOB-Network.mdx",
      "file_type": "mdx",
      "chunk_index": 5,
      "total_chunks": 6,
      "chunk_strategy": "guides/api-docs",
      "chunk_size": 500,
      "overlap": 0,
      "original_metadata": {
        "word_count": 320,
        "parsed_at": "2025-08-01T07:01:15.352029"
      },
      "position": {}
    },
    "tokens": 57,
    "char_count": 207,
    "created_at": "2025-08-01T15:32:19.504Z"
  },
  {
    "id": "c0a84096_0000",
    "content": "--- 페이지 1 ---\n2024년\n모빌씨앤씨\n회사소개서\nWEB & Mobile Development Platform\nOne Source Multi Use\n\n--- 페이지 2 ---\nI. 모빌씨앤씨\nII. Products\nIII. Service\nIV. Reference\nV. Why bizMOB 4.0\nTable of\nContents\n\n--- 페이지 3 ---\nI. 모빌씨앤씨\n\n--- 페이지 4 ---\n모빌씨앤씨(Seoul)\n모빌씨앤씨(Korea) 는1995년설립후수많은기업고객에게bizMOB 엔터프라이즈플랫폼\n공급및웹및모바일시스템구축사업, 운영사업을제공하고있으며대한민국모바일IT \n의과거와현재그리고미래의혁신을주도하고있습니다.\nApps / Web\n100+\nClients\n35+\nExperts\n100+\nSince\n1995\nSolution\n10+\nClients\n10+\nExperts\n100+\nSince\n2012\n모빌씨앤씨캄보디아(Phnom Penh)\n모빌씨앤씨는2012년글로벌개발센터인모빌씨앤씨캄보디아법인을설립하여ASEAN \n국가들을대상으로선진금융솔루션및핀테크서비스를제공하고있으며, 현재한국인10+, \n현지IT 전문인력100+ 의인원들이글로벌개발센터업무및ASEAN 디지털금융및플랫폼\n사업을주도하고있습니다.\n01. Overview",
    "metadata": {
      "source_file": "data/source/documents/corporate/2025_회사소개서.pdf",
      "file_name": "2025_회사소개서.pdf",
      "file_type": "pdf",
      "chunk_index": 0,
      "total_chunks": 25,
      "chunk_strategy": "documents/corporate",
      "chunk_size": 1200,
      "overlap": 150,
      "original_metadata": {
        "title": "PptxGenJS Presentation",
        "author": "PptxGenJS",
        "pages": 53,
        "parsed_at": "2025-08-01T07:01:18.386527"
      },
      "position": {}
    },
    "tokens": 223,
    "char_count": 630,
    "created_at": "2025-08-01T15:32:19.530Z"
  },
  {
    "id": "c0a84096_0001",
    "content": "--- 페이지 5 ---\n02. Products\nMobile Enterprise Application Platform\nbizMOB은 엔터프라이즈 모바일 App 구축 플랫폼으로 \n대부분의 레거시 시스템에 연동할 수 있는 서버 기능과 \n하나의 소스로 모든 모바일 디바이스를 지원하는 클라이언트\n기능, 그리고 신속하게 개발 업무를 수행할 수 있는 개발 환경\n을 제공합니다.\nEnterprise Cross Platform 으로 진화\nbizMOB4.0은 모든 서버환경/ 디바이스/ OS를대상으로적용\n가능한크로스플랫폼으로, 하나의 개발 소스를 통해 App / Web \n구축이 가능한 플랫폼입니다. Cloud 구성, 다국어 지원, 보안성 \n강화, 개발 및 배포 자동화 기능강화, 오픈 UI 프레임워크 개발 \n방법론을 지원하며, 지능형대용량푸시메시지발송플랫폼인\nbizPush 엔진및CMS를제공합니다.\nCore Banking Framework\nMARU는 디지털 뱅킹의 핵심인 코어 뱅킹 시스템 프레임\n워크로 은행 내/외부에서 발생하는 모든 유형의 거래 관리 \n기능, 금융 소비자가 이용하는 디지털 뱅킹 기능, 외부 금융 \n시스템 연동 기능을제공합니다.\nService Platform 으로진화\nMARU 프레임웍을기반으로캄보디아에서는전자상거래를위한\n쇼핑몰솔루션인LifeOn 전자상거래플랫폼을현지에서구축및\n운영을하고있으며, 캄보디아약국및도소매/ 제약회사에코\n시스템을플랫폼으로구축하여서비스를제공하고있습니다.\n모빌씨앤씨는웹/모바일개발및운영플랫폼인bizMOB4.0, 코어뱅킹프레임워크인Maru, ASEAN대상서비스플랫폼인전자상거래Life On 및약국도소매\n관리PillTech 플랫폼을통하여다양한IT 서비스를제공하고있습니다.",
    "metadata": {
      "source_file": "data/source/documents/corporate/2025_회사소개서.pdf",
      "file_name": "2025_회사소개서.pdf",
      "file_type": "pdf",
      "chunk_index": 1,
      "total_chunks": 25,
      "chunk_strategy": "documents/corporate",
      "chunk_size": 1200,
      "overlap": 150,
      "original_metadata": {
        "title": "PptxGenJS Presentation",
        "author": "PptxGenJS",
        "pages": 53,
        "parsed_at": "2025-08-01T07:01:18.386527"
      },
      "position": {}
    },
    "tokens": 331,
    "char_count": 837,
    "created_at": "2025-08-01T15:32:19.531Z"
  },
  {
    "id": "c0a84096_0002",
    "content": "--- 페이지 6 ---\n03. Services\nSystem Integration \n(Remote)\nSI 프로젝트수행시에따른원격프로젝트\n팀을기반으로체계적인원격프로젝트구축\n서비스를제공합니다. 상주프로젝트\n방법론과동일한퀄리티를제공하며, \n효율적인공수사용으로비용및관리의\n효율성을높일수있습니다.\n01\n02\n02-1\nUser eXperience\nConsulting & Design\nSystem Integration\n(Mobile & Web System)\n모빌씨앤씨의SI 구축전문가그룹은자체\n프로젝트수행프로세스를통해제안, 고객\n요구사항분석, UX/UI 디자인, 퍼블리싱, \n클라이언트및서버개발, 테스트, 서비스오픈, \n안정화까지의모든과정을자체인력을통하여\nOne-Stop 으로제공합니다.\nORedX는모빌씨앤씨의UX 디자인특화\n브랜드입니다. ORedX는UX 디자인프로젝트\n수행전문가로구성되어있으며, 여러\n프로젝트로검증하고개선된자체UX 디자인\n수행방법론을통해사용자경험컨설팅과\n디자인을제공합니다.\n모빌씨앤씨는웹/ 모바일시스템구축및운영에필요한END-END 서비스를각전문가그룹을통하여제공합니다. 또한환경변화에민감한모바일\n시스템을대상으로차별화된서비스를제공하여많은고객사로부터인정을받고있습니다.\n\n--- 페이지 7 ---\nCustomer Support\n모빌씨앤씨의고객지원전문가그룹은전용\n콜센터를통해어플리케이션사용자문의\n실시간대응서비스를제공합니다. 접수한\n문의중실시간문의대응이어려운건은IT \n운영전문가그룹과협의하여해결책을\n제시하고서비스개선의중요정보로\n사용합니다.\n03\n04\n05\nSystem Operation Service\nMobile Native Care \nService\nMobile Native Care Service는전문네이티브\n기술자로구성되어있는모빌씨앤씨의네이티브팀이\n제공하는서비스로사용플랫폼에구분없이Android, \niOS 네이티브관련기술을문의하고네이티브수정\n개발을의뢰및지원받을수있는오픈형네이티브\n기술지원창구입니다.\n03. Services\n모빌씨앤씨의운영전문가그룹은\n어플리케이션서비스오픈후발행하는외부\n환경변화및업무변화관리를위한서비스를\n제공합니다. 자체구축한운영대응포탈을통한\n고객사와의긴밀한커뮤니케이션, 관리자포털\n및서비스운영에필요한교육도함께\n제공합니다.\n모빌씨앤씨는웹/ 모바일시스템구축및운영에필요한END-END 서비스를각전문가그룹을통하여제공합니다. 또한환경변화에민감한모바일\n시스템을대상으로차별화된서비스를제공하여많은고객사로부터인정을받고있습니다.",
    "metadata": {
      "source_file": "data/source/documents/corporate/2025_회사소개서.pdf",
      "file_name": "2025_회사소개서.pdf",
      "file_type": "pdf",
      "chunk_index": 2,
      "total_chunks": 25,
      "chunk_strategy": "documents/corporate",
      "chunk_size": 1200,
      "overlap": 150,
      "original_metadata": {
        "title": "PptxGenJS Presentation",
        "author": "PptxGenJS",
        "pages": 53,
        "parsed_at": "2025-08-01T07:01:18.386527"
      },
      "position": {}
    },
    "tokens": 492,
    "char_count": 1188,
    "created_at": "2025-08-01T15:32:19.531Z"
  },
  {
    "id": "c0a84096_0003",
    "content": "--- 페이지 8 ---\nGlobal IT Outsourcing \nService \n03. Services\n06\nPhnom Penh, Cambodia\n모빌씨앤씨는자회사인모빌씨앤씨캄보디아법인과의리소스협업을\n통하여2012년부터글로벌진출기업및ASEAN 기업을대상으로IT \n시스템구축및운영서비스를제공하고있습니다.\nGIO Service 는기업의IT 시스템혹은어플리케이션의일부또는\n전부를모빌씨앤씨에게개발, 운영을위탁하는비즈니스협업방식으로\n비용절감효과및핵심업무에집중할수있는환경을제공해드립니다.\n“GIO Service”\n모빌씨앤씨는자체글로벌개발센터인모빌씨앤씨캄보디아법인을통하여국내IT 시스템개발사업을지원합니다. 웹시스템, 모바일시스템, ITO 서비스진행에\n따른비용절감효과를기대할수있으며, 현지주재원및한국실담당자를통하여소통에문제없이동일한퀄리티의서비스를제공합니다.\n글로벌개발센터차별화POINT\n1. 모빌씨앤씨캄보디아현지법인에소속된\n100% 정직원기반의책임감있는서비스\n2. 현지법인에체류중인한국주재원중심의\n관리소통으로소통의부담감‘제로’\n3. 서비스운영을위한한국국내조직의\n채널담당자배정가능\n4. 현지법인의기술및리소스이슈발생시\n한국법인의기술지원프로세스가동\n\n--- 페이지 9 ---\nWith Mobile C&C\n04. Client\n한국본사\n캄보디아법인\n\n--- 페이지 10 ---\nII. Products",
    "metadata": {
      "source_file": "data/source/documents/corporate/2025_회사소개서.pdf",
      "file_name": "2025_회사소개서.pdf",
      "file_type": "pdf",
      "chunk_index": 3,
      "total_chunks": 25,
      "chunk_strategy": "documents/corporate",
      "chunk_size": 1200,
      "overlap": 150,
      "original_metadata": {
        "title": "PptxGenJS Presentation",
        "author": "PptxGenJS",
        "pages": 53,
        "parsed_at": "2025-08-01T07:01:18.386527"
      },
      "position": {}
    },
    "tokens": 272,
    "char_count": 659,
    "created_at": "2025-08-01T15:32:19.531Z"
  },
  {
    "id": "c0a84096_0004",
    "content": "--- 페이지 9 ---\nWith Mobile C&C\n04. Client\n한국본사\n캄보디아법인\n\n--- 페이지 10 ---\nII. Products\n\n--- 페이지 11 ---\nbizMOB 4.0 개요\nbizMOB 4.0 플랫폼은웹/ 모바일시스템구축및운영에필요한Front, Server, Back office 연동, 개발보조툴, 시스템관리및운영, \n모바일기본보안환경을제공하는하이브리드방식의크로스플랫폼으로미래창조과학부인증기관에서GS 인증된공인제품입니다.\nCross Platform\n하나의개발소스로Mobile \nHybrid App (iOS & Android), \nWeb(Responsive)동시지원,\nPlug-in 기반의확장기능\nOne Source Multi Use\nAny System\nJAVA 기반의표준화된서버플랫폼\nAny OS (AIX, WS, Linux..),\nAny DB (Oracle, MSSQL..),\nAny WAS (Tomcat, Jeus..) \n다양한Configuration 구성가능\nWhatever OS, DB, WAS \nDeveloper Tool\n이클립스기반플러그인Tool \nUI 사용향상Tool\n서버개발생산성Tool \n표준전문생성Tool\n웹시뮬레이터제공\nService Builder / Developer Site\n실시간업데이트\n최초배포후사용자인증시\n자동업데이트기능\nB2C 앱의경우최초사설앱스토어배포\n후관리콘솔을이용한자동업데이트\n관리기능제공\n자동컨텐츠업데이트\nSecurity\n통신구간암호화, 위변조방지, \n루팅체크, 단말기분실시접속차단, \n통신채널별접근차단등\n기본보안기능을별도agent\n설치없이플랫폼에서제공\nCovering the Key Security \n운영관리콘솔\n기업용앱스토어, \n관리콘솔을이용한앱버전관리, \n단말기사용자관리, \n사용자별권한관리, \nPush 발송관리기능제공\n기업용앱스토어및관리콘솔\n모바일\n전용\n모바일\n전용\nETC..\nERP\nCRM\nFFA\nSFA\nGroupware\nBack Office\nMobile\nPlatform\nBrowsers\nPC\nPlatform\nServer Framework\nSpring 기반대부분의\nMulti OS, DB 지원\nBusiness Flow Control \nGeneral Aspect\nLegacy Adaptor(ERP…)\n개발환경\n실무자중심의효율적\n개발환경\nService Builder / Developer Site\n관리및운영환경\n서비스유지를위한\n운영환경\n관리콘솔/ 보안/ 앱스토어",
    "metadata": {
      "source_file": "data/source/documents/corporate/2025_회사소개서.pdf",
      "file_name": "2025_회사소개서.pdf",
      "file_type": "pdf",
      "chunk_index": 4,
      "total_chunks": 25,
      "chunk_strategy": "documents/corporate",
      "chunk_size": 1200,
      "overlap": 150,
      "original_metadata": {
        "title": "PptxGenJS Presentation",
        "author": "PptxGenJS",
        "pages": 53,
        "parsed_at": "2025-08-01T07:01:18.386527"
      },
      "position": {}
    },
    "tokens": 414,
    "char_count": 1194,
    "created_at": "2025-08-01T15:32:19.531Z"
  },
  {
    "id": "c0a84096_0005",
    "content": "--- 페이지 12 ---\nbizMOB 4.0_개발환경\nProject Explorer, Generated Code Editor, \nMessage Tree View, Message Detail View를통한개발\n전문생성\nClient/Server/Adaptor\nDeveloper\n생성→설계→테스트\n설계, 생성, \n테스트\nService Builder\nEclipse Plugin\nWeb simulator\nbizMOB\nDevelopers Site 제공을통한각기술파트별\n지식공유/ 높은퀄리티의웹+모바일시스템을빠르게\n구축할수있도록지원\nbizMOB\n의개발환경은개발생산성향상을위해Message Mapper, Message Builder를통해Java 개발인력에게최적화된전용개발툴을제공합니다. \n즉, 하나의툴로클라이언트와서버간의전문설계/ 관리Tool 및템플릿생성툴, 테스트환경을제공함으로써, 개발시신속하고견고하게개발할수\n있는장점이있어App 구축시비용과시간을단축시킬수있습니다. 또한, Developers Site를통하여가이드는물론, 메시지빌더, Eclipes Plugin, Web simulator를제공하여\n개발자가표준화된가이드로쉽고빠르게모바일시스템을개발할수있습니다.\nMock Test \nJson Define\nTest Json Define\n사용\nUI Client Developer\n사용\nAdaptor Developer\n웹템플릿생성\nHTML, CSS, \nJavascript Code\n비즈니스로직및\n어댑터템플릿생성\nJava Code\nMapper / Generator / Service Tester\nService Builder\nUI Library / biMOB\nPlatform Knowledge",
    "metadata": {
      "source_file": "data/source/documents/corporate/2025_회사소개서.pdf",
      "file_name": "2025_회사소개서.pdf",
      "file_type": "pdf",
      "chunk_index": 5,
      "total_chunks": 25,
      "chunk_strategy": "documents/corporate",
      "chunk_size": 1200,
      "overlap": 150,
      "original_metadata": {
        "title": "PptxGenJS Presentation",
        "author": "PptxGenJS",
        "pages": 53,
        "parsed_at": "2025-08-01T07:01:18.386527"
      },
      "position": {}
    },
    "tokens": 277,
    "char_count": 821,
    "created_at": "2025-08-01T15:32:19.531Z"
  },
  {
    "id": "c0a84096_0006",
    "content": "--- 페이지 13 ---\nbizMOB 4.0 플랫폼구성도\nbizMOB\nClient Framework\nbizMOB\nServer Framework\nbizMOB\nPortal\nLegacy System\nMobile OS (Android/iOS)\nbizMOB Xross UI Container\nWeb Resource\nHTML\nJS\nCSS\nbizMOB Xross UI Container\nGeneral Aspect Services\nCustom Plug-in\nDevice\nComm\nFile\netc.\nHybrid UI\n(WEB + Native UI)\nWEB UI\nNative UI\nVM UI\netc.\nBusiness Flow Control Services\nRouting\nStandard Interface\nData Binding\nDispatcher Framework\nClient Support Services\nMeta Info.\nContent\nDevice\nSecurity\nPush\nGeneral Aspect Services\nValidation\nSession\nJournal\nLogging\nBusiness Pack(Legacy Interface)\nRESTFul\nMybatis\nGroupware\n전자결재\nLegacy \nAdaptor\nSAP\n현장활동\netc.\nbizMOB\nDevelopers Tools\nServer Builder\nWeb simulator\nDeveloper Site\nIDE Plugin\nGroupware\n전자결재\nSFA / FFA\nG-CRM\nERP\nSCM\nMDM\nIoT\nMap\netc.\nbizMOB Admin\nbizMOB Appstore\n앱리스트조회\n앱다운로드\n회사관리\n단말기관리\n어플리케이션관리\n사용자관리\n모니터링\n로그관리\nbizPUSH\nService\nOpen API\nHTTP/\nJSON\nService Engine\n푸시키/디바이스등록\n타켓팅확인\n푸시메시지발송(이미지)\n수신확인\nHTTP(RESTful),FTP,TCP/IP, etc.\nbizMOB\n4.0 구성도\nAny Devices\nAny Browser",
    "metadata": {
      "source_file": "data/source/documents/corporate/2025_회사소개서.pdf",
      "file_name": "2025_회사소개서.pdf",
      "file_type": "pdf",
      "chunk_index": 6,
      "total_chunks": 25,
      "chunk_strategy": "documents/corporate",
      "chunk_size": 1200,
      "overlap": 150,
      "original_metadata": {
        "title": "PptxGenJS Presentation",
        "author": "PptxGenJS",
        "pages": 53,
        "parsed_at": "2025-08-01T07:01:18.386527"
      },
      "position": {}
    },
    "tokens": 278,
    "char_count": 1003,
    "created_at": "2025-08-01T15:32:19.532Z"
  },
  {
    "id": "c0a84096_0007",
    "content": "--- 페이지 14 ---\nbizMOB 4.0_개발환경UI 라이브러리\nbizMOB 4.0의프런트는IONIC, Vuetify 기반의메터리얼프로UI 컴포넌트가기본적용되어있으며, 다양한템플릿을활용하여효과적인UI를구현할수있습니다.\n기본MVP(Minimum Viable Product) 프로젝트제공을통하여웹+모바일기능을쉽게개발할수있습니다.\nAsana\nTrello\nSlack\n메터리얼프로UI 주요컴포넌트(예시)\n\n--- 페이지 15 ---\nbizMOB 4.0_운영환경\nbizMOB\n포털은플랫폼기반시스템운영을위한운영환경을제공합니다. \n운영시스템을통하여사용자및권한관리, 모바일디바이스, 어플리케이션관리, 컨텐츠업데이트관리, 푸시발송관리, 로그관리등을수행할수있습니다.\n• 지원단말리스트\n• 지원단말등록, 삭제\n• 지원단말세부정보\n• 사용자리스트\n• 사용자등록, 삭제\n• 사용자세부정보\n• 등록단말기리스트\n• 서버자원모니터링\n• 서버상세정보\n단말기관리\n2\n사용자관리\n4\n모니터링\n6\nPush 콘솔\n8\n• 발송관리\n• 예약발송, 발송결과\n• 기업용어플리케이션리스트\n• 기업용어플리케이션등록, 삭제\n• 기업용어플리케이션세부정보\n• 기간별접속현황\n• 기간별사용현황\n• 업무별사용현황\n• 포털로그\n• 어플리케이션사용로그\n• 회사리스트\n• 회사정보\n• 회사등록, 삭제\n회사관리\n1\n어플리케이션관리\n3\n통계관리\n5\n로그관리\n7",
    "metadata": {
      "source_file": "data/source/documents/corporate/2025_회사소개서.pdf",
      "file_name": "2025_회사소개서.pdf",
      "file_type": "pdf",
      "chunk_index": 7,
      "total_chunks": 25,
      "chunk_strategy": "documents/corporate",
      "chunk_size": 1200,
      "overlap": 150,
      "original_metadata": {
        "title": "PptxGenJS Presentation",
        "author": "PptxGenJS",
        "pages": 53,
        "parsed_at": "2025-08-01T07:01:18.386527"
      },
      "position": {}
    },
    "tokens": 273,
    "char_count": 670,
    "created_at": "2025-08-01T15:32:19.532Z"
  },
  {
    "id": "c0a84096_0008",
    "content": "--- 페이지 16 ---\nbizMOB 4.0_기본보안구성\n구분\n세부내역\n통신망에서의\n암호화\n• SSL (Secure Sockets Layer) Protocol 적용\n• 모바일게이트웨이서버와그룹웨어서버간의HTTPS 방식으로암호화지원\n• 단말과서버통신전문암호화: AES 128 또는256 bit (Optional)\n첨부파일의보안\n• 첨부파일의Download 및저장방지\n• Viewing후파일의관리: Viewer 종료후자동삭제\n• DRM처리: 단말에서다운로드요청시Server 에서DRM을해제한후보안전송(Optional-별도DRM솔루션연동)\n• 문서변환서버적용: 첨부파일요청시서버에서이미지로변환하여, 스트리밍방식으로단말로전송, 조회후메모리에서자동삭제\n(Optional-별도제품적용필요함)\n본문내용의보안\n• 목록및본문은조회화면을닫음과동시에메모리에서삭제(휘발성처리)\n• 필요시단말단의데이터를모바일DB에암호화된Binary 형태로저장\nRemote Wipe\n• 관리자가모바일단말단의DB 및업무프로그램을자동삭제\n단말기및\n사용자인증\n• 모바일단말인증: 개인단말기고유번호, 전화번호등을등록하고, 인증\n• 단말단의Login ID 및Password 관리(SSO 적용지원)\nS/W 배포\n• 구현된업무용하이브리드앱을over-the-air로자동배포및설치\n통신채널별제어\n• 단말앱에서통신채널구분하여접근허용/차단\n• 국내모은행의경우WiFi 접속할경우서버접근을원천차단\nRemote Update\n• 하이브리드앱컨테이너Version 변경시over-the-air 자동Update\n• HTML 업무컨텐츠변경시over-the-air로자동update\n불법행위방지\n• 단말기루팅탐지, 앱위변조탐지, 컨텐츠위변조탐지\n시큐어코딩\n• KISA (한국인터넷진흥원) - Q-NET App(대국민서비스). KISA App(오피스서비스). 를통한플랫폼소스보안규칙지침검증\nbizMOB\n은웹+모바일시스템을구성함에있어기본적인보안기능을제공합니다.\n이보안기능은단말기에별도의Agent 설치없이하이브리드앱자체에서제공되는기능입니다. \n단, 금융정보보안기준보안모듈이필요할경우3rd Party 솔루션연동이필요합니다.",
    "metadata": {
      "source_file": "data/source/documents/corporate/2025_회사소개서.pdf",
      "file_name": "2025_회사소개서.pdf",
      "file_type": "pdf",
      "chunk_index": 8,
      "total_chunks": 25,
      "chunk_strategy": "documents/corporate",
      "chunk_size": 1200,
      "overlap": 150,
      "original_metadata": {
        "title": "PptxGenJS Presentation",
        "author": "PptxGenJS",
        "pages": 53,
        "parsed_at": "2025-08-01T07:01:18.386527"
      },
      "position": {}
    },
    "tokens": 410,
    "char_count": 1029,
    "created_at": "2025-08-01T15:32:19.532Z"
  },
  {
    "id": "c0a84096_0009",
    "content": "--- 페이지 17 ---\n02. Maru & APSARA\nAPSARA Core Banking Application\nCommercial Bank 및MFI Version\n코어뱅킹비즈니스모듈프로세스탑재\n디지털채널서비스제공및운영을위한통합\nMaru는코어뱅킹의핵심비즈니스모듈을실행시키는프레임워크입니다.\nMaru 프레임워크주요기능\n- 온라인트랜젝션관리를위한온라인프레임워크\n- 배치 스케쥴을관리하는배치프레임워크\n- 지연된트랜젝션을관리하여시스템성능부하를줄이는프레임워크\n- 대량의트랜젝션을관리하는프레임워크\nMaru Core Banking Framework\n\n--- 페이지 18 ---\n02. Maru & APSARA\nLoan\nCustomer\nAccounting\nDeposit\nFX\nCard/ATM\nTrade \nFinance\nChannel\nExternal\nProduct Factory\nBusiness Common\nBusiness System Common\nMaru Admin Web\nBatch Framework\nCentercut Framework\nDeferred Framework\nOnline Framework\nOpen Source Middleware Stacks\nEclipse based Development\nBatch Scheduler\nBusiness\nApplication\nBusiness\nCommon\nFramework\nMiddleware\nMaru는디지털뱅킹의핵심인코어뱅킹시스템프레임워크로은행내/외부에서발생하는모든유형의거래관리기능, 금융소비자가이용하는디지털뱅킹기능, \n외부금융시스템연동기능을제공합니다.\n\n--- 페이지 19 ---\n02. Maru & APSARA\nMaru 프레임워크를기반으로APSARA\n코어뱅킹어플리케이션, 디지털뱅킹시스템, 외부채널연동을통한Life & FinTech 플랫폼서비스를제공합니다.\n\n--- 페이지 20 ---\nIII. Service",
    "metadata": {
      "source_file": "data/source/documents/corporate/2025_회사소개서.pdf",
      "file_name": "2025_회사소개서.pdf",
      "file_type": "pdf",
      "chunk_index": 9,
      "total_chunks": 25,
      "chunk_strategy": "documents/corporate",
      "chunk_size": 1200,
      "overlap": 150,
      "original_metadata": {
        "title": "PptxGenJS Presentation",
        "author": "PptxGenJS",
        "pages": 53,
        "parsed_at": "2025-08-01T07:01:18.386527"
      },
      "position": {}
    },
    "tokens": 308,
    "char_count": 920,
    "created_at": "2025-08-01T15:32:19.532Z"
  },
  {
    "id": "c0a84096_0010",
    "content": "--- 페이지 19 ---\n02. Maru & APSARA\nMaru 프레임워크를기반으로APSARA\n코어뱅킹어플리케이션, 디지털뱅킹시스템, 외부채널연동을통한Life & FinTech 플랫폼서비스를제공합니다.\n\n--- 페이지 20 ---\nIII. Service\n\n--- 페이지 21 ---\n- Desktop Research & Analysis\n(Trend, Competitor)\n- User Interview\n- User Survey\n- Stakeholder Interview\n- UX Strategy by Insight\n- Design Prototype\n- Desktop Research & Analysis\n(Trend, Competitor)\n- User Interview\n- User Survey\n- Stakeholder Interview\n- UX Strategy by Insight\n- Design Prototype\n(Now Service Constructing for \nCambodia, Will Open at 2020)\n- User(Consumer) Survey\n- Report the Issue Paper\n- Offline Interview\n- Artificial Intelligence SNS \nAnalysis Service\n- SEO (Search Engine \nOptimization)\n- Data analytics (Google \nanalytics, Tag manager)\n- Advertisement to Search \nEngine & Social Media\n- Design a Service & Contents \nStrategy\n- Design Service Items\n- Design Contents items\nUX Design \n& Consulting\nUI & GUI Design\nUser Research\nService\nService & Contents \nDesign\nOnline Marketing \nStrategy \nORedX 그룹(UX팀)은사용자(소비자)에대한깊은인사이트를기반으로고객의온라인비즈니스가치를높일수있는UX 전문가집단입니다. \nORedX는사용자(소비자)를이해하고, 성공적인프로젝트결과를도출하기위한업무를수행합니다.\nUser eXperience Consulting & Design",
    "metadata": {
      "source_file": "data/source/documents/corporate/2025_회사소개서.pdf",
      "file_name": "2025_회사소개서.pdf",
      "file_type": "pdf",
      "chunk_index": 10,
      "total_chunks": 25,
      "chunk_strategy": "documents/corporate",
      "chunk_size": 1200,
      "overlap": 150,
      "original_metadata": {
        "title": "PptxGenJS Presentation",
        "author": "PptxGenJS",
        "pages": 53,
        "parsed_at": "2025-08-01T07:01:18.386527"
      },
      "position": {}
    },
    "tokens": 325,
    "char_count": 1125,
    "created_at": "2025-08-01T15:32:19.532Z"
  },
  {
    "id": "c0a84096_0011",
    "content": "--- 페이지 22 ---\nPhase 1\n제안및분석\nRFP 분석\n구축제안\n요구사항상세분석\n프로젝트계획수립\nPhase 2\nUX/UI 디자인\n사용자요구사항\n분석\n시장/경쟁/트랜드\n분석\n사용자리서치\nUX 컨설팅(전략수립)\n정보구조&화면설계(UI)\nGUI디자인\nHTML5 표준\n퍼블리싱\nUI 인터랙션\n클라이언트화면개발\nNative 요소개발\n단위테스트\n레거시서버연동\n인터페이스어댑터\n개발\n성능, 최적화점검\n단위테스트\nPhase 4\n테스트및안정화\n통합테스트\n인수테스트\n앱스토어등록\nApp 런칭\n안정화\nPhase 3\n클라이언트& 서버개발\n모빌씨앤씨의SI 구축전문가그룹은자체프로젝트수행프로세스를통해제안- 고객요구사항분석- UX/UI 디자인– 퍼블리싱/클라이언트/서버개발과정과함께테스트및안정화후서비스오픈까지\nOne-Stop 시스템통합구축서비스를제공합니다. 각단계별방법론과개발툴을활용하여빠르고안전하게서비스를구축하여운영하실수있습니다.\n운영환경구성\nDevelopers Tools\n•\nMessage Builder\n•\nWeb Emulator\n•\nUI Testing Tool\n•\nDeveloper Site\n•\nMethodology\nDevelopers Tools\n•\nMessage Builder\n•\nIDE Plug-In\n•\nJunit Test \n•\nDeveloper Site\n•\nMethodology\nMethodology\n•\nPlanning/Analysis\n✓\nKick-Off, WBS\n✓\nRequirements\n✓\nArchitecture\n✓\nUI/UX/Legacy I/F\nSystem Integration",
    "metadata": {
      "source_file": "data/source/documents/corporate/2025_회사소개서.pdf",
      "file_name": "2025_회사소개서.pdf",
      "file_type": "pdf",
      "chunk_index": 11,
      "total_chunks": 25,
      "chunk_strategy": "documents/corporate",
      "chunk_size": 1200,
      "overlap": 150,
      "original_metadata": {
        "title": "PptxGenJS Presentation",
        "author": "PptxGenJS",
        "pages": 53,
        "parsed_at": "2025-08-01T07:01:18.386527"
      },
      "position": {}
    },
    "tokens": 274,
    "char_count": 771,
    "created_at": "2025-08-01T15:32:19.532Z"
  },
  {
    "id": "c0a84096_0012",
    "content": "--- 페이지 23 ---\nbizMOB\n개발방법론은Hybrid Agile을적용하여Agile의유연성과Waterfall 관리기법의장점을모두수용한방식입니다. 수행경험및체계, 고객피드백등을토대로방법론라이브러리를구축하고\n지속적으로보완하여발전하고있습니다.\nHybrid Agile 적용에특화된방법론\n• Waterfall 방식의전통적프로젝트관리기법과\nWBS (Work Breakdown Structure) 를사용하여\n작업활동과프로젝트전체범위파악\n• 응용시스템개발은Agile 방식을적용하여\n핵심기능우선스프린트반복개발을거쳐,\n변경사항처리및재평가시간확보\nAgile기법의유연성과Waterfall 관리기법\n장점을모두수용한맞춤형방식\n• 프로젝트유형, 기간, 규모또는\n적용기술및개발환경등사업\n특성을고려한프로토타입규모,\n스프린트주기등계획\n• 초기주요프로세스프로토타입\n스프린트수행조직구성\n• 스프린트수행을위한절차,\n가이드, 개발도구, 샘플제시\n• bizMOB 수행경험및체계, 국내외\n산업분야별선행사례, 고객피드백\n등을토대로방법론라이브러리를\n구축하고전문가에의한지속적관리\n및개선, 사내공유실시\n• Best Practice 사례를프로젝트\n현장에적용하기위한기술지원체계\n구축및운영\n적용기법\n프로젝트산출물\n리스크관리요소\nWBS\n활용경험및체계\n국내외\n산업분야별\n선행사례\n조사분석\n사업결과\n고객\n피드백\n…\n프로젝트방법론라이브러리\n품질검증: 정기적으로재평가및조정\n관리기법/1\n• 프로젝트관리경로\n• 신속개발경로\n• 기술아키텍처경로\n• 데이터전환경로\n• …\n애자일프로세스\n• Sprint Planning\n• Daily Scrum\n• Sprint Review\n• …\nbizMOB\nRAP 방법론\n• 플랫폼기반개발경로\n• 프로토타입개발및검증\n• …\n착수\n계획\n수립\n실행및통제\n종료\n• 프로젝트범위관리, 통합WBS \n공유및변경관리, 진척관리\n자동화등을지원하는프로젝트\n관리시스템활용\n•\n프로젝트보드및이슈추적관리, \n산출물공유및변경관리를위한\nSharePoint 활용, 비대면\n협업도구인MS Teams 등애자일\n개발을위한관리도구활용\nProject Management Tool\n스마트워크\n(MS Teams)\n프로젝트관리시스템\n다양한고객사구축경험을통해지속적으로개선되는방법론\n프로젝트상황별스프린트적용계획수립용이\n최적의Hybrid Agile 프로젝트관리도구적용\n스크럼조직구성\n스프린트플래닝워크숍\n프로젝트요구사항\n스프린트구현내용정의\n스프린트타임박스계획\n…\n스프린트플래닝\n데일리스크럼\n테스트\n스프린트리뷰",
    "metadata": {
      "source_file": "data/source/documents/corporate/2025_회사소개서.pdf",
      "file_name": "2025_회사소개서.pdf",
      "file_type": "pdf",
      "chunk_index": 12,
      "total_chunks": 25,
      "chunk_strategy": "documents/corporate",
      "chunk_size": 1200,
      "overlap": 150,
      "original_metadata": {
        "title": "PptxGenJS Presentation",
        "author": "PptxGenJS",
        "pages": 53,
        "parsed_at": "2025-08-01T07:01:18.386527"
      },
      "position": {}
    },
    "tokens": 494,
    "char_count": 1193,
    "created_at": "2025-08-01T15:32:19.532Z"
  },
  {
    "id": "c0a84096_0013",
    "content": "프로젝트상황별스프린트적용계획수립용이\n최적의Hybrid Agile 프로젝트관리도구적용\n스크럼조직구성\n스프린트플래닝워크숍\n프로젝트요구사항\n스프린트구현내용정의\n스프린트타임박스계획\n…\n스프린트플래닝\n데일리스크럼\n테스트\n스프린트리뷰\n스프린트회고\n총4회반복이행\n2일\n25일\n8일\n4일\n1일\n< 애자일프레임워크>\n가이드, 절차, 개발도구, 샘플등\n제공하여효율적이행지원\nbizMOB Developers\nSystem Integration",
    "metadata": {
      "source_file": "data/source/documents/corporate/2025_회사소개서.pdf",
      "file_name": "2025_회사소개서.pdf",
      "file_type": "pdf",
      "chunk_index": 13,
      "total_chunks": 25,
      "chunk_strategy": "documents/corporate",
      "chunk_size": 1200,
      "overlap": 150,
      "original_metadata": {
        "title": "PptxGenJS Presentation",
        "author": "PptxGenJS",
        "pages": 53,
        "parsed_at": "2025-08-01T07:01:18.386527"
      },
      "position": {}
    },
    "tokens": 97,
    "char_count": 235,
    "created_at": "2025-08-01T15:32:19.532Z"
  },
  {
    "id": "c0a84096_0014",
    "content": "--- 페이지 24 ---\n언택트/비대면서비스의전환및가속화로빠르게확산되고있는비대면프로젝트수행을위해체계적인원격프로젝트구축서비스도제공하고있습니다. \n모바일/웹SI구축서비스를비대면원격프로젝트로수행하기위해자사개발인력Pool를활용하며, 합리적이고효율적인프로세스를수립하여최적의구축서비스를제공합니다.\n캄보디아개발인력은스킬별개발자를다수보유하고, 국내전문인력과협업하는체계를구축하고있습니다. 국내인건비기준70% 수준으로경비절감효과가탁월합니다.\nPhase 1\n제안및분석\nPhase 2\nUX/UI 디자인\nPhase 4\n테스트및안정화\nPhase 3\n모바일시스템개발\n기획자\n디자이너\n프로젝트\n매니저\n퍼블리셔\n서버개발자\n클라이언트\n개발자\nUX팀(OredX)\nRemote 국내개발팀(Remote PJT Team)\n+ 필요시G.I.O 서비스활용\nNative 개발자\n국내개발인력Pool 활용(약50명)\nSystem Integration (Remote)\n\n--- 페이지 25 ---\nOPTION 1\n고객사\n자체운영\nOPTION 2\n운영서비스\n추가/수정개발\n필요건발생\n기술이전커리큘럼을\n통한교육및OJT 진행\n고객사담당자해결\n(1차대응)\n플랫폼유지보수및\n이슈대응\n(2차대응)\n고객사담당자로부터\n추가개발요건및이슈대응요청\n전담채널을통한요건수령이후\n모빌씨앤씨자체운영Pool을활용한개발및\n기술지원\n특정고객만을위한\n전담운영서비스인력/팀배정및투입\n(상주/비상주)\n전담운영인력이항시(8H/5D) \n지속적인컨텐츠개선작업을진행하며\n모바일환경및추가요구사항에대응\n모빌씨앤씨의SM 운영전문가그룹과고객지원센터는고객사추가요구사항및이슈와사용자의문의를능동적으로대응합니다.\n프로젝트종료후고객맞춤형운영체계를지원해드리며긴밀한커뮤니케이션및기술지원을통해모바일시스템운영에도움을드립니다.\nC\nClient Role\nM\nMobile C&C Role\nC\nM\nM\nM\nM\nM\n※ 모빌씨앤씨자체콜센터를통한사용자문의실시간대응서비스도제공가능\nOPTION 3\n전담운영팀\n배정\nC\nC\nSystem Maintenance & Customer Support\n\n--- 페이지 26 ---\nNative Care Service는전문네이티브기술자로구성되어있는모빌씨앤씨의네이티브팀이제공해드리는서비스이며, 모빌씨앤씨가납품하지않았더라도고객사의모바일서비스에대한네이티브관련\n기술을문의하거나네이티브수정개발을의뢰/ 지원받을수있는오픈형네이티브기술지원창구입니다.\nNative Care Service (NCS)\n\n--- 페이지 27 ---\nIV. Reference",
    "metadata": {
      "source_file": "data/source/documents/corporate/2025_회사소개서.pdf",
      "file_name": "2025_회사소개서.pdf",
      "file_type": "pdf",
      "chunk_index": 14,
      "total_chunks": 25,
      "chunk_strategy": "documents/corporate",
      "chunk_size": 1200,
      "overlap": 150,
      "original_metadata": {
        "title": "PptxGenJS Presentation",
        "author": "PptxGenJS",
        "pages": 53,
        "parsed_at": "2025-08-01T07:01:18.386527"
      },
      "position": {}
    },
    "tokens": 490,
    "char_count": 1196,
    "created_at": "2025-08-01T15:32:19.532Z"
  },
  {
    "id": "c0a84096_0015",
    "content": "--- 페이지 27 ---\nIV. Reference\n\n--- 페이지 28 ---\n01. Mobile SFA :: LOTTE WellFood\n롯데웰푸드통합SFA 구축및B2B 주문시스템\nBackground\n롯데웰푸드차세대프로젝트중현장활동및영업SFA 부문을통합\n구축하는프로젝트로모바일통합SFA 및B2B 주문웹시스템을구축함\n•\n계열사합병에따른통합SFA 환경구축\n•\n거래처영업/관리Tool을바탕으로거래처핵심정보관리및\n성과지표가시화를통해성공적인영업관리\n•\n승인프로세스개선, 실시간재고정보제공, B2B 주문관리등\n전체적인현장활동및SFA 업무개선\nGoal\nUX 컨설팅, SI\nServices\n스마트Work가실현가능한프로세스를통하여현장활동성강화및\n시스템안정성개선등최적의SFA / B2B 주문시스템을구축\nPerformance\nLOTTE WellFood\nbizMOB, bizPUSH\nPlatform\n01. 웹/ 모바일Hybrid Platform :: 통합SFA 및주문관리시스템\n반응형WEB\n모바일App\n\n--- 페이지 29 ---\n한국버거킹옴니채널리뉴얼\nBackground\n기존버거킹APP/WEB의불만사항을적극개선하고,\n동시에통합개발환경을조성하여보안성, 호환성을\n극대화한플랫폼구축\nGoal\nPlatform\nUX 컨설팅, SI\nServices\n사용자들에게더만족스러운사용자경험을제공함과동시에,\n고객에게는최신개발트렌드가적용된통합개발환경을통해\n유지보수가용이한관리시스템환경을제공하게됨.\nPerformance\n한국버거킹옴니채널리뉴얼\n운영\n서비스\n진행중\n버거킹APP/WEB 이용자들의의견을적극반영하여개선된\nUI/UX를제공함과동시에APP/WEB 통합개발환경을\n구축하고자함.\nbizMOB 4.0, bizPUSH, Vue.js\n01. 웹/ 모바일Hybrid Platform :: 버거킹옴니채널구축\n반응형WEB\n모바일App",
    "metadata": {
      "source_file": "data/source/documents/corporate/2025_회사소개서.pdf",
      "file_name": "2025_회사소개서.pdf",
      "file_type": "pdf",
      "chunk_index": 15,
      "total_chunks": 25,
      "chunk_strategy": "documents/corporate",
      "chunk_size": 1200,
      "overlap": 150,
      "original_metadata": {
        "title": "PptxGenJS Presentation",
        "author": "PptxGenJS",
        "pages": 53,
        "parsed_at": "2025-08-01T07:01:18.386527"
      },
      "position": {}
    },
    "tokens": 338,
    "char_count": 886,
    "created_at": "2025-08-01T15:32:19.532Z"
  },
  {
    "id": "c0a84096_0016",
    "content": "--- 페이지 30 ---\n01. 웹/ 모바일Hybrid Platform :: 버거킹옴니채널구축(일본)\nBackground\n한국버거킹리뉴얼과같은맥락으로보다직관적인UI/UX를\n제공하고, 현지서비스환경에맞춰APP/WEB 통합환경\n구축을시도\n일관된소비경험을제공한다는기반에맞춰직관적인UI로\n리뉴얼, 버거킹브랜드소비에긍정적인영향을주는환경\n조성\nGoal\nPlatform\nUX 컨설팅, SI\nServices\nPerformance\n일본버거킹옴니채널리뉴얼\n운영\n서비스\n진행중\n일본버거킹옴니채널리뉴얼\nbizMOB 4.0, bizPUSH, Vue.js\n현지사용자들에게국내서비스품질과같은향상된사용자경험을\n제공하며, APP/WEB 통합서비스망구축을통해고객관리에도용이한\n시스템인프라를제공할수있음.\n반응형WEB\n모바일App\n\n--- 페이지 31 ---\n세스코IoT 기반공용시설공기질모니터링/원격제어시스템\nBackground\n정부규제에따른학교, 지하상가등다중이용시설의\n공기질관리시스템필요\n학교,병원,호텔,복합쇼핑몰등다양한시설에적용가능한\n확장성이높은UX디자인적용\n다양한환경에서블록생성,오염지수모니터링,공조제어시스템을\n디자인\nGoal\nbizMOB, bizPUSH\nPlatform\nUX 컨설팅, SI, SM\nServices\n•\n기설치된IAQ 센서및공기청정기연동을통해다중이용시설\n공기질조회및공기정정기원격제어기능제공\n•\n관리자Web을통한다양한다중이용시설구획설정기능제공\nPerformance\nCesco Act Air\n반응형WEB\n01. 웹/ 모바일Hybrid Platform :: Cesco Act Air\n\n--- 페이지 32 ---\n02. Omni Channel :: Tim Hortons\nBKR 팀홀튼옴니채널\nBackground\n글로벌브랜드‘팀홀튼’의성공적인국내런칭과\n사용자에게팀홀튼의아이덴티티를정확하게전달하고, \n일관되고편리한소비플랫폼제공\n소비자에게‘팀홀튼’이라는브랜드를성공적으로소개하고,\n홈에서결재까지신속하게도달할수있는주문프로세스를\n제공\nGoal\nbizMOB, bizPUSH\nPlatform\nUX 컨설팅, SI\nServices\n‘팀홀튼’의성공적인국내런칭에기술적인기여\n지속적이고안정적인시스템운영이가능한체계구현\n일관적이고편리한소비경험전달을위한옴니채널플랫폼구축\nPerformance\nBKR 팀홀튼모바일시스템\n운영\n서비스\n진행중\n반응형WEB\n모바일App",
    "metadata": {
      "source_file": "data/source/documents/corporate/2025_회사소개서.pdf",
      "file_name": "2025_회사소개서.pdf",
      "file_type": "pdf",
      "chunk_index": 16,
      "total_chunks": 25,
      "chunk_strategy": "documents/corporate",
      "chunk_size": 1200,
      "overlap": 150,
      "original_metadata": {
        "title": "PptxGenJS Presentation",
        "author": "PptxGenJS",
        "pages": 53,
        "parsed_at": "2025-08-01T07:01:18.386527"
      },
      "position": {}
    },
    "tokens": 444,
    "char_count": 1127,
    "created_at": "2025-08-01T15:32:19.532Z"
  },
  {
    "id": "c0a84096_0017",
    "content": "--- 페이지 33 ---\n02. Omni Channel :: Tim Hortons 선불카드적용\nBKR 팀홀튼선불카드\nBackground\n성공적으로런칭한‘팀홀튼’ 소비자들의편리한\n구매경험을위한앱내선불카드시스템‘팀스카드’를\n서비스하고자함\n‘팀홀튼’을이용하는고객들에게팀스카드를통해새로운\n구매경험을제공하고, 고객사용에있어편리하고직관적인\n결제수단으로자리매김\nGoal\nPlatform\nUX 컨설팅, SI\nServices\n‘팀홀튼’을이용하는고객들에게‘팀스카드’라는효율적인\n결제수단으로서새로운선택지를제공. 편리한사용경험을제공하는\n선불카드시스템을통해브랜드에충성도높은고객유치에기여\nPerformance\nBKR 팀홀튼선불카드\n운영\n서비스\n진행중\nbizMOB, Vue.js\n\n--- 페이지 34 ---\n03. Mobile SFA :: 아모레퍼시픽IRIS\n아모레퍼시픽방판카운셀러모바일업무App\nBackground\n판매현장의상황변화에디지털화를통한능동적대응을\n위하여모바일UX컨설팅및시스템구축\n판매/수금/미수금등카운셀러업무기능의사용성강화\n회사(영업소)-카운셀러-고객간의커뮤니케이션채널확보\nGoal\nbizMOB, bizPUSH\nPlatform\nUX 컨설팅, SI, SM, CS\nServices\n•\n방판세일즈모바일앱사용자보유(4만명이상)\n•\nAWS Cloud 기반의시스템구축및운영\nPerformance\nIRIS\n운영\n서비스\n진행중\n\n--- 페이지 35 ---\n관리업무앱\n기업고객/의류특화앱\n개인고객앱\n03. Mobile SFA :: 차세대택배모바일시스템\n관리업무앱, 기업고객/의류특화앱. 개인고객용앱\nBackground\n택배관리업무의특성상이동시사용할수있는모바일앱,\n기업고객및개인고객을대상으로하는전용앱필요\n모바일앱을통한이동성확보로관리업무의효율증대\n쉬운기업고객관리\n기존개인고객앱(택배고)의브랜드아이텐티티확보\nGoal\nL’EMP (롯데모바일개발플랫폼)\nPlatform\nUI 기획, SI\nServices\n•\n계약부터집배송관리,사고처리접수,평가,정산에이르는택배전\n업무를하나로통합하고프로세스를개선하여사용자편의를크게\n제고하여물류사업확대에기여\n•\n롯데계열사내에서우수구축사례로평가됨\nPerformance\n차세대택배모바일시스템",
    "metadata": {
      "source_file": "data/source/documents/corporate/2025_회사소개서.pdf",
      "file_name": "2025_회사소개서.pdf",
      "file_type": "pdf",
      "chunk_index": 17,
      "total_chunks": 25,
      "chunk_strategy": "documents/corporate",
      "chunk_size": 1200,
      "overlap": 150,
      "original_metadata": {
        "title": "PptxGenJS Presentation",
        "author": "PptxGenJS",
        "pages": 53,
        "parsed_at": "2025-08-01T07:01:18.386527"
      },
      "position": {}
    },
    "tokens": 424,
    "char_count": 1051,
    "created_at": "2025-08-01T15:32:19.532Z"
  },
  {
    "id": "c0a84096_0018",
    "content": "--- 페이지 36 ---\n03. Mobile SFA :: Hanwha Convergence\n한화컨버전스태양광O&M\nBackground\n발전소관리업무의효율성및현장O&M 업무수행을위하여\n관리자와작업자간Communication이원활히진행하기위한현장\n중심의모바일시스템이필요\n태양광O&M 관련업무진행시고객과/ O&M 수행사(관리자, \n작업자)별원활한의사소통과지속적인업무의완결성/품질을유지\nGoal\nbizMOB, bizPUSH\nPlatform\nUX 컨설팅, SI, SM\nServices\nO&M 업무의전산화로인건비절감효과를이끌어내고, 현장\n중심의업무를모바일로구현, 효율성을강화하여안정적인발전\n수익창출이가능해짐\nPerformance\n태양광모니터링및티케팅시스템\n운영\n서비스\n진행중\n\n--- 페이지 37 ---\n03. Mobile SFA :: SCG FMS\n서울도시가스현장업무모바일시스템\nBackground\n현장업무의편의성을높이고사내자산조사업무의효율적인\n업무수행을위해UX,UI 및기능개선이필요\n수기로작성했던일부현장업무를전반적으로디지털화하고\nUX를개선하여현장업무의편의성및효율성증대\nGoal\nbizMOB, bizPUSH\nPlatform\nUX 컨설팅, SI\nServices\n기존의PDA 업무화면을최신UX트랜드와사용자\n니즈에맞게전면개편\nPerformance\nSCG FMS\n\n--- 페이지 38 ---\n04. Mobile IoT :: 코웨이IoCare\n코웨이모바일IoT 원격제어시스템\nBackground\nIoT 플랫폼기반의코웨이고객분들의제품관리및사용정보를\n실시간으로지원하기위한시스템필요\n코웨이의IoT기반모든제품을연동하여실시간,기간별실내공기질\n및정수기음용량을확인할수있는Mobile App구축\nGoal\nbizMOB (for Angula), bizPUSH\nPlatform\nUX 컨설팅, SI, SM\nServices\n•\n앤어워드중견기업분야에서그랑프리수상및소비자전자제품분야\nWinner 수상\n•\n고객집에제품을놓을때의인테리어를일러스트방식의\n시뮬레이션으로보여주는등사용자중심의새로운경험가치제공\n•\n운영서비스를통해꾸준한서비스확장진행중, 해외시장대상확산\nPerformance\nIoCare\n운영\n서비스\n진행중",
    "metadata": {
      "source_file": "data/source/documents/corporate/2025_회사소개서.pdf",
      "file_name": "2025_회사소개서.pdf",
      "file_type": "pdf",
      "chunk_index": 18,
      "total_chunks": 25,
      "chunk_strategy": "documents/corporate",
      "chunk_size": 1200,
      "overlap": 150,
      "original_metadata": {
        "title": "PptxGenJS Presentation",
        "author": "PptxGenJS",
        "pages": 53,
        "parsed_at": "2025-08-01T07:01:18.386527"
      },
      "position": {}
    },
    "tokens": 403,
    "char_count": 1043,
    "created_at": "2025-08-01T15:32:19.532Z"
  },
  {
    "id": "c0a84096_0019",
    "content": "--- 페이지 39 ---\n04. Mobile IoT :: Cesco IoT App\n세스코IoT 원격제어시스템\nBackground\n공기청정기능과함께라돈제거기능이있는새로운\n공기청정기개발에따른UX컨설팅및시스템구축필요\n사용자주변의공기질상황을인지하여최적의공기질상태를\n자동으로유지하는서비스앱을디자인\nGoal\nbizMOB, bizPUSH\nPlatform\nUX 컨설팅, SI, SM\nServices\n모바일앱과공기청정기간의유기적인데이터교환을기반으로\n사용자의상황을고려하여공기질을개선\nMS Azure Cloud 기반구축\nPerformance\nCesco IoT App\n운영\n서비스\n진행중\n\n--- 페이지 40 ---\n05. Mobile Digital Workplace :: 현대차그룹Mobile Autoway\n현대자동차그룹차세대모바일그룹웨어\nBackground\n기존의그룹웨어는일방적인정보흐름으로인해사용자가\n신속하고효율적으로업무를처리할수없는상황에서\n상호작용을할수있는UX 디자인개선작업이필요\n업무의생산성향상및ROI 개선\nGoal\nbizMOB, bizPUSH\nPlatform\nUX 컨설팅, SI, SM\nServices\n•\n글로벌해외법인으로확장\n진행중(미주,유럽,아프리카,아시아등)\n•\n사용자와상호작용할수있는UX 디자인제공을통해\n필요한정보를적시에신속·정확하게제공\nPerformance\nMobile Autoway\n\n--- 페이지 41 ---\n05. Mobile Digital Workplace :: MS Digital Workplace\n한국마이크로소프트차세대Digital Workplace 선행UX 디자인\nBackground\n차세대그룹웨어를위한업무& 관계중심적UX 컨셉도출\n및디자인제시\n업무, 사람, 시간의Context를고려한새로운디지털\n워크플레이스컨셉도출\nGoal\nUX 선행디자인\nServices\n•\n기업임직원의24시간행동프로세스를사용자유형별로분석,\n각사용자유형별표준업무관련시나리오도출\n•\nLS 그룹, 현대자동차그룹등대형고객사차세대그룹웨어\n프로젝트에반영\nPerformance\nMS Digital Workplace\n\n--- 페이지 42 ---\nV. Why bizMOB 4.0_Mobile",
    "metadata": {
      "source_file": "data/source/documents/corporate/2025_회사소개서.pdf",
      "file_name": "2025_회사소개서.pdf",
      "file_type": "pdf",
      "chunk_index": 19,
      "total_chunks": 25,
      "chunk_strategy": "documents/corporate",
      "chunk_size": 1200,
      "overlap": 150,
      "original_metadata": {
        "title": "PptxGenJS Presentation",
        "author": "PptxGenJS",
        "pages": 53,
        "parsed_at": "2025-08-01T07:01:18.386527"
      },
      "position": {}
    },
    "tokens": 384,
    "char_count": 1040,
    "created_at": "2025-08-01T15:32:19.532Z"
  },
  {
    "id": "c0a84096_0020",
    "content": "--- 페이지 42 ---\nV. Why bizMOB 4.0_Mobile\n\n--- 페이지 43 ---\n모바일시스템을구축, 운영함에있어다양한앱을다양한부서에서기준없이개발을함에따라운영및유지보수가어렵고, 운영을위한비용이상승됩니다. \n또한서로다른기술로모바일시스템이구축될경우, 모바일기술의빠른변화에공통으로대응하기가어렵습니다. \n이는작은변화에도대응이어려워고객과의신뢰를져버릴수있는큰이슈로확산되는경우가많습니다.\nWhy bizMOB 4.0 : 필요성\n기획\n마케팅\n영업\nIT\n구축/ 운영\nA 社\nB 社\nC 社\n개발환경\n네이티브앱\n(IOS, AOS)\n모바일웹\n웹앱\nCORDOVA\nReact native\nFlutter…\nAPP\nAPP\n….\n….\n….\nAPP\n모바일OS 버전업진행시각모바일앱마다버전대응수정개발및테스트검증에따른운영, 유지보수관리비용상승\n각앱별기술차이에따른기술대응비용상승및개발자의존적시스템으로변질\nApp\nApp\nApp\nApp\n\n--- 페이지 44 ---\n모바일플랫폼도입은모바일시스템구축의표준화를마련하는것입니다. 향후추가될다양한종류의모바일서비스를공동대응하고, 내재화함으로써\n신속하고안정적인현장대응이가능합니다. 즉, 표준화를통하여비용절감, 일관된품질보증, 시스템간의용이한커뮤니케이션이가능해집니다.\nWhy bizMOB 4.0 : 필요성\nMobile System A\nMobile System B\nMobile System C\nNew One\n유지보수\nBusiness Logic\nMobile UI\nLegacy I/F\n운영환경\n보안\n유지보수\nBusiness Logic\nMobile UI\nLegacy I/F\n운영환경\n보안\n유지보수\nBusiness Logic\nMobile UI\nLegacy I/F\n운영환경\nMobile System A\nMobile System B\nNew One\nMobile System C\nBusiness Logic\nMobile UI\nBusiness Logic\nMobile UI\nBusiness Logic\nMobile UI\nLegacy I/F\n운영환경\n보안\nUX 컴포넌트\n유지보수\n모바일시스템개별구축\n플랫폼기반구축\nA\nA\nB\nA\nB\nC\nCost\nCost\nTime\nTime\nP\nP\nP\nA\n공통모듈(인증..)\nA\nB\nA\nB\nC",
    "metadata": {
      "source_file": "data/source/documents/corporate/2025_회사소개서.pdf",
      "file_name": "2025_회사소개서.pdf",
      "file_type": "pdf",
      "chunk_index": 20,
      "total_chunks": 25,
      "chunk_strategy": "documents/corporate",
      "chunk_size": 1200,
      "overlap": 150,
      "original_metadata": {
        "title": "PptxGenJS Presentation",
        "author": "PptxGenJS",
        "pages": 53,
        "parsed_at": "2025-08-01T07:01:18.386527"
      },
      "position": {}
    },
    "tokens": 386,
    "char_count": 1067,
    "created_at": "2025-08-01T15:32:19.532Z"
  },
  {
    "id": "c0a84096_0021",
    "content": "--- 페이지 45 ---\n앱운영을위한시스템구축비용이부담스러운가요?\nMobile Server\nPush Region\nServer\n(bizMOB Push)\nPush Management \nbizMOB Portal\nApp Management\n( bizMOB Server )\nInternal AppStore\n( bizMOB AppStore )\nPublic AppStore\nServer Framework\n( bizMOB Client )\nApp Framework\nPublic AppStore\nMobile Application\n단순구동앱개발이아닌모바일시스템의운영까지고려한전체환경을구축하기위해서는많은비용과시행착오를겪을수있습니다. \nbizMOB 4.0 은앱개발및운영에따른전체시스템을제공해드립니다.\n앱운영에따른전체시스템제공\n운영시스템개발및검증필요\n사용시\n플랫폼미사용시\n\n--- 페이지 46 ---\n하이브리드앱은느리다고생각하나요?\nbizMOB 4.0 하이브리드플랫폼은샌드박스방식으로개발되어앱속도가Full Native 앱과유사합니다.\n샌드박스방식의하이브리드앱(필요시Full Native 화면적용가능)\n타사하이브리드앱방식\n웹서비스방식의하이브리드앱\nAdmin Portal\nDeploy\nupdate\nAccess/Version\n1\n모바일개발자\nbizMOB Server\n2\n3\nDownload/Install\n3\nUpdate\nDeploy\n1\n모바일개발자\nWeb/WAS Server\n사용자\nAccess\n2\n3\nDownload\n사용자\n* 앱컨텐츠소스가단말기에존재하여구동속도가빠름.\n* 앱컨텐츠소스가웹서버에존재하여로딩속도가상대적으로느림.\n사용시\n\n--- 페이지 47 ---\nIOS, AOS 가업데이트될때마다불안한가요?\nbizMOB 4.0은Native 전담팀에서OS 업데이트패치에대한대응을Vendor사(구글, 애플)의공식배포전에사전대응을합니다.\n또한1차자동테스트툴을이용하여기본기능을검증하고, 2차로담당운영팀에서커스텀플러그인, 비즈니스로직검증을통하여고객사에전달됩니다.\n전담팀의안정적인OS 패치서비스제공\nOS별, 앱별개별대응\n운영중인앱\n개별\nupdate\n개별\nupdate\n개별\nupdate\nOS\nupdate\n앱스토어배포\n안정성사전확보및비용절감\n개별비용발생및안정성검증의불안감\n사용시\nOS\nupdate\n전체\nupdate\n플랫폼미사용시\nAndroid\niOS\n2-Way\nTesting",
    "metadata": {
      "source_file": "data/source/documents/corporate/2025_회사소개서.pdf",
      "file_name": "2025_회사소개서.pdf",
      "file_type": "pdf",
      "chunk_index": 21,
      "total_chunks": 25,
      "chunk_strategy": "documents/corporate",
      "chunk_size": 1200,
      "overlap": 150,
      "original_metadata": {
        "title": "PptxGenJS Presentation",
        "author": "PptxGenJS",
        "pages": 53,
        "parsed_at": "2025-08-01T07:01:18.386527"
      },
      "position": {}
    },
    "tokens": 413,
    "char_count": 1137,
    "created_at": "2025-08-01T15:32:19.532Z"
  },
  {
    "id": "c0a84096_0022",
    "content": "--- 페이지 48 ---\n차별화된모바일UX 를원하나요?\nbizMOB 4.0 은웹프레임워크를적용하여UX 구현에제한이없습니다. \n또한자체UX 브랜드OREDx 를보유하고있으며, UX 전문컨설팅인력이사용자관점에서서비스경험전략과UI 디자인을제공합니다.\n데이터를기반으로\n문제정의와솔루션을도출\n데스크\n리서치\n휴리스틱\n평가\n사용자\n리서치\nUX 리서치\nMVP\n모델링\nUX\n프로토타입\n수용도\n검증\nUX\n모델링\nUX / UI \n방향설정\n공통요소도출\n가이드설정\nUX 방법론\n가이드및\n이용기준정의\n사용자\n모니터링/\n인사이트\n리포팅\n분기별\n트랜드\n리포팅\n서비스\n블루프린팅\n파트너십을통한\n지속적인리포팅과\n모니터링제공\n서비스수용도검증과\n서비스모델확장\n서비스특성과이용맥락에\n맞는UX가이드제시\n지속적인파트너십으로\n시장변화에따른리포팅제공\n분석\n검증\n가이드제시\n리포팅\nUX Consulting \n& Design Service\n본질적가치에집중한\n모델확장및검증\n품질관리를위한\n명확한가이던스제시\n빠른진단을통한\n문제정의",
    "metadata": {
      "source_file": "data/source/documents/corporate/2025_회사소개서.pdf",
      "file_name": "2025_회사소개서.pdf",
      "file_type": "pdf",
      "chunk_index": 22,
      "total_chunks": 25,
      "chunk_strategy": "documents/corporate",
      "chunk_size": 1200,
      "overlap": 150,
      "original_metadata": {
        "title": "PptxGenJS Presentation",
        "author": "PptxGenJS",
        "pages": 53,
        "parsed_at": "2025-08-01T07:01:18.386527"
      },
      "position": {}
    },
    "tokens": 208,
    "char_count": 491,
    "created_at": "2025-08-01T15:32:19.532Z"
  },
  {
    "id": "c0a84096_0023",
    "content": "--- 페이지 49 ---\n앱전문개발자가없나요?\n<div class=\"_ngApp\">\n<div ng-click=\"drawerMenu.hide($event)\" bg-\nnsc=\"{&quot;web&quot;:&quot;Mblog.home&quot\n;}\" 969px;\">\n<div class=\"Ndrawer_scroll_wrap is_css\n_drawerScrollWrap ng-hide\" ng-\nshow=\"drawerMenu.isShow\" \nstyle=\"display:block\">\n</div>\nthis.$bizMOB.Network.requestTr({\n_bMock: false,\n_sTrcode: \"DM0002\",\n_oBody: {\n\"startIndex\": 0,\n\"endIndex\": 9\n},\n_fCallback: function(res: any) {\nconsole.log(res);\nalert(JSON.stringify(res) );\n}\n});\n+\n전문퍼블리셔\n(UX 제한없음)\n서버개발자\nHTML , CSS\nJavscript , Typescript \n& \nbizMOB APIs\n웹개발자\nUX 디자인전문인력\n및업체활용가능\nbizMOB4.0 프레임워크는기존의웹개발자(Front, Server)만있으면개발및운영이가능합니다. 프로젝트를통하여프레임워크별API 및개발가이드를제공/ 교육하고, \n웹개발에사용되는일반기술(HTML 5, CSS 3, JavaScript, TypeScript, Java, Spring) 을사용하여개발및운영을할수있기때문에개발인원변화에도의존도가낮습니다.\n개발리소스활용이용이\n프레임워크별개발자필요\n언어별, 프레임워크별소스코드상이\n사용시\n플랫폼미사용시\n코르도바개발자\n리액트개발자\n플러터개발자\n서버개발자",
    "metadata": {
      "source_file": "data/source/documents/corporate/2025_회사소개서.pdf",
      "file_name": "2025_회사소개서.pdf",
      "file_type": "pdf",
      "chunk_index": 23,
      "total_chunks": 25,
      "chunk_strategy": "documents/corporate",
      "chunk_size": 1200,
      "overlap": 150,
      "original_metadata": {
        "title": "PptxGenJS Presentation",
        "author": "PptxGenJS",
        "pages": 53,
        "parsed_at": "2025-08-01T07:01:18.386527"
      },
      "position": {}
    },
    "tokens": 278,
    "char_count": 845,
    "created_at": "2025-08-01T15:32:19.532Z"
  },
  {
    "id": "c0a84096_0024",
    "content": "--- 페이지 50 ---\nbizMOB4.0 프레임워크표준개발프로세스로시스템구축기간이상대적으로짧고, 테스트/안정호기간확보가가능합니다.\n표준화된모바일개발프로세스가필요한가요?\n표준개발프로세스준수\n사용시\n요구분석\n설계\n설비설계\nUI 디자인\nUI Publish\n비지니스\n로직개발\nUI 컨테이너\n적용(앱)\n비지니스로직\n적용/ 개발\n어댑터\n적용/ 개발\n개발테스트\n통합테스트\n화면설계\nInterFacre 정의및공유\n{\n\"header\": {\n\"result\": true,\n\"error_code\": \"\",\n\"error_text\": \"\",\n\"trcode\": \"DM0001\",\n\"trcodeName\": \"Login\"\n},\n\"body\": {\n\"userId\": \"\", \n\"passwd\": \"\"\n}\n}\n설계\n설비설계\n디자이너\n앱퍼블리셔\nFront 개발자\n앱개발자\n서버개발자\nbizMOB Service Builder\nAPIs Management\n자동생성\n\n--- 페이지 51 ---\n또한bizMOB4.0 프레임워크는개발자친화적인개발환경, 테스트환경, 운영환경을제공하여성공적인프로젝트가될수있도록지원합니다.\n표준화된모바일개발프로세스가필요한가요?\n단일앱에서개발\n개발자친화적인환경제공\n에뮬레이터\n비즈니스로직구현중점\n개발/테스트용앱\n디자인/앱기능구현/테스트중점\n운영앱\n에뮬레이터/ 개발/ 테스트/ 운영\n사용시\n플랫폼미사용시\n\n--- 페이지 52 ---\nbizMOB4.0 프레임워크는OS 및단말기기본기능라이브러리제공외,\n외부솔루션(결제, 보안, 소셜, 문서변환, 이미지변환, 비대면인증등) 50여개의업체와의연동경험을라이브러리형태로보유하고있으며, 적용이가능합니다.\n다양한외부연동이필요한가요?\n기본라이브러리및외부모듈연동커스텀라이브러리제공\n사용시\nbizMOB\nClient Platform\nApplication Level\n( HTML5, CSS, \nJavaScript)\n( Native API)\nContainer Service Level\n( Service \nManagerI)\nCore Level\nPlug-in\nBase\nBase\n\n--- 페이지 53 ---\nThank You\nQ&A",
    "metadata": {
      "source_file": "data/source/documents/corporate/2025_회사소개서.pdf",
      "file_name": "2025_회사소개서.pdf",
      "file_type": "pdf",
      "chunk_index": 24,
      "total_chunks": 25,
      "chunk_strategy": "documents/corporate",
      "chunk_size": 1200,
      "overlap": 150,
      "original_metadata": {
        "title": "PptxGenJS Presentation",
        "author": "PptxGenJS",
        "pages": 53,
        "parsed_at": "2025-08-01T07:01:18.386527"
      },
      "position": {}
    },
    "tokens": 381,
    "char_count": 1026,
    "created_at": "2025-08-01T15:32:19.532Z"
  },
  {
    "id": "171bd2ec_0000",
    "content": "/**\n * @title bizMOB Web Extend\n * @author mhchoi@mcnc.co.kr\n * @version 1.0\n */\nvar bizMOBWebCore = {};\n\nbizMOBWebCore.name = 'bizMOBWebCore';\nbizMOBWebCore.version = '1.0';\n\n/**\n * Web Module Class\n */\nbizMOBWebCore.Module = {};\nbizMOBWebCore.Module.serviceName = 'Module';\nbizMOBWebCore.Module.config = {};\n\n// bizMOB Web Logger\nbizMOBWebCore.Module.logger = function (sService, sAction, sLogType, sMessage) {\n // 릴리즈 환경에서는 로그 출력 안함.\n if (bizMOBWebCore.App.config._bIsRelease) return;",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 0,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 132,
    "char_count": 487,
    "created_at": "2025-08-01T15:32:19.585Z"
  },
  {
    "id": "171bd2ec_0001",
    "content": "// 콘솔 로그 타입 스타일 정의\n var baseStyle = 'padding: 2px 4px; border-radius: 2px;';\n var infoStyle = baseStyle + ' color: white; background: #1a73e8;';\n var logStyle = baseStyle + ' color: white; background: #546e7a;';\n var debugStyle = baseStyle + ' color: white; background: #009688;';\n var warnStyle = baseStyle + ' color: white; background: #ffbb33;';\n var errorStyle = baseStyle + ' color: white; background: #d9534f;';",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 1,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 114,
    "char_count": 417,
    "created_at": "2025-08-01T15:32:19.585Z"
  },
  {
    "id": "171bd2ec_0002",
    "content": "// 콘솔 로그 Class 스타일 정의\n var bracketStyle = 'font-weight: bold;';\n var infoBracketStyle = bracketStyle + ' color: #1a73e8;';\n var logBracketStyle = bracketStyle + ' color: #546e7a;';\n var debugBracketStyle = bracketStyle + ' color: #009688;';\n var warnBracketStyle = bracketStyle + ' color: #ffbb33;';\n var errorBracketStyle = bracketStyle + ' color: #d9534f;';\n\n var msg = '';\n\n // JSON.stringify 오류시 빈 값으로 처리\n try {\n msg = typeof sMessage === 'object' ? JSON.stringify(sMessage) : sMessage;\n } catch (error) {\n msg = '';\n }",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 2,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 142,
    "char_count": 523,
    "created_at": "2025-08-01T15:32:19.585Z"
  },
  {
    "id": "171bd2ec_0003",
    "content": "// 로그 출력\n switch (sLogType) {\n case 'I':\n console.info('%c bizMOB INFO %c ' + '%c' + trace + '%c ' + log, infoStyle, '', infoBracketStyle, '');\n break;\n case 'L':\n console.info('%c bizMOB LOG %c ' + '%c' + trace + '%c ' + log, logStyle, '', logBracketStyle, '');\n break;\n case 'D':\n console.info('%c bizMOB DEBUG %c ' + '%c' + trace + '%c ' + log, debugStyle, '', debugBracketStyle, '');\n break;\n case 'W':\n console.info('%c bizMOB WARN %c ' + '%c' + trace + '%c ' + log, warnStyle, '', warnBracketStyle, '');\n break;\n case 'E':",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 3,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 144,
    "char_count": 528,
    "created_at": "2025-08-01T15:32:19.585Z"
  },
  {
    "id": "171bd2ec_0004",
    "content": "/**\n * 파라미터 체크\n *\n * @param Object oParams 확인될 파라미터 정보 객체.\n * @param Array aRequired 필수 파라미터 목록.\n *\n * @return boolean result 파라미터 체크 결과\n */\nbizMOBWebCore.Module.checkParam = function (oParams, aRequired) {\n var action = 'checkParam'; // 함수 동작을 식별하기 위한 변수\n var typeList = { // 변수 타입에 대한 매핑 객체\n 'a': 'array',\n 'o': 'object',\n 'f': 'function',\n 'b': 'boolean',\n 's': 'string',\n 'n': 'number',\n 'v': 'variable',\n 'e': 'element',\n };",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 4,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 130,
    "char_count": 429,
    "created_at": "2025-08-01T15:32:19.585Z"
  },
  {
    "id": "171bd2ec_0005",
    "content": "var param = oParams || {}; // 전달된 파라미터 객체\n var paramKeys = Object.keys(param); // 전달된 파라미터 객체의 속성 목록\n var required = aRequired || []; // 필수 파라미터 목록\n var missingKeys = required.filter(function (key) { // 없는 필수 파라미터 목록\n return paramKeys.indexOf(key) === -1;\n });",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 5,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 80,
    "char_count": 260,
    "created_at": "2025-08-01T15:32:19.585Z"
  },
  {
    "id": "171bd2ec_0006",
    "content": "// 전달된 파라미터가 오브젝트가 아닌 경우\n if (typeof param !== 'object') {\n bizMOBWebCore.Module.logger(this.serviceName, action, 'E', 'Invalid parameter format. Parameter have to define JSON.'); // 로그 출력\n return false;\n }\n // 전달된 파라미터가 없는 경우\n else if (!paramKeys.length) {\n if (required.length == 0) { // 필수 파라미터가 없는 경우\n return true; // 유효성 검사 통과\n }\n else {\n bizMOBWebCore.Module.logger(this.serviceName, action, 'L', 'Cannot found parameters.'); // 로그 출력\n return false; // 유효성 검사 실패\n }\n }\n // 필수 파라미터가 없는 경우\n else if (missingKeys.length) {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 6,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 157,
    "char_count": 525,
    "created_at": "2025-08-01T15:32:19.585Z"
  },
  {
    "id": "171bd2ec_0007",
    "content": "}\n }\n // 필수 파라미터가 없는 경우\n else if (missingKeys.length) {\n bizMOBWebCore.Module.logger(this.serviceName, action, 'E', 'Parameter is required. - ' + missingKeys.join(', ')); // 로그 출력\n return false;\n }\n // 정상 파라미터\n else {\n // 파라미터 객체 속성 순회\n for (var key in param) {\n if (Object.hasOwnProperty.call(param, key)) {\n var type = key.substring(1, 2); // key값 앞에 _s, _n...에서 s, n...을 추출\n var value = param[key]; // value",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 7,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 120,
    "char_count": 410,
    "created_at": "2025-08-01T15:32:19.585Z"
  },
  {
    "id": "171bd2ec_0008",
    "content": "// 속성 값이 없는 경우\n if (value === undefined) {\n bizMOBWebCore.Module.logger(this.serviceName, action, 'L', 'Parameter is undefined. it skip check - ' + key); // 로그 출력\n }\n // 속성 값이 null인 경우\n else if (value === null) {\n bizMOBWebCore.Module.logger(this.serviceName, action, 'L', 'Parameter is null. it skip check. - ' + key); // 로그 출력\n }\n // 정의되지 않은 타입이면 false\n if (typeList[type] === undefined) {\n bizMOBWebCore.Module.logger(this.serviceName, action, 'E', 'Parameter is unknown variable type. - ' + key); // 로그 출력\n return false;\n }\n // 배열 타입인데, 배열이 아닌 경우 false",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 8,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 160,
    "char_count": 556,
    "created_at": "2025-08-01T15:32:19.585Z"
  },
  {
    "id": "171bd2ec_0009",
    "content": "return false;\n }\n // 배열 타입인데, 배열이 아닌 경우 false\n else if (typeList[type] === 'array' && !Array.isArray(value)) {\n bizMOBWebCore.Module.logger(this.serviceName, action, 'E', 'Parameter is not an array. - ' + key); // 로그 출력\n return false;\n }\n // 배열 타입인데, 배열이 비어있는 경우 false\n else if (typeList[type] === 'array' && value.length === 0) {\n bizMOBWebCore.Module.logger(this.serviceName, action, 'E', 'Parameter is empty Array. - ' + key); // 로그 출력\n return false;\n }\n // 오브젝트 타입인데, 오브젝트가 아닌 경우 false\n else if (typeList[type] === 'object' && typeof value !== 'object') {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 9,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 163,
    "char_count": 559,
    "created_at": "2025-08-01T15:32:19.585Z"
  },
  {
    "id": "171bd2ec_0010",
    "content": "else if (typeList[type] === 'object' && typeof value !== 'object') {\n bizMOBWebCore.Module.logger(this.serviceName, action, 'E', 'Parameter is not an object. - ' + key); // 로그 출력\n return false;\n }\n // 그 외 타입인데, 타입이 다른 경우 false\n else if (typeList[type] !== typeof value) {\n bizMOBWebCore.Module.logger(this.serviceName, action, 'E', 'Parameter have wrong value. - ' + key); // 로그 출력\n return false;\n }\n // variable 또는 element 타입인 경우 true\n else if (typeList[type] === 'variable' || typeList[type] === 'element') {\n return true;\n }\n // 유효성 검사 통과\n else {\n return true;\n }\n }\n }\n }\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 10,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 163,
    "char_count": 578,
    "created_at": "2025-08-01T15:32:19.585Z"
  },
  {
    "id": "171bd2ec_0011",
    "content": "/**\n * Web EventManager Class\n */\nbizMOBWebCore.EventManager = {};\nbizMOBWebCore.EventManager.serviceName = 'EventManager';\nbizMOBWebCore.EventManager.config = {};\n\nbizMOBWebCore.EventManager.storage = {\n // Web init\n 'ready': true,\n};\n\n// 이벤트 셋업 (웹에서는 EventManager.storage에 있는 이벤트를 set시 바로 실행)\nbizMOBWebCore.EventManager.set = function () {\n var sEvent = arguments[0]._sEvent;\n var fCallback = arguments[0]._fCallback;",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 11,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 116,
    "char_count": 419,
    "created_at": "2025-08-01T15:32:19.585Z"
  },
  {
    "id": "171bd2ec_0012",
    "content": "if (bizMOBWebCore.EventManager.storage[sEvent]) {\n bizMOBWebCore.Module.logger(this.servicename, 'setEvent', 'L', 'Event execute. - ' + sEvent);\n fCallback({ type: 'web' });\n }\n else {\n bizMOBWebCore.Module.logger(this.servicename, 'setEvent', 'E', 'This event is not supported on the web. - ' + sEvent);\n }\n};\n\n/**\n * Web ExtendManager Class\n */\nbizMOBWebCore.ExtendsManager = {};\nbizMOBWebCore.ExtendsManager.serviceName = 'ExtendsManager';\nbizMOBWebCore.ExtendsManager.config = {};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 12,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 129,
    "char_count": 484,
    "created_at": "2025-08-01T15:32:19.585Z"
  },
  {
    "id": "171bd2ec_0013",
    "content": "/**\n * Web App Class\n */\nbizMOBWebCore.App = {};\nbizMOBWebCore.App.serviceName = 'App';\nbizMOBWebCore.App.config = {\n _bIsRelease: false, // 릴리즈 여부\n _sAppKey: '', // App Key\n};\n\n/**\n * Web Contacts Class\n */\nbizMOBWebCore.Contacts = {};\nbizMOBWebCore.Contacts.serviceName = 'Contacts';\nbizMOBWebCore.Contacts.config = {};\n\n/**\n * Web Database Class\n */\nbizMOBWebCore.Database = {};\nbizMOBWebCore.Database.serviceName = 'Database';\nbizMOBWebCore.Database.config = {};\n\n/**\n * Web Device Class\n */\nbizMOBWebCore.DeviceManager = {};\nbizMOBWebCore.DeviceManager.serviceName = 'DeviceManager';",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 13,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 158,
    "char_count": 588,
    "created_at": "2025-08-01T15:32:19.585Z"
  },
  {
    "id": "171bd2ec_0014",
    "content": "// 단말기 정보조회\nbizMOBWebCore.DeviceManager.getInfo = function () {\n return arguments[0] && arguments[0]._sKey\n ? window.bizMOB.Device.Info[arguments[0]._sKey]\n : window.bizMOB.Device.Info;\n};\n\n// 단말기 정보조회\nbizMOBWebCore.DeviceManager.setInfo = function () {\n window.bizMOB.Device.Info[arguments[0]._sKey] = arguments[0]._sValue;\n};\n\n// App 판단 여부\nbizMOBWebCore.DeviceManager.isApp = function () {\n return !!window.BMCManager || (!!window.webkit && !!window.webkit.messageHandlers && !!window.webkit.messageHandlers.BMCManager);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 14,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 144,
    "char_count": 525,
    "created_at": "2025-08-01T15:32:19.585Z"
  },
  {
    "id": "171bd2ec_0015",
    "content": "// Web 판단 여부\nbizMOBWebCore.DeviceManager.isWeb = function () {\n return !bizMOBWebCore.DeviceManager.isApp();\n};\n\n// Mobile 여부\nbizMOBWebCore.DeviceManager.isMobile = function () {\n var UA = navigator.userAgent || navigator.vendor || window.opera;\n return UA && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(UA);\n};\n\n// PC 여부\nbizMOBWebCore.DeviceManager.isPC = function () {\n return !bizMOBWebCore.DeviceManager.isMobile();\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 15,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 120,
    "char_count": 448,
    "created_at": "2025-08-01T15:32:19.585Z"
  },
  {
    "id": "171bd2ec_0016",
    "content": "// Android 여부\nbizMOBWebCore.DeviceManager.isAndroid = function () {\n var UA = navigator.userAgent || navigator.vendor || window.opera;\n return /android/i.test(UA);\n};\n\n// IOS 여부\nbizMOBWebCore.DeviceManager.isIOS = function () {\n var UA = navigator.userAgent || navigator.vendor || window.opera;\n return /iPad|iPhone|iPod/.test(UA) && !window.MSStream;\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 16,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 95,
    "char_count": 354,
    "created_at": "2025-08-01T15:32:19.585Z"
  },
  {
    "id": "171bd2ec_0017",
    "content": "// Tablet 여부\nbizMOBWebCore.DeviceManager.isTablet = function () {\n var UA = navigator.userAgent || navigator.vendor || window.opera;\n return /(ipad|tablet|(android(?!.*mobile))|(windows(?!.*phone)(.*touch))|kindle|playbook|silk|(puffin(?!.*(IP|AP|WP))))/.test(UA.toLowerCase());\n};\n\n//Phone 여부\nbizMOBWebCore.DeviceManager.isPhone = function () {\n return bizMOBWebCore.DeviceManager.isMobile() && !bizMOBWebCore.DeviceManager.isTablet();\n};\n\n/**\n * Web File Class\n */\nbizMOBWebCore.File = {};\nbizMOBWebCore.File.serviceName = 'File';\nbizMOBWebCore.File.config = {};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 17,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 152,
    "char_count": 564,
    "created_at": "2025-08-01T15:32:19.585Z"
  },
  {
    "id": "171bd2ec_0018",
    "content": "/**\n * Web Network Class\n */\nbizMOBWebCore.Network = {};\nbizMOBWebCore.Network.serviceName = 'Network';\nbizMOBWebCore.Network.config = {\n _sBaseUrl: '', // Client Base Url\n _sApiContext: '', // Client Context\n _sProxContext: '', // Proxy Context\n _bIsProxy: false, // Proxy 사용 여부\n _sJwtToken: '', // JWT Token\n _bIsCrypto: false, // 암호화 여부\n _sCryAuthToken: '', // 암호화 Token\n _sCrySymKey: '', // 암호화 Key\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 18,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 112,
    "char_count": 405,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0019",
    "content": "// locale 변경\nbizMOBWebCore.Network.changeLocale = function (arg) {\n // 언어 코드 (ko, ko-KR, en, en-US, ...)\n var localeCode = arg._sLocaleCd;\n // full locale 값 조회\n var fullLocale = bizMOBWebCore.Localization.getFullLocale(localeCode);\n\n // Web 환경에 맞는 언어코드 변경 로직\n bizMOBWebCore.Localization.locale = fullLocale;\n bizMOBWebCore.Module.logger(this.serviceName, 'changeLocale', 'L', 'Network locale change: ' + fullLocale);\n};\n\n// 메시지 암호화\nbizMOBWebCore.Network.encryption = function () {\n var CryptoJS = window.CryptoJS;\n var arg = arguments[0] || {};\n var message = arg._sMessage || '';",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 19,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 160,
    "char_count": 580,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0020",
    "content": "try {\n var key = atob(bizMOBWebCore.Network.config._sCrySymKey);\n var iv = bizMOBWebCore.Network.config._sCrySymKey.substring(0, 16);\n var encrypt = CryptoJS.AES.encrypt(message, CryptoJS.enc.Utf8.parse(key), {\n iv: CryptoJS.enc.Utf8.parse(iv),\n mode: CryptoJS.mode.CBC,\n padding: CryptoJS.pad.Pkcs7,\n });",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 20,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 81,
    "char_count": 305,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0021",
    "content": "bizMOBWebCore.Module.logger(this.serviceName, 'encryption', 'L', 'Message encryption success: ' + message);\n return { result: true, message: encrypt.toString() };\n }\n catch (error) {\n bizMOBWebCore.Module.logger(this.serviceName, 'encryption', 'E', 'Message encryption failed: ' + message);\n return { result: false, message: message };\n }\n};\n\n// 메시지 복호화\nbizMOBWebCore.Network.decryption = function () {\n var CryptoJS = window.CryptoJS;\n var arg = arguments[0] || {};\n var message = arg._sMessage || '';",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 21,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 135,
    "char_count": 502,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0022",
    "content": "try {\n var key = atob(bizMOBWebCore.Network.config._sCrySymKey);\n var iv = bizMOBWebCore.Network.config._sCrySymKey.substring(0, 16);\n var decipher = CryptoJS.AES.decrypt(message, CryptoJS.enc.Utf8.parse(key), {\n iv: CryptoJS.enc.Utf8.parse(iv),\n mode: CryptoJS.mode.CBC,\n padding: CryptoJS.pad.Pkcs7,\n });",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 22,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 82,
    "char_count": 306,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0023",
    "content": "bizMOBWebCore.Module.logger(this.serviceName, 'encryption', 'L', 'Message decryption success: ' + message);\n return { result: true, message: decipher.toString(CryptoJS.enc.Utf8) };\n }\n catch (error) {\n bizMOBWebCore.Module.logger(this.serviceName, 'encryption', 'E', 'Message decryption failed: ' + message);\n return { result: false, message: message };\n }\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 23,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 96,
    "char_count": 359,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0024",
    "content": "/**\n * bizMOB Web Server Request\n * @param {string} _sTrcode bizMOB Server 전문코드\n * @param {object} _oHeader bizMOB Server 전문 Header 객체\n * @param {object} _oBody bizMOB Server 전문 Body 객체\n * @param {boolean} _bProgressEnable (default: true) 서버에 통신 요청시 progress 표시 여부( true 또는 false )\n * @param {number} _nTimeout (default: 60) 서버에 통신 요청시 timeout 시간 (sec)\n * @param {function} _fCallback 서버와 통신 후 실행될 callback 함수\n *\n * @return\n */\nbizMOBWebCore.Network.requestTr = function (arg) {\n /** Parameter 셋팅 */\n var timeout = (arg._nTimeout ? arg._nTimeout : 60) * 1000; // native api와 시간 단위를 맞춤",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 24,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 168,
    "char_count": 584,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0025",
    "content": "var message = {\n header: Object.assign({}, {\n result: true,\n error_code: '',\n error_text: '',\n info_text: '',\n message_version: '',\n login_session_id: '',\n trcode: arg._sTrcode\n }, arg._oHeader),\n body: arg._oBody\n };\n var body = {\n message: JSON.stringify(message)\n };",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 25,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 73,
    "char_count": 269,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0026",
    "content": "/** bizMOB Auth Token */\n if (bizMOBWebCore.Network.config._bIsCrypto && !!bizMOBWebCore.Network.config._sCryAuthToken) {\n var crypto = bizMOBWebCore.Network.encryption({ _sMessage: body.message });\n\n // 암호화 성공시 암호화된 값으로 변경\n if (crypto.result) {\n body.message = crypto.message;\n body.isCrypto = true;\n }\n // 암호화 실패시 기존 값 유지\n else {\n body.isCrypto = false;\n }\n }",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 26,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 102,
    "char_count": 361,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0027",
    "content": "/** Http.fetch 호출 */\n // url 생성\n var isProxy = bizMOBWebCore.Network.config._bIsProxy; // serve, build\n var context = isProxy ? bizMOBWebCore.Network.config._sProxContext : bizMOBWebCore.Network.config._sApiContext;\n var url = (bizMOBWebCore.Network.config._sApiContext === '/' ? '' : context) + '/' + arg._sTrcode + '.json' + (arg._sQuery ? '?' + arg._sQuery : ''); // 일반 조화시 url\n\n // fetch 옵션 생성\n var option = bizMOBWebCore.Http.bizmobOption({\n _sTrcode: arg._sTrcode,\n _oHttpHeader: arg._oHttpHeader,\n _oBody: body,\n });",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 27,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 143,
    "char_count": 523,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0028",
    "content": "// fetch 호출\n bizMOBWebCore.Http.fetch(url, option, timeout)\n .then(function (res) {\n var message = res.data;\n\n // 복호화 필요시\n if (bizMOBWebCore.Network.config._bIsCrypto && !!bizMOBWebCore.Network.config._sCryAuthToken && message.resMessage) {\n var crypto = bizMOBWebCore.Network.decryption({ _sMessage: message.resMessage });\n\n // 복호화 성공시 결과값 전달\n if (crypto.result) {\n message = JSON.parse(crypto.message);\n }\n }",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 28,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 114,
    "char_count": 410,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0029",
    "content": "// callback 함수 호출\n bizMOBWebCore.Module.logger(bizMOBWebCore.Network.serviceName, 'requestTr', 'L', 'Request trcode success: ' + arg._sTrcode);\n arg._fCallback && arg._fCallback(message);\n })\n .catch(function () {\n bizMOBWebCore.Module.logger(bizMOBWebCore.Network.serviceName, 'requestTr', 'E', 'Request trcode failed: ' + arg._sTrcode);\n arg._fCallback && arg._fCallback({\n header: Object.assign({}, message.header || {}, {\n result: false,\n error_code: 'NE0002',\n }),\n });\n });\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 29,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 131,
    "char_count": 482,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0030",
    "content": "/**\n * bizMOB Web Server Request Login\n * @param {string} _sUserId 인증 받을 사용자 아이디\n * @param {string} _sPassword 인증 받을 사용자 패스워드\n * @param {string} _sTrcode 레거시 로그인 인증 전문코드\n * @param {string} _oHeader 레거시 로그인 인증 전문 Header 객체\n * @param {string} _oBody 레거시 로그인 인증 전문 Body 객체\n * @param {boolean} _bProgressEnable (default:true) 서버에 통신 요청시 progress 표시 여부( true 또는 false )\n * @param {number} _nTimeout (default: 60) 서버에 통신 요청시 timeout 시간 (sec)\n * @param {function} _fCallback 서버와 통신 후 실행될 callback 함수\n */\nbizMOBWebCore.Network.requestLogin = function (arg) {\n /** Parameter 셋팅 */",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 30,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 173,
    "char_count": 571,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0031",
    "content": "*/\nbizMOBWebCore.Network.requestLogin = function (arg) {\n /** Parameter 셋팅 */\n var timeout = (arg._nTimeout ? arg._nTimeout : 60) * 1000; // native api와 시간 단위를 맞춤\n var legacy_message = {\n header: Object.assign({}, {\n result: true,\n error_code: '',\n error_text: '',\n info_text: '',\n message_version: '',\n login_session_id: '',\n trcode: arg._sTrcode\n }, arg._oHeader),\n body: arg._oBody\n };\n var message = {\n header: {\n result: true,\n error_code: '',\n error_text: '',\n info_text: '',\n locale: bizMOBWebCore.Localization.locale,\n message_version: '',\n login_session_id: '',\n trcode: 'LOGIN',\n },",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 31,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 161,
    "char_count": 592,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0032",
    "content": "message_version: '',\n login_session_id: '',\n trcode: 'LOGIN',\n },\n body: {\n os_type: 'web',\n user_id: arg._sUserId,\n password: arg._sPassword,\n legacy_message: legacy_message,\n legacy_trcode: arg._sTrcode,\n app_key: bizMOBWebCore.App.config._sAppKey,\n emulator_flag: true,\n manual_phone_number: false,\n device_id: '',\n phone_number: '',\n },\n };\n var body = {\n message: JSON.stringify(message)\n };",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 32,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 106,
    "char_count": 396,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0033",
    "content": "/** Http.fetch 호출 */\n // url 생성\n var isProxy = bizMOBWebCore.Network.config._bIsProxy; // serve, build\n var context = isProxy ? bizMOBWebCore.Network.config._sProxContext : bizMOBWebCore.Network.config._sApiContext;\n var url = (bizMOBWebCore.Network.config._sApiContext === '/' ? '' : context) + '/LOGIN.json' + (arg._sQuery ? '?' + arg._sQuery : ''); // 일반 조화시 url\n\n // fetch 옵션 생성\n var option = bizMOBWebCore.Http.bizmobOption({\n _sTrcode: 'LOGIN',\n _oHttpHeader: arg._oHttpHeader,\n _oBody: body,\n });",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 33,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 138,
    "char_count": 503,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0034",
    "content": "/** Http.fetch 호출 */\n bizMOBWebCore.Http.fetch(url, option, timeout)\n .then(function (res) {\n var message = res.data;\n\n // 복호화 필요시\n if (bizMOBWebCore.Network.config._bIsCrypto && !!bizMOBWebCore.Network.config._sCryAuthToken && message.resMessage) {\n var crypto = bizMOBWebCore.Network.decryption({ _sMessage: message.resMessage });\n\n // 복호화 성공시 결과값 전달\n if (crypto.result) {\n message = JSON.parse(crypto.message);\n }\n }",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 34,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 116,
    "char_count": 419,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0035",
    "content": "// callback 함수 호출\n bizMOBWebCore.Module.logger(bizMOBWebCore.Network.serviceName, 'requestTr', 'L', 'Request login success: ' + arg._sTrcode);\n arg._fCallback && arg._fCallback(message.header.result\n ? Object.assign({}, message.body.legacy_message, {\n accessToken: message.body.accessToken,\n accessTokenExpTime: message.body.accessTokenExpTime,\n refreshToken: message.body.refreshToken,\n refreshTokenExpTime: message.body.refreshTokenExpTime,\n })\n : message);\n })\n .catch(function () {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 35,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 129,
    "char_count": 485,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0036",
    "content": "})\n : message);\n })\n .catch(function () {\n bizMOBWebCore.Module.logger(bizMOBWebCore.Network.serviceName, 'requestTr', 'E', 'Request login failed: ' + arg._sTrcode);\n arg._fCallback && arg._fCallback({\n header: Object.assign({}, message.header || {}, {\n result: false,\n error_code: 'NE0002',\n }),\n });\n });\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 36,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 84,
    "char_count": 309,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0037",
    "content": "/**\n * bizMOB Server 전문 통신\n *\n * @param {String} _sUrl 서버 URL\n * @param {String} _sMethod 통신 방식 (get, post)\n * @param {String} _oHeader Http Header\n * @param {String} _oBody Http Body\n * @param {Number} _nTimeout (default: 60) 서버에 통신 요청시 timeout 시간 (sec)\n * @param {Function} _fCallback 서버와 통신 후 실행될 callback 함수\n *\n * @returns {Object} Response 객체\n * @returns {Boolean} returns.result 결과\n * @returns {Number} returns.response_code 응답 코드 (200 <= .. <= 300)\n * @returns {String} returns.response_data 응답 데이터\n * @returns {Object} returns.error 응답 실패시 에러 객체 (실패시에만 존재)",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 37,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 163,
    "char_count": 564,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0038",
    "content": "* @returns {Object} returns.error 응답 실패시 에러 객체 (실패시에만 존재)\n * @returns {Number} returns.error.code Native 응답 실패코드 (ERR000)\n * @returns {String} returns.error.message Native에서 주는 응답 실패 메시지\n * @returns {Number} returns.error.response_code Server 응답 실패코드 (401, 402, ...) -- 없을 수도 있음\n * @returns {String} returns.error.response_data Server 응답 실패 데이터 -- 없을 수도 있음\n */\nbizMOBWebCore.Network.requestHttp = function (arg) {\n var action = 'requestHttp';",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 38,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 131,
    "char_count": 442,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0039",
    "content": "var url = arg._sUrl;\n var timeout = (arg._nTimeout ? arg._nTimeout : 60) * 1000;\n var option = Object.assign({}, arg._oOption, {\n method: arg._sMethod,\n headers: Object.assign({}, {\n 'Content-Type': 'application/json'\n }, arg._oHeader),\n });\n\n // Body 메시지 처리\n if (arg._oBody) {\n // Get 처리\n if (option.method.toLocaleUpperCase() === 'GET') {\n url += '?' + new URLSearchParams(arg._oBody || {}).toString();\n }\n // 그 외 method 처리\n else {\n option.body = new URLSearchParams(arg._oBody || {}).toString();\n }\n }",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 39,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 139,
    "char_count": 504,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0040",
    "content": "// Http.fetch 요청\n bizMOBWebCore.Http.fetch(url, option, timeout)\n .then(function (res) {\n let responseData = null;\n\n try {\n // 보통 JSON 형태의 응답값\n responseData = JSON.stringify(res.data);\n } catch (error) {\n // 오류가 난 경우 전달받은 값 전달\n responseData = res.data;\n }",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 40,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 74,
    "char_count": 255,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0041",
    "content": "if (200 <= res.status && res.status < 300) {\n arg._fCallback && arg._fCallback({\n result: true,\n response_code: res.status,\n response_data: responseData,\n });\n }\n else {\n arg._fCallback && arg._fCallback({\n result: false,\n error: {\n code: 'ERR001',\n message: 'Response failed',\n response_code: res.status,\n response_data: responseData,\n },\n });\n }\n })\n .catch(function (res) {\n arg._fCallback && arg._fCallback({\n result: false,\n error: {\n code: 'ERR000',\n message: 'Request failed',\n response_code: res.status,\n response_data: res.data,\n },\n });\n });\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 41,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 148,
    "char_count": 554,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0042",
    "content": "/**\n * Web Properties Class\n */\nbizMOBWebCore.Properties = {};\nbizMOBWebCore.Properties.prefix = 'bizMOB:WEB:PROPERTIES:';\nbizMOBWebCore.Properties.serviceName = 'Properties';\nbizMOBWebCore.Properties.config = {};\n\n/**\n * bizMOB Web Properties Set\n * @param {object} arg\n * @param {string} arg._sKey Properties key\n * @param {any} arg._vValue Properties value\n * @param {object[]} arg._aList data map list (Ex. [{_sKey: \"1\", _vValue: \"1\"}, ...])\n */\nbizMOBWebCore.Properties.set = function (arg) {\n var dataList = [];",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 42,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 138,
    "char_count": 517,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0043",
    "content": "if (Object.hasOwnProperty.call(arg, '_aList')) {\n dataList = arg._aList;\n }\n else {\n dataList = [arg];\n }\n\n dataList.forEach(function (data) {\n var prop = bizMOBWebCore.Properties.prefix + data._sKey;\n var value = data._vValue;\n\n bizMOBWebCore.Module.logger(bizMOBWebCore.Properties.serviceName, 'set', 'L', 'bizMOB properties set: ' + data._sKey);\n localStorage.setItem(prop, value);\n });\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 43,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 104,
    "char_count": 392,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0044",
    "content": "/**\n * bizMOB Web Properties Get\n * @param {object} arg\n * @param {string} arg._sKey Properties key\n * @returns Properties value\n */\nbizMOBWebCore.Properties.get = function (arg) {\n var prefix = bizMOBWebCore.Properties.prefix;\n\n if (arg && Object.hasOwnProperty.call(arg, '_sKey')) {\n var prop = prefix + arg._sKey;\n\n return localStorage.getItem(prop);\n }\n else {\n var storage = localStorage;\n var result = {};\n\n for (var key in storage) {\n if (Object.hasOwnProperty.call(storage, key)) {\n if (key.indexOf(prefix) === 0) {\n result[key.replace(prefix, '')] = storage[key];\n }\n }\n }",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 44,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 153,
    "char_count": 581,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0045",
    "content": "return result;\n }\n};\n\n/**\n * bizMOB Web Properties Remove\n * @param {object} arg\n * @param {string} arg._sKey Properties key\n */\nbizMOBWebCore.Properties.remove = function (arg) {\n var prop = bizMOBWebCore.Properties.prefix + arg._sKey;\n\n bizMOBWebCore.Module.logger(bizMOBWebCore.Properties.serviceName, 'remove', 'L', 'bizMOB properties remove: ' + arg._sKey);\n\n localStorage.removeItem(prop);\n return true;\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 45,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 108,
    "char_count": 412,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0046",
    "content": "localStorage.removeItem(prop);\n return true;\n};\n\n/**\n * Web Storage Class\n */\nbizMOBWebCore.Storage = {};\nbizMOBWebCore.Storage.prefix = 'bizMOB:WEB:STORAGE:';\nbizMOBWebCore.Storage.serviceName = 'Storage';\nbizMOBWebCore.Storage.config = {};\n\n/**\n * bizMOB Web Storage Set\n * @param {object} arg\n * @param {string} arg._sKey Storage key\n * @param {any} arg._vValue Storage value\n * @param {object[]} arg._aList data map list (Ex. [{_sKey: \"1\", _vValue: \"1\"}, ...])\n */\nbizMOBWebCore.Storage.set = function (arg) {\n var dataList = [];",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 46,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 142,
    "char_count": 533,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0047",
    "content": "if (Object.hasOwnProperty.call(arg, '_aList')) {\n dataList = arg._aList;\n }\n else {\n dataList = [arg];\n }\n\n dataList.forEach(function (data) {\n var prop = bizMOBWebCore.Storage.prefix + data._sKey;\n var value = typeof data._vValue === 'string' ? data._vValue : JSON.stringify(data._vValue);\n\n bizMOBWebCore.Module.logger(bizMOBWebCore.Storage.serviceName, 'set', 'L', 'bizMOB storage set: ' + data._sKey);\n sessionStorage.setItem(prop, value);\n });\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 47,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 121,
    "char_count": 451,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0048",
    "content": "/**\n * bizMOB Web Storage Get\n * @param {object} arg\n * @param {string} arg._sKey Storage key\n * @returns Storage value\n */\nbizMOBWebCore.Storage.get = function (arg) {\n var prefix = bizMOBWebCore.Storage.prefix;\n\n if (arg && Object.hasOwnProperty.call(arg, '_sKey')) {\n var prop = prefix + arg._sKey;\n var value = sessionStorage.getItem(prop);\n\n if (value === null) {\n return null;\n }\n\n // JSON 파싱 시도\n try {\n return JSON.parse(value);\n } catch (error) {\n // JSON이 아닌 문자열인 경우 그대로 반환\n return value;\n }\n }\n else {\n var storage = sessionStorage;\n var result = {};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 48,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 152,
    "char_count": 560,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0049",
    "content": "for (var key in storage) {\n if (Object.hasOwnProperty.call(storage, key)) {\n if (key.indexOf(prefix) === 0) {\n var storageKey = key.replace(prefix, '');\n var storageValue = storage[key];\n\n // JSON 파싱 시도\n try {\n result[storageKey] = JSON.parse(storageValue);\n } catch (error) {\n // JSON이 아닌 문자열인 경우 그대로 저장\n result[storageKey] = storageValue;\n }\n }\n }\n }\n\n return result;\n }\n};\n\n/**\n * bizMOB Web Storage Remove\n * @param {object} arg\n * @param {string} arg._sKey Storage key\n */\nbizMOBWebCore.Storage.remove = function (arg) {\n var prop = bizMOBWebCore.Storage.prefix + arg._sKey;",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 49,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 157,
    "char_count": 579,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0050",
    "content": "bizMOBWebCore.Module.logger(bizMOBWebCore.Storage.serviceName, 'remove', 'L', 'bizMOB storage remove: ' + arg._sKey);\n\n sessionStorage.removeItem(prop);\n return true;\n};\n\n/**\n * Web PushManager Class\n */\nbizMOBWebCore.PushManager = {};\nbizMOBWebCore.PushManager.serviceName = 'PushManager';\nbizMOBWebCore.PushManager.config = {};\n\n/**\n * Web System Class\n */\nbizMOBWebCore.System = {};\nbizMOBWebCore.System.serviceName = 'System';\nbizMOBWebCore.System.config = {};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 50,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 123,
    "char_count": 464,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0051",
    "content": "bizMOBWebCore.System.getGPS = function (arg) {\n if ('geolocation' in navigator) {\n // Geolocation API 사용 가능\n navigator.geolocation.getCurrentPosition(function (position) {\n const latitude = position.coords.latitude;\n const longitude = position.coords.longitude;",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 51,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 69,
    "char_count": 261,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0052",
    "content": "arg._fCallback && arg._fCallback({\n 'result': true,\n 'longitude': longitude,\n 'latitude': latitude,\n 'address': ''\n });\n }, function (error) {\n console.error('Geolocation error:', error);\n arg._fCallback && arg._fCallback({\n 'result': false,\n 'longitude': 0,\n 'latitude': 0,\n 'address': ''\n });\n });\n } else {\n // Geolocation API 사용 불가\n arg._fCallback && arg._fCallback({\n 'result': false,\n 'longitude': 0,\n 'latitude': 0,\n 'address': ''\n });\n }\n};\n\n/**\n * Web Window Class\n */\nbizMOBWebCore.Window = {};\nbizMOBWebCore.Window.serviceName = 'Window';\nbizMOBWebCore.Window.config = {};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 52,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 159,
    "char_count": 583,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0053",
    "content": "/**\n * Web Localization Class\n */\nbizMOBWebCore.Localization = {};\nbizMOBWebCore.Localization.serviceName = 'Localization';\nbizMOBWebCore.Localization.config = {};\n\n// 현재 언어 값\nbizMOBWebCore.Localization.locale = '';",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 53,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 59,
    "char_count": 215,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0054",
    "content": "// 현재 언어 값\nbizMOBWebCore.Localization.locale = '';\n\n// 언어 코드로 (언어코드)-(국가코드) 형태의 full locale 코드 반환\nbizMOBWebCore.Localization.getFullLocale = function (localeCode) {\n // 사용자 언어 목록에서 언어 코드(ko, ...)에 대응되는 full locale(ko-KR, ...) 코드\n var fullLocale = navigator.languages.find(function (lang) {\n return lang.toLowerCase().startsWith(localeCode.toLowerCase() + '-');\n });\n // 미리 지정한 언어 목록에서 언어 코드에 대응되는 preset locale 코드\n var presetLocale = window.bizMOBLocale[localeCode.toLowerCase()];",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 54,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 144,
    "char_count": 480,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0055",
    "content": "// 전달받은 언어 코드가 full locale(ko-KR)값이라면 그대로 전달\n if (localeCode.indexOf('-') > 0) {\n bizMOBWebCore.Module.logger(this.serviceName, 'getFullLocale', 'L', 'Gets the full locale value: (parameter) ' + localeCode);\n return localeCode;\n }\n // 전달받은 언어 코드가 'ko' 형식이고, navigator.languages 목록에서 'ko-KR' 형식이 있다면 찾은 값 전달\n else if (fullLocale) {\n bizMOBWebCore.Module.logger(this.serviceName, 'getFullLocale', 'L', 'Gets the full locale value: (navigator) ' + fullLocale);\n return fullLocale;\n }\n // 전달받은 언어 코드가 'ko' 형식이고, 프리셋에 있다면 프리셋 언어코드를 전달\n else if (presetLocale) {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 55,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 165,
    "char_count": 555,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0056",
    "content": "}\n // 전달받은 언어 코드가 'ko' 형식이고, 프리셋에 있다면 프리셋 언어코드를 전달\n else if (presetLocale) {\n bizMOBWebCore.Module.logger(this.serviceName, 'getFullLocale', 'L', 'Gets the full locale value: (preset) ' + presetLocale);\n return presetLocale;\n }\n // 전달받은 언어 코드가 navigator, 프리셋에 전부 없다면 전달받은 값 그대로 전달 (ko)\n else {\n bizMOBWebCore.Module.logger(this.serviceName, 'getFullLocale', 'L', 'Gets the full locale value: (unknown) ' + presetLocale);\n return localeCode;\n }\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 56,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 132,
    "char_count": 446,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0057",
    "content": "// 설정된 (언어)-(국가) 코드 조회\nbizMOBWebCore.Localization.getLocale = function (arg) {\n var locale = bizMOBWebCore.Localization.locale; // 설정한 언어 코드\n var defaultLocale = bizMOBWebCore.Localization.getFullLocale(navigator.language); // 기본 언어 코드\n\n // 설정한 locale가 있는 경우 (Ex. ko-KR)\n if (locale) {\n arg._fCallback && arg._fCallback({ result: true, locale: bizMOBWebCore.Localization.locale });\n }\n // 그 외에는 Default 언어 코드 전달\n else {\n arg._fCallback && arg._fCallback({ result: true, locale: defaultLocale });\n }\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 57,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 143,
    "char_count": 501,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0058",
    "content": "// 언어코드에 맞는 (언어)-(국가) 코드 저장\nbizMOBWebCore.Localization.setLocale = function (arg) {\n // 언어 코드 (ko, ko-KR, en, en-US, ...)\n var localeCode = arg._sLocaleCd;\n // full locale 값 조회\n var fullLocale = bizMOBWebCore.Localization.getFullLocale(localeCode);\n\n // Web 환경에 맞는 언어코드 변경 로직\n bizMOBWebCore.Localization.locale = fullLocale;\n bizMOBWebCore.Module.logger(this.serviceName, 'setLocale', 'L', 'Localization locale set: ' + fullLocale);\n\n // callback 함수 호출\n arg._fCallback && arg._fCallback({ result: true, locale: bizMOBWebCore.Localization.locale });\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 58,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 155,
    "char_count": 551,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0059",
    "content": "/**\n * Web Http Class\n */\nbizMOBWebCore.Http = {};\n\n// bizMOB Server용 fetch option 정보\nbizMOBWebCore.Http.bizmobOption = function () {\n var arg = arguments[0] || {};\n var httpHeader = arg._oHttpHeader || null; // http header\n var headers = Object.assign({}, {\n // 컨텐츠 타입\n 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n }, httpHeader);\n var body = arg._oBody || {}; // body data\n\n // 언어 코드 추가\n if (bizMOBWebCore.Localization.locale && !headers['Accept-Language']) {\n headers['Accept-Language'] = bizMOBWebCore.Localization.locale;\n }",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 59,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 151,
    "char_count": 553,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0060",
    "content": "// 암호화 코드 추가\n if (bizMOBWebCore.Network.config._bIsCrypto && !!bizMOBWebCore.Network.config._sCryAuthToken) {\n headers['BzCrypto-Authorization'] = 'BEAR ' + bizMOBWebCore.Network.config._sCryAuthToken;\n }\n\n // JWT Token 존재시 추가\n if (arg._sTrcode !== 'LOGIN' && bizMOBWebCore.Network.config._sJwtToken) {\n headers['Authorization'] = 'Bearer ' + bizMOBWebCore.Network.config._sJwtToken;\n }",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 60,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 106,
    "char_count": 386,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0061",
    "content": "// 옵션 반환\n return {\n mode: 'cors', // no-cors, *cors, same-origin\n cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n method: 'POST',\n headers: headers,\n body: new URLSearchParams(body || {}).toString(),\n };\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 61,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 65,
    "char_count": 237,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0062",
    "content": "/**\n * 요청 파라미터를 fetch 형태에 맞춰서 변경 후 요청\n * @param {object} arg 요청 객체\n * @param {string} arg._sUrl\n * @param {string} arg._sMethod 요청 방식 (GET, POST, PUT, DELETE, ...)\n * @param {number} arg._nTimeout 요청 제한시간 (sec 단위)\n * @param {number} arg._nRetries API 요청 회수 (default: 1 -- 한번 요청 실패시 응답)\n * @param {object} arg._oOption fetch options\n * @param {object} arg._oHeader request 요청 header\n * @param {object} arg._oBody request 요청 body -- JSON.stringify(data) 또는 new URLSearchParams(data).toString() 후 전달\n * @param {function} arg._fCallback (custom) 요청 성공/실패시 응답값 반환 함수\n * @return\n */",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 62,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 170,
    "char_count": 576,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0063",
    "content": "* @param {function} arg._fCallback (custom) 요청 성공/실패시 응답값 반환 함수\n * @return\n */\nbizMOBWebCore.Http.request = function (arg) {\n // 변수 설정\n var url = arg._sUrl;\n var option = Object.assign({}, arg._oOption, {\n method: arg._sMethod,\n headers: arg._oHeader,\n });\n var timeout = (arg._nTimeout ? arg._nTimeout : 60) * 1000; // requestTr과 시간 단위를 맞춤\n var retries = arg._nRetries;",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 63,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 105,
    "char_count": 370,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0064",
    "content": "// Body 메시지 처리\n if (arg._oBody) {\n // Get 처리\n if (option.method.toLocaleUpperCase() === 'GET') {\n url += '?' + arg._oBody;\n }\n // 그 외 method 처리\n else {\n option.body = arg._oBody;\n }\n }\n\n // Http.fetch 요청\n bizMOBWebCore.Http.fetch(url, option, timeout, retries)\n .then(function (res) { arg._fCallback && arg._fCallback(res); })\n .catch(function (res) { arg._fCallback && arg._fCallback(res); });\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 64,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 111,
    "char_count": 397,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0065",
    "content": "/**\n * Mock 데이터 호출\n * @param {String} sClassName 클래스 명칭\n * @param {String} sMethod 함수 명칭\n * @param {Object} oMessage 전달 파라미터\n */\nbizMOBWebCore.Http.requestMock = function (sClassName, sMethod, oMessage) {\n var call = oMessage._fCallback || oMessage.callback || null;\n var baseUrl = bizMOBWebCore.Network.config._sBaseUrl;\n var className = sClassName === 'PushManager' ? 'Push' : sClassName; // Push는 bizMOB과 Core의 클래스명이 다름\n var url = '';\n var option = {\n method: 'GET'\n };",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 65,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 132,
    "char_count": 472,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0066",
    "content": "switch (sMethod) {\n case 'executer': // callPlugin\n url = baseUrl + 'mock/bizMOB/callPlugin/' + oMessage._sID + '/' + sMethod + '.json?param=' + JSON.stringify(oMessage._oParam);\n break;\n\n case 'requestTr': // 일반 전문\n case 'requestLogin': // 로그인 전문\n url = baseUrl + 'mock/' + oMessage._sTrcode + '.json?param=' + JSON.stringify(oMessage);\n break;\n\n case 'requestTimeout': // setTimeout\n url = baseUrl + 'mock/bizMOB/' + className + '/setTimeout.json?param=' + JSON.stringify(oMessage._oParam);\n break;",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 66,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 137,
    "char_count": 500,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0067",
    "content": "bizMOBWebCore.Http.fetch(url, option)\n .then(function (res) {\n bizMOBWebCore.Module.logger(className, sMethod, 'D', className + ' ' + sMethod + ' mock response.');\n if (sMethod === 'requestLogin') {\n var msg = Object.assign({}, res.data.body.legacy_message, {\n accessToken: res.data.body.accessToken,\n accessTokenExpTime: res.data.body.accessTokenExpTime,\n refreshToken: res.data.body.refreshToken,\n refreshTokenExpTime: res.data.body.refreshTokenExpTime,\n });\n call && call(msg);\n }\n else {\n call && call(res.data);\n }\n })\n .catch(function () {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 67,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 145,
    "char_count": 545,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0068",
    "content": "}\n else {\n call && call(res.data);\n }\n })\n .catch(function () {\n bizMOBWebCore.Module.logger(className, sMethod, 'E', className + ' ' + sMethod + ' mock not found.');\n call && call({ result: false, type: 'mock' });\n });\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 68,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 60,
    "char_count": 222,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0069",
    "content": "/**\n * timeout + retries + fetch\n * @param {string} url 요청 URL\n * @param {object} opt fetch 옵션\n * @param {number} limitTime Timeout 시간\n * @param {number} retries API 요청 회수\n *\n * @return\n * @param {boolean} ok 성공여부\n * @param {number} status 결과 코드 (200, 404, ...)\n * @param {string} statusText 결과 Text\n * @param {object} data 데이터\n */\nbizMOBWebCore.Http.fetch = function (url, opt, limitTime, retries) {\n var option = opt; // fetch option 셋팅\n var limit = limitTime || (60 * 1000); // timeout 시간\n var retry = retries || 1; // 재요청 회수",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 69,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 147,
    "char_count": 528,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0070",
    "content": "// Fetch 요청 Promise\n var attemptFetch = function (url, opt) {\n return new Promise(function (resolve, reject) {\n fetch(url, opt).then(function (res) {\n if (res.ok) {\n resolve(res.json());\n }\n else {\n reject(res);\n }\n });\n });\n };\n\n // Timeout 제한 Promise\n var timeout = function (timeout) {\n return new Promise(function (_, reject) {\n setTimeout(function () { reject(new Error('timeout error')); }, timeout);\n });\n };",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 70,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 112,
    "char_count": 415,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "171bd2ec_0071",
    "content": "// Promise 객체 Return\n return new Promise(function (resolve, reject) {\n var attempts = 1;\n var executeFetch = function () {\n var fetchAttempt = Promise.race([attemptFetch(url, option), timeout(limit)]); // 요청 경쟁\n var maxRetry = retry; // 최대 리트라이 회수\n\n // Fetch 요청\n fetchAttempt\n .then(function (data) {\n resolve({ ok: true, status: 200, statusText: 'OK', data: data });\n })\n .catch(function (res) {\n if (attempts < maxRetry) {\n attempts++;\n executeFetch(); // 재발송 회수만큼 재귀 호출\n }\n else {\n reject({ ok: res.ok, status: res.status, statusText: res.statusText, data: null });\n }\n });\n };",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core-web.js",
      "file_name": "bizMOB-core-web.js",
      "file_type": "js",
      "chunk_index": 71,
      "total_chunks": 72,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 4296,
        "parsed_at": "2025-08-01T07:01:18.408647"
      },
      "position": {}
    },
    "tokens": 161,
    "char_count": 580,
    "created_at": "2025-08-01T15:32:19.586Z"
  },
  {
    "id": "5d01cb46_0000",
    "content": "/**\n * 01.클래스 설명 : bizMOBCore 최상위 클래스\n * 02.제품구분 : bizMOB Core\n * 03.기능(콤퍼넌트) 명 : bizMOBCore 최상위 클래스\n *\n * @author 김승현\n * @version 1.0\n *\n */\nvar bizMOBCore = {}; // NameSpace 정의\n\nbizMOBCore.name = 'bizMOBCore'; // NameSpace 명\nbizMOBCore.version = '4.0'; // bizMOBCore 버전\nbizMOBCore.readystatus = false; // bizMOB App이 initailize 작업이 완료된 후 ready event가 수행 되었는지 여부\nbizMOBCore.loglevel = '1248'; //Log(1)Debug(2)Warn(4)Error(8)",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 0,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 126,
    "char_count": 425,
    "created_at": "2025-08-01T15:32:19.850Z"
  },
  {
    "id": "5d01cb46_0001",
    "content": "/**\n *\n * 01.클래스 설명 : bizMOB App Plugin 호출시 Async 로 호출받을 Callback 함수 관리 클래스\n * 02.제품구분 : bizMOB Core\n * 03.기능(콤퍼넌트) 명 : Callback 함수 관리 클래스\n *\n * @author 김승현\n * @version 1.0\n *\n */\nbizMOBCore.CallbackManager = new Object(); // Callback Manager Class정의\n\nbizMOBCore.CallbackManager.servicename = 'CallbackManager'; // log 기록을 위한 클래스명 선언\n\nbizMOBCore.CallbackManager.index = 0; // 다중 PlugIn을 호출시 Callback Manager에서 callback함수를 저장하기 위해 저장스토리지 키를 유니크하게 만들어줄 index값 property 선언\n\nbizMOBCore.CallbackManager.storage = {};// 다중 PlugIn을 호출시 Callback Manager에서 일회성 callback함수를 저장하기 위해 저장 스토리지 객체 선언",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 1,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 182,
    "char_count": 585,
    "created_at": "2025-08-01T15:32:19.850Z"
  },
  {
    "id": "5d01cb46_0002",
    "content": "bizMOBCore.CallbackManager.listener = {}; // 다중 PlugIn을 호출시 Callback Manager에서 고정 callback함수를 저장하기 위해 저장 스토리지 객체 선언\n\n/**\n * Callback 함수 저장 메소드\n *\n * @param Function fCallback 저장 할 callback함수.\n * @param String sType 저장할 타입(stg : 1회성, lsn : 반복성 ).\n * @param String sName 저장할 콜백 이름(alias).\n *\n * @return String callbackId\n */\nbizMOBCore.CallbackManager.save = function(fCallback, sType, sName){\n\n var action = 'save'; // log기록을 위해 메소드명 정의\n var callbackId = ''; // CallbackManager에 저장할 콜백 함수명 정의 변수",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 2,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 149,
    "char_count": 494,
    "created_at": "2025-08-01T15:32:19.850Z"
  },
  {
    "id": "5d01cb46_0003",
    "content": "// Xross API중 Callback이 옵션일경우 callback 미 지정시 처리\n if(!fCallback){ \n \n bizMOBCore.Module.logger(this.servicename, action ,'L', 'Callback function is not defined.');\n // bizMOB App에서 Callback 함수 호출시 스크립트 에러를 방지하기 위해 Core모듈에 정의된 echo메소드를 이용하여 callback함수로 리턴되는 Response값을 로깅한다.\n fCallback = bizMOBCore.Module.echo;\n }\n\n // Callback 함수 특성을 구분하여 스토리지를 분리하여 저장한다. \n switch(sType){\n case 'listener' :\n // 반복성 고정 callback 을 사용시에 sType을 listener로 정의하여 CallbackManager.listener스토리지에 저장된다. \n callbackId = 'lsn'+this.index++;",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 3,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 160,
    "char_count": 511,
    "created_at": "2025-08-01T15:32:19.850Z"
  },
  {
    "id": "5d01cb46_0004",
    "content": "// listener에 callbackID랑 callback함수 저장\n this.listener[callbackId] = fCallback;\n bizMOBCore.Module.logger(this.servicename, action, 'L', ' Callback listener saved the function at '+callbackId+' area.');\n break;\n case 'custom' :\n // 개발자가 callback함수를 특정이름으로 사용하고 싶을때, index로 인해 임의의 callback함수명을 받고 싶지 않을때 sName을 파라미터로 전달하고 해당 값으로 callbackID를 지정 하여 callback함수명을 저장한다.\n if (sName) {\n callbackId = 'cst_'+sName;\n } else {\n callbackId = 'cst_'+this.index++;\n }",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 4,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 136,
    "char_count": 453,
    "created_at": "2025-08-01T15:32:19.850Z"
  },
  {
    "id": "5d01cb46_0005",
    "content": "this.listener[callbackId] = fCallback;\n bizMOBCore.Module.logger(this.servicename, action, 'L', ' Callback listener saved the function at '+callbackId+' area.');\n break;\n default :\n // callback 타입이 별도 지정 된값이 없으면 1회성 callback으로 CallbackManager.storage에 저장\n callbackId = 'stg'+this.index++;\n\n // storage에 callbackID랑 callback함수 저장\n this.storage[callbackId] = fCallback;\n bizMOBCore.Module.logger(this.servicename, action, 'L', ' Callback storage saved the function at '+callbackId+' area.');\n break;\n }\n\n return callbackId;\n\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 5,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 144,
    "char_count": 525,
    "created_at": "2025-08-01T15:32:19.850Z"
  },
  {
    "id": "5d01cb46_0006",
    "content": "return callbackId;\n\n};\n\n/**\n * bizMOB App Plugin에서 결과값 Return을 위해 호출할 고정 Callback 함수 처리 메소드\n *\n * @param Object oCallback Xross에서 실행할 콜백 데이타.\n * @param Object oResdata 호출했던 App PlugIn 처리 결과 데이타.\n *\n * @return null\n */\nbizMOBCore.CallbackManager.responser = function(oCallback, oResdata, oServiceInfo){\n\n // bizMOB App plugin으로 부터 결과가 callback으로 호출되었음을 로깅\n bizMOBCore.Module.logger(this.servicename, 'responser', 'L', 'CallbackManager recieve response from bizMOB App : ' );",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 6,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 137,
    "char_count": 473,
    "created_at": "2025-08-01T15:32:19.850Z"
  },
  {
    "id": "5d01cb46_0007",
    "content": "// bizMOB App plugin으로 부터 결과가 예외 오류가 발생했는지 확인\n if(oCallback.callback == 'exception'){\n bizMOBCore.Module.logger(this.servicename, 'responser', 'E', 'Recieve Message is ' + JSON.stringify(oResdata) );\n return;\n }\n\n // CallbackManager에 저장된 스토리지 위치를 찾기 위해 콜백정보 데이터에서 callbackID prefix값을 비교하여 스토리지를 찾은 후 해당 callbackID로 콜백함수를 실행.\n if(oCallback.callback.indexOf('stg') == 0){",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 7,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 114,
    "char_count": 369,
    "created_at": "2025-08-01T15:32:19.850Z"
  },
  {
    "id": "5d01cb46_0008",
    "content": "bizMOBCore.Module.logger(this.servicename, 'responser', 'D', oCallback.callback + ' call from the storage : ' );\n // 스토리지내 콜백함수를 실행\n this.storage[oCallback.callback](oResdata.message, oServiceInfo); // 네이티브에서 온 message와 함께 전달\n // 1회성 콜백함수는 호출 후 스토리지에서 삭제\n delete this.storage[oCallback.callback]; \n bizMOBCore.Module.logger(this.servicename, 'responser', 'I', oCallback.callback+' function called and removed.');",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 8,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 119,
    "char_count": 412,
    "created_at": "2025-08-01T15:32:19.850Z"
  },
  {
    "id": "5d01cb46_0009",
    "content": "}else if(oCallback.callback.indexOf('lsn') == 0 || oCallback.callback.indexOf('cst') == 0){\n // 스토리지내 콜백함수를 실행\n bizMOBCore.Module.logger(this.servicename, 'responser', 'D', oCallback.callback + ' call from the listener : ' );\n this.listener[oCallback.callback](oResdata.message, oServiceInfo);\n\n }else{\n // bizMOB App PlugIn 호출이 아닌 경우의 콜백 함수.\n \n bizMOBCore.Module.logger(this.servicename, 'responser', 'D', oCallback.callback + ' call from the page : ' );\n\n var tempcall;",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 9,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 130,
    "char_count": 471,
    "created_at": "2025-08-01T15:32:19.850Z"
  },
  {
    "id": "5d01cb46_0010",
    "content": "var tempcall;\n\n try{\n // bizMOB App PlugIn 호출이 아닌 xross API호출시 직접 콜백 함수를 실행.\n tempcall = eval(oCallback.callback);\n tempcall.call(undefined, oResdata.message, oServiceInfo);\n }catch(e){\n // 직접 콜백 함수 실행시 오류가 발생하면 에러 메세지 처리\n if(tempcall == undefined ){\n bizMOBCore.Module.logger(this.servicename, 'responser', 'E', 'Callback does not exist. : ' + JSON.stringify(oCallback.callback));\n\n }else if(tempcall.constructor !== Function){\n bizMOBCore.Module.logger(this.servicename, 'responser', 'E', 'Callback is not a function. : ' + JSON.stringify(oCallback.callback));\n }\n }\n\n }\n\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 10,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 162,
    "char_count": 576,
    "created_at": "2025-08-01T15:32:19.850Z"
  },
  {
    "id": "5d01cb46_0011",
    "content": "}\n\n};\n\n/**\n *\n * 01.클래스 설명 : bizMOBCore클래스 App PlugIn 기능 요청을 위한 공통 클래스\n * 02.제품구분 : bizMOB Core\n * 03.기능(콤퍼넌트) 명 : Callback 함수 관리 클래스\n *\n * @author 김승현\n * @version 1.0\n *\n */\nbizMOBCore.Module = new Object(); //Module 클래스 정의\n\nbizMOBCore.Module.servicename = 'AppModule'; //Module 클래스 이름 정의\nbizMOBCore.Module.config = {}; //Module 클래스 설정 정보 정의\n\n/** Xross 3.x 에서 사용하던 url 호출방식에서 JSBridge방식으로 변경함에 따라 삭제\n* bizMOBCore.Module.cmdwatcher = false; //requester가 요청중인지 상태 check하기 위한변수\n* bizMOBCore.Module.cmdPosition = 0; //requester내에서 다음 요청을 처리하기 위한 index값\n*/",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 11,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 174,
    "char_count": 552,
    "created_at": "2025-08-01T15:32:19.851Z"
  },
  {
    "id": "5d01cb46_0012",
    "content": "/**\n * App PlugIn 호출전 파라미터 변수타입을 체크하기 위한 메소드\n *\n * @param Object oParams 확인될 파라미터 정보 객체.\n * @param Array aRequired 필수 파라미터 목록.\n *\n * @return boolean result 파라미터 체크 결과\n */\nbizMOBCore.Module.checkParam = function(oParams, aRequired){\n var action = 'checkParam'; // 함수 동작을 식별하기 위한 변수\n var typeList = { // 변수 타입에 대한 매핑 객체\n 'a': 'array',\n 'o': 'object',\n 'f': 'function',\n 'b': 'boolean',\n 's': 'string',\n 'n': 'number',\n 'v': 'variable',\n 'e': 'element',\n };",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 12,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 139,
    "char_count": 454,
    "created_at": "2025-08-01T15:32:19.851Z"
  },
  {
    "id": "5d01cb46_0013",
    "content": "var param = oParams || {}; // 전달된 파라미터 객체\n var paramKeys = Object.keys(param); // 전달된 파라미터 객체의 속성 목록\n var required = aRequired || []; // 필수 파라미터 목록\n var missingKeys = required.filter(function(key) { // 없는 필수 파라미터 목록\n return paramKeys.indexOf(key) === -1;\n });",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 13,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 79,
    "char_count": 259,
    "created_at": "2025-08-01T15:32:19.851Z"
  },
  {
    "id": "5d01cb46_0014",
    "content": "// 전달된 파라미터가 오브젝트가 아닌 경우\n if (typeof param !== 'object') {\n bizMOBCore.Module.logger(this.serviceName, action, 'E', 'Invalid parameter format. Parameter have to define JSON.'); // 로그 출력\n return false;\n }\n // 전달된 파라미터가 없는 경우\n else if (!paramKeys.length) {\n if (required.length == 0) { // 필수 파라미터가 없는 경우\n return true; // 유효성 검사 통과\n }\n else {\n bizMOBCore.Module.logger(this.serviceName, action, 'L', 'Cannot found parameters.'); // 로그 출력\n return false; // 유효성 검사 실패\n }\n }\n // 필수 파라미터가 없는 경우\n else if (missingKeys.length) {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 14,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 156,
    "char_count": 519,
    "created_at": "2025-08-01T15:32:19.851Z"
  },
  {
    "id": "5d01cb46_0015",
    "content": "}\n }\n // 필수 파라미터가 없는 경우\n else if (missingKeys.length) {\n bizMOBCore.Module.logger(this.serviceName, action, 'E', 'Parameter is required. - ' + missingKeys.join(', ')); // 로그 출력\n return false;\n }\n // 정상 파라미터\n else {\n // 파라미터 객체 속성 순회\n for (var key in param) {\n if (Object.hasOwnProperty.call(param, key)) {\n var type = key.substring(1, 2); // key값 앞에 _s, _n...에서 s, n...을 추출\n var value = param[key]; // value",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 15,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 119,
    "char_count": 407,
    "created_at": "2025-08-01T15:32:19.851Z"
  },
  {
    "id": "5d01cb46_0016",
    "content": "// 속성 값이 없는 경우\n if (value === undefined) {\n bizMOBCore.Module.logger(this.serviceName, action, 'L', 'Parameter is undefined. it skip check - ' + key); // 로그 출력\n }\n // 속성 값이 null인 경우\n else if (value === null) {\n bizMOBCore.Module.logger(this.serviceName, action, 'L', 'Parameter is null. it skip check. - ' + key); // 로그 출력\n }\n // 정의되지 않은 타입이면 false\n if (typeList[type] === undefined) {\n bizMOBCore.Module.logger(this.serviceName, action, 'E', 'Parameter is unknown variable type. - ' + key); // 로그 출력\n return false;\n }\n // 배열 타입인데, 배열이 아닌 경우 false",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 16,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 158,
    "char_count": 547,
    "created_at": "2025-08-01T15:32:19.851Z"
  },
  {
    "id": "5d01cb46_0017",
    "content": "return false;\n }\n // 배열 타입인데, 배열이 아닌 경우 false\n else if (typeList[type] === 'array' && !Array.isArray(value)) {\n bizMOBCore.Module.logger(this.serviceName, action, 'E', 'Parameter is not an array. - ' + key); // 로그 출력\n return false;\n }\n // 배열 타입인데, 배열이 비어있는 경우 false\n else if (typeList[type] === 'array' && value.length === 0) {\n bizMOBCore.Module.logger(this.serviceName, action, 'E', 'Parameter is empty Array. - ' + key); // 로그 출력\n return false;\n }\n // 오브젝트 타입인데, 오브젝트가 아닌 경우 false\n else if (typeList[type] === 'object' && typeof value !== 'object') {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 17,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 161,
    "char_count": 553,
    "created_at": "2025-08-01T15:32:19.851Z"
  },
  {
    "id": "5d01cb46_0018",
    "content": "else if (typeList[type] === 'object' && typeof value !== 'object') {\n bizMOBCore.Module.logger(this.serviceName, action, 'E', 'Parameter is not an object. - ' + key); // 로그 출력\n return false;\n }\n // 그 외 타입인데, 타입이 다른 경우 false\n else if (typeList[type] !== typeof value) {\n bizMOBCore.Module.logger(this.serviceName, action, 'E', 'Parameter have wrong value. - ' + key); // 로그 출력\n return false;\n }\n // variable 또는 element 타입인 경우 true\n else if (typeList[type] === 'variable' || typeList[type] === 'element') {\n return true;\n }\n // 유효성 검사 통과\n else {\n return true;\n }\n }\n }\n }\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 18,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 161,
    "char_count": 572,
    "created_at": "2025-08-01T15:32:19.851Z"
  },
  {
    "id": "5d01cb46_0019",
    "content": "/**\n * bizMOB 3.x 에서 사용하던 App PlugIn 호출 메소드. Deprecated\n * Command Queue에 저장된 커맨드 순서대로 bizMOB App에 요청\n *\n * @param\n *\n * @return\n */\n/*\nbizMOBCore.Module.requester = function() {\n // 실제로 네이티브에 요청하는 부분\n var action = 'requester';",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 19,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 70,
    "char_count": 227,
    "created_at": "2025-08-01T15:32:19.851Z"
  },
  {
    "id": "5d01cb46_0020",
    "content": "if(this.cmdQueue.length > this.cmdPosition){\n bizMOBCore.Module.logger(this.servicename , action, 'D', (this.cmdPosition+1)+'th COMMAND Request.');\n document.location.href=this.cmdQueue[this.cmdPosition];\n this.cmdQueue[this.cmdPosition] = null;\n this.cmdPosition++;\n // this.cmdwatcher = true;\n setTimeout('bizMOBCore.Module.requester();', 200);\n }else{\n console.log('COMMAND Stopped!!');\n // this.cmdwatcher = false;\n }\n\n};\n*/",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 20,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 114,
    "char_count": 428,
    "created_at": "2025-08-01T15:32:19.851Z"
  },
  {
    "id": "5d01cb46_0021",
    "content": "};\n*/\n\n/**\n * bizMOB APP api호출시 요청된 Data를 JSBridge 를 통해 App에 요청하는 메소드\n *\n * @param Object oMessage bizMOB App PlugIn에 전달될 파라미터 정보 객체.\n * @param String sServiceName 요청한 커맨드의 서비스명 정보.\n * @param String sAction 요청한 커맨드의 서비스내 기능 정보.\n * @param Object oServiceInfo bizMOB App에 전달하고 Core 로직을 위한 파라미터 정보 객체.\n *\n * @return\n */\nbizMOBCore.Module.gateway = function(oMessage, sServiceName, sAction, oServiceInfo){\n var action = 'gateway';\n\n oMessage.service_info = {};\n\n if(oServiceInfo){\n oMessage.service_info = oServiceInfo;\n }",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 21,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 154,
    "char_count": 518,
    "created_at": "2025-08-01T15:32:19.851Z"
  },
  {
    "id": "5d01cb46_0022",
    "content": "if(oServiceInfo){\n oMessage.service_info = oServiceInfo;\n }\n\n oMessage.service_info['sServiceName'] = sServiceName;\n oMessage.service_info['sAction'] = sAction;\n\n // oMessage JSON object --> string으로 바꾸어 줌\n // replacer: 숫자를 string으로 변환해 줌(webkit에서 오류나서)\n\n oMessage = JSON.stringify(oMessage, this.replacer, 3);\n\n bizMOBCore.Module.logger(this.servicename , action, 'D', 'Request Service: ' + sServiceName + ', Action: ' + sAction + ', Param: ' + oMessage);\n\n if(bizMOBCore.DeviceManager.isApp()){",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 22,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 137,
    "char_count": 496,
    "created_at": "2025-08-01T15:32:19.851Z"
  },
  {
    "id": "5d01cb46_0023",
    "content": "if(bizMOBCore.DeviceManager.isApp()){\n\n if( bizMOBCore.DeviceManager.isIOS() ){\n // IOS console log\n window.webkit.messageHandlers.BMCLogger.postMessage(oMessage);\n\n window.webkit.messageHandlers.BMCManager.postMessage(oMessage);\n } else {\n window.BMCManager.execPluginWithJSB(oMessage);\n }\n\n }else{\n bizMOBCore.Module.logger(sServiceName , sAction, 'D', 'This function doesn\\'t support in browser.');\n }\n\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 23,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 108,
    "char_count": 408,
    "created_at": "2025-08-01T15:32:19.851Z"
  },
  {
    "id": "5d01cb46_0024",
    "content": "};\n\n/**\n * 메세지 Data중 Command 요청시 오류가 발생하는 Data처리 함수\n *\n * @param String sKey Data의 키값.\n * @param Variable vValue 변경할 데이터.\n *\n * @return vValue 가공된 데이터\n */\nbizMOBCore.Module.replacer = function(sKey, vValue) {\n // 숫자를 string type으로 바꾸어 줌(number로 하면 오작동 하는 경우 발생)\n if (typeof vValue === 'number' && !isFinite(vValue)) {\n return String(vValue);\n }\n return vValue;\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 24,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 109,
    "char_count": 363,
    "created_at": "2025-08-01T15:32:19.851Z"
  },
  {
    "id": "5d01cb46_0025",
    "content": "/**\n * JSON Object를 String으로 변환\n *\n * @param Variable vValue 변경할 데이터.\n *\n * @return value String으로 변환된 값.\n */\nbizMOBCore.Module.stringjson = function(vValue) {\n // Object -> String\n var value = vValue!=undefined && vValue!=null ? JSON.stringify(vValue) : '';\n return value;\n\n};\n\n/**\n *String을 JSON Object으로 변환\n *\n * @param Variable vValue 변경할 데이터.\n *\n * @return String vValue String으로 변환된 값.\n */\nbizMOBCore.Module.parsejson = function(vValue) {\n // String -> Object\n var retValue;",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 25,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 135,
    "char_count": 480,
    "created_at": "2025-08-01T15:32:19.851Z"
  },
  {
    "id": "5d01cb46_0026",
    "content": "// 숫자를 다시 Object로 변환 할 때, 0으로 시작하면 8진수로 오작동 할 수 있으므로\n if ( vValue != undefined && vValue.slice(0, 1) != '0' && vValue != '' ) {\n retValue = JSON.parse(vValue);\n }\n\n return retValue;\n\n};\n\n/**\n *File 클래스내에서 FilePath지정시 지정위치 키워드 처리\n *\n * @param String sPath 변경할 FilePath 값.\n *\n * @return Object splitPathType FilePath 정보를 분할한 Data Object.\n */\nbizMOBCore.Module.pathParser = function(sPath) {\n // bizMOB App 인터페이스 parsing을 위해 경로 분리\n var splitPathType = {};\n var regExp = new RegExp('{(.*?)}/(.*)','g');\n var result = regExp.exec(sPath);",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 26,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 158,
    "char_count": 532,
    "created_at": "2025-08-01T15:32:19.851Z"
  },
  {
    "id": "5d01cb46_0027",
    "content": "if(result){\n // {contents}/bizMOB/sign.bmp\n // result[1]: {contents}\n // result[2]: bizMOB/sign.bmp\n splitPathType.type = result[1] ? result[1] : 'absolute';\n splitPathType.path = result[2];\n }else {\n splitPathType.type = 'absolute';\n splitPathType.path = sPath;\n }\n return splitPathType;\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 27,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 78,
    "char_count": 291,
    "created_at": "2025-08-01T15:32:19.851Z"
  },
  {
    "id": "5d01cb46_0028",
    "content": "/**\n *bizMOB App 요청시 정의된 Callback함수가 없을경우 Default로 지정될 함수\n *\n * @param Object oReturnValue bizMOB App로 부터 전달된 데이터 값.\n *\n * @return\n */\nbizMOBCore.Module.echo = function(oReturnValue){\n // callback이 option일때 callback이 없으면 script에러 나서 echo callback만들어 줌\n var action = 'echo';\n bizMOBCore.Module.logger('Module', action ,'L', 'Echo callback . : ');\n if(oReturnValue.constructor !== Event){\n bizMOBCore.Module.logger('Module', action ,'D', 'callback parameter . : '+ JSON.stringify(oReturnValue));\n }\n\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 28,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 143,
    "char_count": 500,
    "created_at": "2025-08-01T15:32:19.851Z"
  },
  {
    "id": "5d01cb46_0029",
    "content": "};\n\n/**\n * Log 출력\n *\n * @param String sServiceName 요청한 커맨드의 서비스명 정보.\n * @param String sAction 요청한 커맨드의 서비스내 기능 정보.\n * @param String sLogtype 로그 레벨\n * @param String sMessage 로그 메세지\n *\n * @return\n */\nbizMOBCore.Module.logger = function(sService, sAction, sLogtype, sMessage){\n // 릴리즈 환경에서는 로그 출력 안함.\n if (bizMOBCore.App.config._bIsRelease) return;",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 29,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 104,
    "char_count": 345,
    "created_at": "2025-08-01T15:32:19.851Z"
  },
  {
    "id": "5d01cb46_0030",
    "content": "// 콘솔 로그 타입 스타일 정의\n var baseStyle = 'padding: 2px 4px; border-radius: 2px;';\n var infoStyle = baseStyle + ' color: white; background: #1a73e8;';\n var logStyle = baseStyle + ' color: white; background: #546e7a;';\n var debugStyle = baseStyle + ' color: white; background: #009688;';\n var warnStyle = baseStyle + ' color: white; background: #ffbb33;';\n var errorStyle = baseStyle + ' color: white; background: #d9534f;';",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 30,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 114,
    "char_count": 417,
    "created_at": "2025-08-01T15:32:19.851Z"
  },
  {
    "id": "5d01cb46_0031",
    "content": "// 콘솔 로그 Class 스타일 정의\n var bracketStyle = 'font-weight: bold;';\n var infoBracketStyle = bracketStyle + ' color: #1a73e8;';\n var logBracketStyle = bracketStyle + ' color: #546e7a;';\n var debugBracketStyle = bracketStyle + ' color: #009688;';\n var warnBracketStyle = bracketStyle + ' color: #ffbb33;';\n var errorBracketStyle = bracketStyle + ' color: #d9534f;';\n\n var msg = '';\n\n // JSON.stringify 오류시 빈 값으로 처리\n try {\n msg = typeof sMessage === 'object' ? JSON.stringify(sMessage) : sMessage;\n } catch (error) {\n msg = '';\n }",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 31,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 142,
    "char_count": 523,
    "created_at": "2025-08-01T15:32:19.851Z"
  },
  {
    "id": "5d01cb46_0032",
    "content": "var trace = '[App]['+sService+']'+'['+sAction+']';\n var log = msg.replace(/\\{/gi, '\\n{').replace(/\\}/gi, '}\\n').replace(/\\\\\"/gi, '');\n\n var logLevel = bizMOBCore.DeviceManager.getInfo({ _sKey: 'web_log_level' }) || bizMOBCore.loglevel;\n\n if (typeof logLevel == 'string' && logLevel.length == 4) {\n var logLevelArr = logLevel.split('');\n\n if (bizMOBCore.DeviceManager.isApp() && bizMOBCore.DeviceManager.isIOS() ) {\n window.webkit.messageHandlers.BMCLogger.postMessage('bizMOB LOG: ' + trace + ' - ' + log);\n }",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 32,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 139,
    "char_count": 509,
    "created_at": "2025-08-01T15:32:19.851Z"
  },
  {
    "id": "5d01cb46_0033",
    "content": "switch(sLogtype) {\n case 'I' :\n if (logLevelArr[0].indexOf('1') > -1) {\n console.info('%c bizMOB INFO %c ' + '%c' + trace + '%c ' + log, infoStyle, '', infoBracketStyle, '');\n }\n break;\n case 'L' :\n if (logLevelArr[0].indexOf('1') > -1) {\n console.info('%c bizMOB LOG %c ' + '%c' + trace + '%c ' + log, logStyle, '', logBracketStyle, '');\n }\n break;\n case 'D' :\n if (logLevelArr[1].indexOf('2') > -1) {\n console.info('%c bizMOB DEBUG %c ' + '%c' + trace + '%c ' + log, debugStyle, '', debugBracketStyle, '');\n }\n break;\n case 'W' :\n if (logLevelArr[2].indexOf('4') > -1) {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 33,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 156,
    "char_count": 572,
    "created_at": "2025-08-01T15:32:19.851Z"
  },
  {
    "id": "5d01cb46_0034",
    "content": "}\n break;\n case 'W' :\n if (logLevelArr[2].indexOf('4') > -1) {\n console.info('%c bizMOB WARN %c ' + '%c' + trace + '%c ' + log, warnStyle, '', warnBracketStyle, '');\n }\n break;\n case 'E' :\n if (logLevelArr[3].indexOf('8') > -1) {\n console.info('%c bizMOB ERROR %c ' + '%c' + trace + '%c ' + log, errorStyle, '', errorBracketStyle, '');\n }\n break;\n }\n }\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 34,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 97,
    "char_count": 355,
    "created_at": "2025-08-01T15:32:19.851Z"
  },
  {
    "id": "5d01cb46_0035",
    "content": "/**\n * Core 초기화 작업\n *\n * @param Object oRequired 발생 이벤트 Data객체\n * @param Object oOptions 이벤트에 전달될 메세지 Data객체\n *\n * @return\n */\nbizMOBCore.Module.init = function(oRequired, oOptions){\n\n var action = 'init';\n bizMOBCore.Module.logger(this.servicename, action, 'D', 'bizMOBCore Initailizing start.');\n\n /**\n * initXross에서 필요 값 셋팅으로 변경\n * - 제이쿼리 제거로 인한 $.ajax 제거\n */\n // bizMOBCore.APP_CONFIG = $.ajax({ \"url\" : \"../../bizMOB/config/app.config\", \"async\" : false, \"cache\" : false, \"dataType\" : \"JSON\" }).responseJSON;\n\n bizMOBCore.DeviceManager.init();\n bizMOBCore.EventManager.init();",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 35,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 166,
    "char_count": 580,
    "created_at": "2025-08-01T15:32:19.851Z"
  },
  {
    "id": "5d01cb46_0036",
    "content": "bizMOBCore.DeviceManager.init();\n bizMOBCore.EventManager.init();\n\n bizMOBCore.Module.logger(this.servicename, action ,'L', 'bizMOB Module initialized. ');\n\n};\n\n/**\n * 01.클래스 설명 : bizMOB Window 클래스\n * 02.제품구분 : bizMOB Core\n * 03.기능(콤퍼넌트) 명 : bizMOB Client에서 생성하는 Window 객체\n *\n * @author 김승현\n * @version 1.0\n *\n */\nbizMOBCore.Window = new Object();\n\nbizMOBCore.Window.servicename = 'Window';\nbizMOBCore.Window.config = {};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 36,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 119,
    "char_count": 421,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0037",
    "content": "bizMOBCore.Window.servicename = 'Window';\nbizMOBCore.Window.config = {};\n\n/**\n * SignPad(서명) Window 띄우기\n *\n * @param String _sTargetPath 사인패드에서 서명한 이미지를 저장할 File Path.\n * @param Function _fCallback 사인패드 처리 결과값을 받을 callback 함수.\n *\n * @return\n */\nbizMOBCore.Window.openSignPad = function() {\n\n var action = 'openSignPad';\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n var splitTargetPath = bizMOBCore.Module.pathParser(arguments[0]._sTargetPath);\n\n var oldparam = {\n target_path_type : splitTargetPath.type,\n target_path : splitTargetPath.path,\n callback:callback\n };",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 37,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 165,
    "char_count": 594,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0038",
    "content": "var tr = {\n id:'OPEN_SIGNATURE',\n param:{}\n };\n\n var params = Object.assign({}, {\n callback: 'bizMOBCore.Module.echo'\n }, oldparam);\n\n tr.param = params;\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n\n};\n\n/**\n * File Explorer(탐색기) Window 띄우기\n *\n *\n * @return Object File 정보 객체\n */\nbizMOBCore.Window.openFileExplorer = function() {\n\n var action = 'openFileExplorer';\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n\n var tr = {\n id:'CALL_FILE_BROWSER',\n param:{\n 'types' : arguments[0]._atype,\n 'callback' : callback\n }\n };",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 38,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 152,
    "char_count": 563,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0039",
    "content": "bizMOBCore.Module.gateway(tr, this.servicename , action );\n\n};\n\n/**\n * ImageViewer 띄우기\n *\n * @param String _sImagePath 이미지 뷰어로 열 이미지 File Path.\n * @param Function _fCallback 이미지 뷰어 Close시 결과값을 받을 callback함수.\n *\n * @return\n */\nbizMOBCore.Window.openImageViewer = function() {\n\n var action = 'openImageViewer';\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n var splitSourcePath = bizMOBCore.Module.pathParser(arguments[0]._sImagePath);",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 39,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 128,
    "char_count": 461,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0040",
    "content": "var oldparam = {\n 'source_path' : splitSourcePath.path,\n 'source_path_type' : splitSourcePath.type,\n 'orientation' : 'auto',\n callback : callback\n };\n\n var tr = {\n id:'OPEN_IMAGE_VIEW',\n param:{}\n };\n\n var params = Object.assign({}, {\n callback: 'bizMOBCore.Module.echo'\n }, oldparam);\n\n tr.param = params;\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n\n};\n\n/**\n * CodeReader( BarCode, QRCode ) 띄우기\n *\n * @param Function _fCallback Code 판독 결과값을 받을 callback함수.\n *\n * @return\n */\nbizMOBCore.Window.openCodeReader = function() {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 40,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 147,
    "char_count": 540,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0041",
    "content": "var action = 'openCodeReader';\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n\n var oldparam = {\n callback:callback\n };\n\n var tr = {\n id:'OPEN_CODE_READER',\n param:{}\n };\n\n var params = Object.assign({}, {\n message:{},\n callback: 'bizMOBCore.Module.echo'\n }, oldparam);\n\n tr.param = params;\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n\n};\n\n/**\n *\n * 01.클래스 설명 : Properties 저장 클래스\n * 02.제품구분 : bizMOB Core\n * 03.기능(콤퍼넌트) 명 : 영구 데이터 저장소\n *\n * @author 김승현\n * @version 1.0\n *\n */\nbizMOBCore.Properties = new Object();",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 41,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 156,
    "char_count": 557,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0042",
    "content": "bizMOBCore.Properties.servicename = 'Properties';\nbizMOBCore.Properties.config = {};\n\n/**\n * Properties 데이터 저장\n *\n * @param Variable _aList또는_sKey 저장할 데이터\n * @param Variable _vValue 저장할 값(_sKey와 쌍으로 들어옴.)\n *\n * @return\n */\nbizMOBCore.Properties.set = function() {\n\n var action = 'set';\n var tr = {\n call_type:'js2stg',\n id:'SET_FSTORAGE',\n param:{data:[]}\n };\n\n // bizMOB App한테 주기 전에 데이터 정리하는 용도의 array\n var properties = [];\n\n if(arguments[0]._aList)\n {\n var savelist = arguments[0]._aList;\n for(var i=0;i < savelist.length ; i++){",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 42,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 151,
    "char_count": 531,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0043",
    "content": "properties.push({key:savelist[i]._sKey, value:bizMOBCore.Module.stringjson(savelist[i]._vValue)});\n // set하고 바로 get하고 싶을 때(개발자 입장에서 로직에따라)\n window.bizMOB.FStorage[savelist[i]._sKey] = bizMOBCore.Module.stringjson(savelist[i]._vValue);\n }\n }else{\n properties.push({key:arguments[0]._sKey, value:bizMOBCore.Module.stringjson(arguments[0]._vValue)});\n window.bizMOB.FStorage[arguments[0]._sKey] = bizMOBCore.Module.stringjson(arguments[0]._vValue);\n }\n\n tr.param.data = properties;\n bizMOBCore.Module.logger(this.servicename, action ,'D', arguments[0]._sKey+ ' set on bizMOB Properties. ');",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 43,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 163,
    "char_count": 587,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0044",
    "content": "bizMOBCore.Module.gateway(tr, this.servicename , action );\n\n};\n\n/**\n * Properties 데이터 불러오기\n *\n * @param String _sKey 저장 값의 키\n *\n * @return\n */\nbizMOBCore.Properties.get = function() {\n var action = 'get';\n var key = arguments[0]._sKey;\n\n // bizMOB App에 요청 없이 FStorage에서 get\n if(window.bizMOB.FStorage[key]){\n return bizMOBCore.Module.parsejson( window.bizMOB.FStorage[key]);\n }else{\n return null;\n }\n\n};\n\n/**\n * Properties 데이터 삭제\n *\n * @param String _sKey 저장 값의 키\n *\n * @return\n */\nbizMOBCore.Properties.remove = function() {\n var action = 'remove';\n var key = arguments[0]._sKey;",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 44,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 161,
    "char_count": 580,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0045",
    "content": "// bizMOB App에서 지우기\n var tr = {\n id:'REMOVE_FSTORAGE',\n param:{data:[key]}\n };\n // FStorage에서 지우기\n delete window.bizMOB.FStorage[key];\n\n bizMOBCore.Module.logger(this.servicename, action ,'D', arguments[0]._sKey+ ' removed on bizMOB Properties. ');\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 45,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 86,
    "char_count": 313,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0046",
    "content": "bizMOBCore.Module.gateway(tr, this.servicename , action );\n\n};\n\n/**\n *\n * 01.클래스 설명 : System 기능 클래스\n * 02.제품구분 : bizMOB Core\n * 03.기능(콤퍼넌트) 명 : OS 기반 기본 기능\n * 04.관련 API/화면/서비스 : bizMOBCore.Module.checkParam,bizMOBCore.System.callBrowser, bizMOBCore.System.callCamera, bizMOBCore.System.callGallery, bizMOBCore.System.callMap, bizMOBCore.System.callSMS, bizMOBCore.System.callTEL, bizMOBCore.System.getGPS\n *\n * @author 김승현\n * @version 1.0\n *\n */\nbizMOBCore.System = new Object();\n\nbizMOBCore.System.servicename = 'System';\nbizMOBCore.System.config = {};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 46,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 156,
    "char_count": 553,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0047",
    "content": "bizMOBCore.System.servicename = 'System';\nbizMOBCore.System.config = {};\n\n/**\n * 전화걸기\n *\n * @param String _sNumber 전화번호\n * @param Function _fCallback 실행후 결과를 처리할 callback 함수\n *\n * @return\n */\nbizMOBCore.System.callTEL = function() {\n\n var action = 'callTEL';\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n var number = arguments[0]._sNumber ? (arguments[0]._sNumber.match(/(^[+0-9])|[0-9]/gi).join('')) : '';\n\n var tr = {\n id:'TEL',\n param:{\n number: number,\n callback : callback\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 47,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 160,
    "char_count": 578,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0048",
    "content": "bizMOBCore.Module.gateway(tr, this.servicename , action );\n};\n\n/**\n * 문자보내기\n *\n * @param Array _aNumber 메세지를 보낼 전화번호 배열\n * @param String _sMessage 보낼 메세지\n * @param Function _fCallback 실행후 결과를 처리할 callback 함수\n *\n * @return\n */\nbizMOBCore.System.callSMS = function() {\n\n var action = 'callSMS';\n //var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n\n var cell_list = arguments[0]._aNumber;",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 48,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 117,
    "char_count": 409,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0049",
    "content": "var cell_list = arguments[0]._aNumber;\n\n for(var i=0; i< cell_list.length ; i++)\n {\n var validvalue = cell_list[i].match(/(^[+0-9])|[0-9]/gi);\n if(validvalue != null){\n cell_list[i] = validvalue.join('');\n }else{\n bizMOBCore.Module.logger(this.servicename, action ,'E', cell_list[i]+ ' is wrong number format.');\n }\n }\n\n arguments[0]._aNumber = cell_list;\n\n var tr = {\n id:'SMS',\n // ;로 구분해서 string으로 보냄\n param:{number:arguments[0]._aNumber.join(';'), message:arguments[0]._sMessage}\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 49,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 152,
    "char_count": 551,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0050",
    "content": "bizMOBCore.Module.gateway(tr, this.servicename , action );\n};\n\n/**\n * 단말기에 설치된 브라우져 열기\n *\n * @param String _sURL 메세지를 보낼 전화번호 배열\n *\n * @return\n */\nbizMOBCore.System.callBrowser = function(){\n\n var action = 'callBrowser';\n\n var tr = {\n\n id:'CALL_EXTERNAL_BROWSER',\n param:{ 'url':arguments[0]._sURL }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n\n};\n\n/**\n * 단말기 디바이스의 갤러리(사진앨범) 보기\n *\n * @param String _sType String (Default : all) 갤러리에서 불러올 미디어 타입( all, image, video )가 있습니다.\n * @param Function _fCallback 갤러리에서 선택한 미디어를 결과를 전달 받아서 처리할 callback 함수.",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 50,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 172,
    "char_count": 567,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0051",
    "content": "*\n * @return\n */\nbizMOBCore.System.callGallery = function(){\n\n var action = 'callGallery';\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n\n switch(arguments[0]._sType) {\n case 'all' :\n arguments[0]._sType = ['video','image'];\n break;\n case 'video' :\n arguments[0]._sType = ['video'];\n break;\n case 'image' :\n arguments[0]._sType = ['image'];\n break;\n default :\n arguments[0]._sType = ['video','image'];\n break;\n }\n\n var tr = {\n id:'OPEN_MEDIA_PICKER',\n param:{\n type_list : arguments[0]._sType,\n max_count : arguments[0]._nMaxCount,\n callback:callback\n }\n };",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 51,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 157,
    "char_count": 585,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0052",
    "content": "bizMOBCore.Module.gateway(tr, this.servicename , action );\n\n};\n\n/**\n * 단말기 지도 실행\n *\n * @param String _sLocation 위치 정보(주소, 위경도값)\n *\n * @return\n */\nbizMOBCore.System.callMap = function() {\n\n var action = 'callMap';\n\n var tr = {\n id:'SHOW_MAP',\n param:{\n location:arguments[0]._sLocation\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n};\n\n/**\n * OS별 지도 실행\n *\n * @param String _sLocation 위치 정보(주소, 위경도값)\n *\n * @return\n */\nbizMOBCore.System.getGPS = function()\n{\n var action = 'getGPS';\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 52,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 161,
    "char_count": 576,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0053",
    "content": "var tr = {\n id:'GET_LOCATION',\n param:{\n callback:callback\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n\n};\n\n/**\n * 단말기 카메라 촬영\n *\n * @param Function _fCallback 갤러리에서 선택한 미디어를 전달 받아서 처리하는 callback 함수\n * @param String _sFileName 찍은 이미지를 저장할 이름\n * @param String _sDirectory 찍은 이미지를 저장할 경로\n * @param Boolean _bAutoVerticalHorizontal (Default : true) 찍은 이미지를 화면에 맞게 자동으로 회전시켜 저장할지를 설정 값\n *\n * @return\n */\nbizMOBCore.System.callCamera = function()\n{\n var action = 'callCamera';",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 53,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 149,
    "char_count": 494,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0054",
    "content": "var splitTargetDir = bizMOBCore.Module.pathParser(arguments[0]._sDirectory);\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n // bAutoVerticalHorizontal: 사진을 자동으로 가로 세로 맞춰주는 옵션\n var autoVerticalHorizontal = arguments[0]._bAutoVerticalHorizontal === false ? false : true;\n\n var tr = {\n id:'CALL_CAMERA',\n param:{\n target_directory: splitTargetDir.path,\n target_directory_type: splitTargetDir.type,\n picture_name:arguments[0]._sFileName,\n rotate : autoVerticalHorizontal,\n callback : callback\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 54,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 158,
    "char_count": 588,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0055",
    "content": "bizMOBCore.Module.gateway(tr, this.servicename , action );\n\n};\n\n/**\n *\n * 01.클래스 설명 : App 컨트롤 관련 클래스\n * 02.제품구분 : bizMOB Core\n * 03.기능(콤퍼넌트) 명 : App 컨트롤 관련 기능\n *\n * @author 김승현\n * @version 1.0\n *\n */\nbizMOBCore.App = new Object();\n\nbizMOBCore.App.servicename = 'App';\nbizMOBCore.App.config = {\n _sAppKey: '', // AppKey\n _bIsRelease: false, // 배포 빌드 여부\n};\n\n/**\n * App 프로그래스바 열기\n *\n * @param Function _fCallback 실행 후 호출될 callback 함수\n *\n * @return\n */\nbizMOBCore.App.openProgress = function(){",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 55,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 144,
    "char_count": 490,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0056",
    "content": "var action = 'openProgress';\n if(arguments[0] == undefined) { arguments[0] = {}; }\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n\n var tr = {\n 'id': 'PROGRESS_CONTROLLER',\n 'param': {\n 'type' : 'show' ,\n 'callback' : callback\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n\n};\n\n/**\n * App 프로그래스바 닫기\n *\n *@param Function _fCallback 실행 후 호출될 callback 함수\n *\n * @return\n */\nbizMOBCore.App.closeProgress = function(){",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 56,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 127,
    "char_count": 461,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0057",
    "content": "var action = 'closeProgress';\n if(arguments[0] == undefined) { arguments[0] = {}; }\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n\n var tr = {\n 'id': 'PROGRESS_CONTROLLER',\n 'param': {\n 'type' : 'close' ,\n 'callback' : callback\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n\n};\n\n/**\n * App 종료\n *\n * @param String _sType (Default : kill)어플리케이션 종료 유형( logout 또는 kill )\n *\n * @return\n */\nbizMOBCore.App.exit = function(){\n\n var action = 'exit';\n var type = arguments[0]._sType ? arguments[0]._sType : 'kill';",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 57,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 151,
    "char_count": 555,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0058",
    "content": "var tr = {\n 'id': 'EXIT_APP',\n 'param': {'kill_type' : type }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n\n};\n\n/**\n * App 자동 종료 시간 설정\n *\n * @param Number _nSeconds ( default : 7200 )어플리케이션의 세션 만료 시간(초단위) 설정 값.\n * @param Variable _vMessage 세션 종료시 표시할 메세지\n *\n * @return\n */\nbizMOBCore.App.requestTimeout = function(){\n\n var action = 'requestTimeout';\n\n var callback = arguments[0]._fCallback ? bizMOBCore.CallbackManager.save(arguments[0]._fCallback) : '' ;",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 58,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 136,
    "char_count": 476,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0059",
    "content": "var tr = {\n 'id': 'SET_INACTIVE_TIMEOUT',\n 'param': {\n 'callback':callback,\n 'session_timeout': arguments[0]._nSeconds,\n 'message': arguments[0]._vMessage\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n\n};\n\n/**\n * App 자동 종료 시간 조회\n *\n * @param Variable _vMessage 세션 종료시 표시할 메세지\n * @param Function _fCallback 서버와 통신 후 실행될 callback 함수\n *\n * @return\n */\nbizMOBCore.App.getTimeout = function(){\n\n var action = 'getTimeout';\n var seconds = -1; // 조회시 -1로 설정\n var callback = arguments[0]._fCallback ? bizMOBCore.CallbackManager.save(arguments[0]._fCallback) : '' ;",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 59,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 163,
    "char_count": 578,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0060",
    "content": "var tr = {\n 'id': 'SET_INACTIVE_TIMEOUT',\n 'param': {\n 'callback':callback,\n 'session_timeout': seconds,\n 'message': ''\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n\n};\n\n/**\n * App 스플래시가 수동 조작인 경우 종료 기능\n *\n * @param Function _fCallback 서버와 통신 후 실행될 callback 함수\n *\n * @return\n */\nbizMOBCore.App.hideSplash = function(){\n\n var action = 'hideSplash';\n var callback = arguments[0]._fCallback ? bizMOBCore.CallbackManager.save(arguments[0]._fCallback) : '' ;\n\n var tr = {\n 'id': 'HIDE_SPLASH',\n 'param': {\n 'callback':callback,\n }\n };",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 60,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 154,
    "char_count": 552,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0061",
    "content": "var tr = {\n 'id': 'HIDE_SPLASH',\n 'param': {\n 'callback':callback,\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n\n};\n\n/**\n *\n * 01.클래스 설명 : Web Storage 클래스\n * 02.제품구분 : bizMOB Core\n * 03.기능(콤퍼넌트) 명 : 휘발성 데이터 저장소\n *\n * @author 김승현\n * @version 1.0\n *\n */\nbizMOBCore.Storage = new Object();\n\nbizMOBCore.Storage.servicename = 'Storage';\nbizMOBCore.Storage.config = {};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 61,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 111,
    "char_count": 386,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0062",
    "content": "bizMOBCore.Storage.servicename = 'Storage';\nbizMOBCore.Storage.config = {};\n\n/**\n * Storage 데이터 저장\n *\n * 24-04-09 mhchoi:\n * - bizMOB 4.n 이상 부터는 도메인 기반이라 localStorage에 저장하면 영구적으로 저장됨.\n * - 기존에 3.n 에서 Storage는 휘발성 데이터로 사용했기 때문에 동일한 구조를 유지하기 위해 sessionStorage로 변경\n *\n * @param Variable _aList또는_sKey 저장할 데이터\n * @param Variable _vValue 저장할 값(_sKey와 쌍으로 지정됨)\n *\n * @return\n */\nbizMOBCore.Storage.set = function() {\n\n var action = 'set';",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 62,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 134,
    "char_count": 432,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0063",
    "content": "var action = 'set';\n\n // 1. Array로 올 때\n if(arguments[0]._aList)\n { var savelist = arguments[0]._aList;\n for(var i=0;i < savelist.length ; i++){\n // HTML5에 있는 sessionStorage 저장\n // storage는 브라우저 web storage\n sessionStorage.setItem ( savelist[i]._sKey , bizMOBCore.Module.stringjson(savelist[i]._vValue) );\n }\n // 2. Key value로 들어 올 때\n }else{\n sessionStorage.setItem ( arguments[0]._sKey , bizMOBCore.Module.stringjson(arguments[0]._vValue) );\n }\n\n bizMOBCore.Module.logger(this.servicename, action ,'D', arguments[0]._sKey+ ' set on bizMOB Storage. ');\n\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 63,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 152,
    "char_count": 555,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0064",
    "content": "};\n\n/**\n * Storage 데이터 불러오기\n *\n * @param String _sKey 저장 값의 키\n *\n * @return\n */\nbizMOBCore.Storage.get = function() {\n\n var action = 'get';\n var key = arguments[0]._sKey;\n\n var value = sessionStorage.getItem ( key );\n\n return bizMOBCore.Module.parsejson(value);\n};\n\n/**\n * Storage 데이터 삭제\n *\n * @param String _sKey 저장 값의 키\n *\n * @return\n */\nbizMOBCore.Storage.remove = function() {\n\n var action = 'remove';\n\n sessionStorage.removeItem(arguments[0]._sKey);\n\n bizMOBCore.Module.logger(this.servicename, action ,'D', arguments[0]._sKey+ ' removed on bizMOB Storage. ');\n\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 64,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 156,
    "char_count": 569,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0065",
    "content": "};\n\n/**\n *\n * 01.클래스 설명 : Network 통신 클래스\n * 02.제품구분 : bizMOB Core\n * 03.기능(콤퍼넌트) 명 : bizMOB Server와 통신\n *\n * @author 김승현\n * @version 1.0\n *\n */\nbizMOBCore.Network = new Object();\n\nbizMOBCore.Network.servicename = 'Network';\nbizMOBCore.Network.config = {\n _sJwtToken: '', // JWT Token\n};\n\nbizMOBCore.Network.index = 0;\n\nbizMOBCore.Network.callbackStorage = {};\n\nbizMOBCore.Network.changeLocale = function(arg) {\n // 언어 코드 (ko, ko-KR, en, en-US, ...)\n var localeCode = arg._sLocaleCd;\n // full locale 값 조회\n var fullLocale = bizMOBCore.Localization.getFullLocale(localeCode);",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 65,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 160,
    "char_count": 572,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0066",
    "content": "// Web 환경에 맞는 언어코드 변경 로직\n bizMOBCore.Localization.locale = fullLocale;\n bizMOBCore.Module.logger(this.serviceName, 'changeLocale', 'L', 'Network locale change: ' + fullLocale);\n};\n\nbizMOBCore.Network.httpHeader = function() {\n var arg = arguments[0] || {};\n var httpHeader = arg._oHttpHeader || null; // http header\n var headers = Object.assign({}, {\n // 컨텐츠 타입\n 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n }, httpHeader);\n\n // 언어 코드 추가\n if (bizMOBCore.Localization.locale && !headers['Accept-Language']) {\n headers['Accept-Language'] = bizMOBCore.Localization.locale;\n }",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 66,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 164,
    "char_count": 596,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0067",
    "content": "// JWT Token 존재시 추가\n if (arg._sTrcode !== 'LOGIN' && bizMOBCore.Network.config._sJwtToken) {\n headers['Authorization'] = 'Bearer ' + bizMOBCore.Network.config._sJwtToken;\n }\n\n return headers;\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 67,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 54,
    "char_count": 194,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0068",
    "content": "/**\n * bizMOB Server 전문 통신\n *\n * @param String _sTrcode bizMOB Server 전문코드\n * @param String _oHeader bizMOB Server 전문 Header 객체\n * @param String _oBody bizMOB Server 전문 Body 객체\n * @param Boolean _bProgressEnable (default:true) 서버에 통신 요청시 progress 표시 여부( true 또는 false )\n * @param Number _nTimeout (default: 60) 서버에 통신 요청시 timeout 시간 (sec)\n * @param Function _fCallback 서버와 통신 후 실행될 callback 함수\n *\n * @return\n */\nbizMOBCore.Network.requestTr = function(arg) {\n var timeout = arg._nTimeout ? arg._nTimeout : 60;\n var message = {\n header: Object.assign({}, {\n result: true,\n error_code: '',",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 68,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 166,
    "char_count": 587,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0069",
    "content": "var message = {\n header: Object.assign({}, {\n result: true,\n error_code: '',\n error_text: '',\n info_text: '',\n message_version: '',\n login_session_id: '',\n trcode: arg._sTrcode\n }, arg._oHeader),\n body: arg._oBody\n };\n var httpHeader = bizMOBCore.Network.httpHeader({\n _sTrcode: arg._sTrcode,\n _oHttpHeader: arg._oHttpHeader\n });",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 69,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 89,
    "char_count": 329,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0070",
    "content": "var action = 'requestTr';\n var progressEnable = arg._bProgressEnable === false ? false : true; // progress 진행 표시\n var tr = {\n id: 'REQUEST_TR',\n param: {\n trcode: arg._sTrcode,\n message: message,\n callback: bizMOBCore.CallbackManager.save(arg._fCallback),\n read_timeout: timeout,\n progress: progressEnable,\n header : httpHeader\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 70,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 106,
    "char_count": 398,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0071",
    "content": "/**\n * bizMOB Server 로그인(인증)전문 통신\n *\n * @param String _sUserId 인증 받을 사용자 아이디\n * @param String _sPassword 인증 받을 사용자 패스워드\n * @param String _sTrcode 레거시 로그인 인증 전문코드\n * @param String _oHeader 레거시 로그인 인증 전문 Header 객체\n * @param String _oBody 레거시 로그인 인증 전문 Body 객체\n * @param Function _fCallback 서버와 통신 후 실행될 callback 함수\n * @param Boolean _bProgressEnable (default:true) 서버에 통신 요청시 progress 표시 여부( true 또는 false )\n * @param Number _nTimeout (default: 60) 서버에 통신 요청시 timeout 시간 (sec)\n * @return\n */\nbizMOBCore.Network.requestLogin = function(arg) {\n var timeout = arg._nTimeout ? arg._nTimeout : 60;",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 71,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 179,
    "char_count": 590,
    "created_at": "2025-08-01T15:32:19.852Z"
  },
  {
    "id": "5d01cb46_0072",
    "content": "var timeout = arg._nTimeout ? arg._nTimeout : 60;\n var legacy_message = {\n header: Object.assign({}, {\n result: true,\n error_code: '',\n error_text: '',\n info_text: '',\n message_version: '',\n login_session_id: '',\n trcode: arg._sTrcode\n }, arg._oHeader),\n body: arg._oBody\n };\n var httpHeader = bizMOBCore.Network.httpHeader({\n _sTrcode: 'LOGIN',\n _oHttpHeader: arg._oHttpHeader\n });",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 72,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 103,
    "char_count": 382,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0073",
    "content": "var action = 'requestLogin';\n var progressEnable = arg._bProgressEnable === false ? false : true;\n var tr = {\n id:'REQUEST_LOGIN',\n param: {\n // portal에 로그인\n auth_info: {\n user_id: arg._sUserId,\n password: arg._sPassword\n },\n // 확장\n legacy_trcode: arg._sTrcode,\n legacy_message: legacy_message,\n message: {},\n callback: bizMOBCore.CallbackManager.save(arg._fCallback),\n read_timeout : timeout,\n progress : progressEnable,\n header : httpHeader\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 73,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 137,
    "char_count": 513,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0074",
    "content": "/**\n * bizMOB Server 전문 통신\n *\n * @param {String} _sUrl 서버 URL\n * @param {String} _sMethod 통신 방식 (get, post)\n * @param {String} _oHeader Http Header\n * @param {String} _oBody Http Body\n * @param {Boolean} _bProgressEnable (default:true) 서버에 통신 요청시 progress 표시 여부( true 또는 false )\n * @param {Number} _nTimeout (default: 60) 서버에 통신 요청시 timeout 시간 (sec)\n * @param {Function} _fCallback 서버와 통신 후 실행될 callback 함수\n *\n * @returns {Object} Response 객체\n * @returns {Boolean} returns.result 결과\n * @returns {Number} returns.response_code 응답 코드 (200 <= .. <= 300)",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 74,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 158,
    "char_count": 550,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0075",
    "content": "* @returns {Number} returns.response_code 응답 코드 (200 <= .. <= 300)\n * @returns {String} returns.response_data 응답 데이터\n * @returns {Object} returns.error 응답 실패시 에러 객체 (실패시에만 존재)\n * @returns {Number} returns.error.code bizMOB App 응답 실패코드 (ERR000)\n * @returns {String} returns.error.message bizMOB App에서 주는 응답 실패 메시지\n * @returns {Number} returns.error.response_code Server 응답 실패코드 (401, 402, ...) -- 없을 수도 있음\n * @returns {String} returns.error.response_data Server 응답 실패 데이터 -- 없을 수도 있음\n */\nbizMOBCore.Network.requestHttp = function(arg) {\n var action = 'requestHttp';",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 75,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 165,
    "char_count": 564,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0076",
    "content": "var url = arg._sUrl;\n var method = arg._sMethod;\n var timeout = arg._nTimeout ? arg._nTimeout : 60;\n var progressEnable = arg._bProgressEnable === false ? false : true; // progress 진행 표시\n var header = Object.assign({}, {\n 'Content-Type': 'application/json'\n }, arg._oHeader);\n var body = arg._oBody;\n\n var tr = {\n id: 'REQUEST_HTTP',\n param: {\n url: url,\n method: method,\n timeout: timeout,\n progress: progressEnable,\n header: header,\n data: body,\n callback: bizMOBCore.CallbackManager.save(arg._fCallback),\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 76,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 154,
    "char_count": 578,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0077",
    "content": "bizMOBCore.Module.gateway(tr, this.servicename , action );\n};\n\n/**\n *\n * 01.클래스 설명 : Event 관리 기능 클래스\n * 02.제품구분 : bizMOB Core\n * 03.기능(콤퍼넌트) 명 : bizMOB Event 관리 기능 클래스\n *\n * @author 김승현\n * @version 1.0\n *\n */\nbizMOBCore.EventManager = new Object();\n\nbizMOBCore.EventManager.servicename = 'EventManager';\nbizMOBCore.EventManager.config = {};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 77,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 98,
    "char_count": 340,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0078",
    "content": "bizMOBCore.EventManager.storage = {\n // App init\n 'ready' : [],\n // 페이지 관련\n 'resume' : [],\n 'backbutton' : [],\n 'beforeready' : [],\n // 사이드 뷰 관련\n 'open' : [],\n 'close' : [],\n // 푸시 메시지 관련\n 'push' : [],\n 'networkstatechange' : [],\n // 세션타임아웃\n 'sessiontimeout' : []\n};\n\nbizMOBCore.EventManager.beforeInitEvents =[];\n\nbizMOBCore.EventManager.list = ['ready','resume','backbutton','open','close','networkstatechange','sessiontimeout'];\n\n/**\n * bizMOB Window Load시 bizMOB Event 기능 초기화\n *\n * @param\n *\n * @return\n */\nbizMOBCore.EventManager.init = function() {\n\n var action = 'init';",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 78,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 162,
    "char_count": 577,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0079",
    "content": "var action = 'init';\n\n bizMOBCore.Module.logger(this.servicename, action ,'L', 'EventManager initializing start.');\n\n for (var evtname in this.storage) {\n // bizMOBCore.Module.logger(this.servicename, action ,\"L\", evtname + \" event handler.\");\n // `&& this.storage[evtname].length > 0` 조건 제거: onReady가 App에서 너무 빨리 호출되는 경우 이벤트 등록이 안됨.\n if (Object.hasOwnProperty.call(this.storage, evtname)) {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 79,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 111,
    "char_count": 391,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0080",
    "content": "bizMOBCore.Module.logger(this.servicename, action ,'L', evtname + ' event handler registed.');\n document.addEventListener('bizMOB.on' + evtname, function(event) {\n var eventName = event.type.replace('bizMOB.on', '');\n var eventList = bizMOBCore.EventManager.storage[eventName];\n\n eventList.forEach(function(callback) {\n if (callback instanceof Function) {\n callback(event);\n }\n else {\n try {\n eval(callback);\n } catch (error) {\n bizMOBCore.Module.logger(this.servicename, action ,'W', callback + ' is undefined. ');\n }\n }\n });\n });",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 80,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 140,
    "char_count": 531,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0081",
    "content": "}else{\n bizMOBCore.Module.logger(this.servicename, action ,'L', evtname + ' event handler does not exist.');\n }\n }\n\n var recievedEventslength = bizMOBCore.EventManager.beforeInitEvents.length;\n if(recievedEventslength > 0 ){\n // console.log(\"run event before init\");",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 81,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 70,
    "char_count": 266,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0082",
    "content": "for(var i=0; i < recievedEventslength; i++ ){\n bizMOBCore.EventManager.raiseevent(bizMOBCore.EventManager.beforeInitEvents[i]['oRequired'], bizMOBCore.EventManager.beforeInitEvents[i]['oOptions']);\n }\n }\n if (bizMOBCore.DeviceManager.isAndroid()) {\n // bizMOB App에 backbutton에 대한 event 추가 요청\n bizMOBCore.EventManager.requester({ 'eventname' : 'backbutton' });\n }\n\n bizMOBCore.Module.logger(this.servicename, action ,'L', 'EventManager initialized.');\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 82,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 122,
    "char_count": 453,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0083",
    "content": "/**\n * bizMOB App에서 관장하는 Event 등록 요청 기능\n *\n * @param Object oRequired 요청 이벤트 Data객체\n * @param Object oOptions 요청 이벤트 등록 요청시 전달할 Data객체\n *\n * @return\n */\nbizMOBCore.EventManager.requester = function(oRequired, oOptions) {\n\n var action = 'requester';\n\n switch(oRequired.eventname)\n {\n case 'backbutton' :\n\n var tr = {\n id:'ADD_EVENT_BACKBUTTON',\n param:{}\n };\n\n var params ={\n useBackEvent : true,\n };\n\n tr.param = params;",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 83,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 118,
    "char_count": 420,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0084",
    "content": "var params ={\n useBackEvent : true,\n };\n\n tr.param = params;\n\n // bizMOB App gateway에 요청\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n bizMOBCore.Module.logger(this.servicename, action ,'L', 'EventManager request add event.');\n\n break;\n }\n\n};\n\n/**\n * bizMOB App에서 Event 발생시 Web으로 전달되는 기능\n *\n * @param Object oRequired 발생한 이벤트 Data객체\n * @param Object oOptions 이벤트에 전달될 메세지 Data객체\n *\n * @return\n */\nbizMOBCore.EventManager.responser = function(oRequired, oOptions) {\n // 네이티브에게 응답을 받기위한 용도\n // 네이티브에서 로직처리 완료 후 responser를 호출\n\n var action = 'responser';",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 84,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 164,
    "char_count": 565,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0085",
    "content": "switch(oRequired.eventname)\n {\n // 네이티브에서 준비되면 onReady\n case 'onReady' :\n if(!bizMOBCore.readystatus){\n // 웹 레디 준비(Module.init에서 device property랑 이벤트 등록해줌)\n bizMOBCore.Module.init(oRequired, oOptions);\n bizMOBCore.readystatus = true;\n // beforeready 호출(beforeready: 페이지가 로딩 전에 수행되어야하는 로직들)\n bizMOBCore.EventManager.raiseevent({eventname : 'onbeforeready'}, oOptions);\n // onReady불러줌 onReady에 page.init\n if(bizMOBCore.EventManager.beforeInitEvents.length == 0 || bizMOBCore.EventManager.beforeInitEvents[0]['oOptions']['message']['status'] == 'receive'){",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 85,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 158,
    "char_count": 553,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0086",
    "content": "bizMOBCore.EventManager.raiseevent(oRequired, oOptions);\n }else{\n bizMOBCore.EventManager.raiseevent(oRequired, {'message' : { startBy : bizMOBCore.EventManager.beforeInitEvents[0]['oRequired']['eventname'].replace(/on/,'').toLowerCase()}});\n }\n }\n break;\n // 일반적인 이벤트\n default :\n if(bizMOBCore.readystatus){\n bizMOBCore.EventManager.raiseevent(oRequired, oOptions);\n }else{\n // console.log(\"event rev before init\" + JSON.stringify(oRequired));\n bizMOBCore.EventManager.beforeInitEvents.push({'oRequired':oRequired, 'oOptions' :oOptions });\n }\n break;\n }",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 86,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 149,
    "char_count": 554,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0087",
    "content": "};\n\n/**\n * 등록된 이벤트를 발생 시키는 기능\n *\n * @param Object oRequired 발생한 이벤트 Data객체\n * @param Object oOptions 이벤트에 전달될 메세지 Data객체\n *\n * @return\n */\nbizMOBCore.EventManager.raiseevent = function(oRequired, oOptions) {\n // 이벤트 발생\n var action = 'raiseevent';\n\n bizMOBCore.Module.logger(this.servicename, action ,'L', 'EventManager raise event. - ' + oRequired.eventname.toLowerCase() + ', ' + JSON.stringify(oOptions.message));",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 87,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 120,
    "char_count": 415,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0088",
    "content": "// 자바스크립트 custom이벤트 발생\n var evt = document.createEvent('Event');\n evt.initEvent('bizMOB.'+oRequired.eventname.toLowerCase(), false, true );\n // 이전페이지에서 온 message를 data에 넣어줌\n evt.data = oOptions.message;\n\n try{\n document.dispatchEvent(evt);\n }catch(e){\n bizMOBCore.Module.logger(this.servicename, action ,'E', e);\n }\n\n};\n\n// 이벤트 등록 (set)\nbizMOBCore.EventManager.set = function() {\n var sEvent = arguments[0]._sEvent;\n var fCallback = arguments[0]._fCallback;",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 88,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 129,
    "char_count": 457,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0089",
    "content": "if (bizMOBCore.EventManager.storage[sEvent]) {\n // bizMOB App에서 이미 onReady를 발생 시킨 후에 ready를 등록시 바로 실행\n if (sEvent === 'ready' && bizMOBCore.readystatus) {\n bizMOBCore.Module.logger(this.servicename, 'setEvent', 'L', 'Event execute. - ' + sEvent);\n fCallback();\n }\n // 그 외에는 등록\n else {\n bizMOBCore.EventManager.storage[sEvent] = [ fCallback ];\n bizMOBCore.Module.logger(this.servicename, 'setEvent', 'L', '\\'' + sEvent + '\\' event set.');\n }\n }\n else {\n bizMOBCore.Module.logger(this.servicename, 'setEvent','E', 'Event set failed. Cannot find \\'' + sEvent + '\\' eventname.');\n }\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 89,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 161,
    "char_count": 581,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0090",
    "content": "// 이벤트 삭제\nbizMOBCore.EventManager.clear = function() {\n var sEvent = arguments[0]._sEvent;\n\n if (bizMOBCore.EventManager.storage[sEvent]) {\n bizMOBCore.EventManager.storage[sEvent] = [];\n bizMOBCore.Module.logger(this.servicename, 'clearEvent', 'L', '\\'' + sEvent + '\\' event clear.');\n }\n else {\n bizMOBCore.Module.logger(this.servicename, 'setEvent','E', 'Event clear failed. Cannot find \\'' + sEvent + '\\' eventname.');\n }\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 90,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 116,
    "char_count": 428,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0091",
    "content": "/**\n *\n * 01.클래스 설명 : 단말기 정보 관리 클래스\n * 02.제품구분 : bizMOB Core\n * 03.기능(콤퍼넌트) 명 : 단말기 정보 관리\n *\n * @author 김승현\n * @version 1.0\n *\n */\nbizMOBCore.DeviceManager = new Object();\n\nbizMOBCore.DeviceManager.servicename = 'DeviceManager';\nbizMOBCore.DeviceManager.config = {};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 91,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 80,
    "char_count": 266,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0092",
    "content": "/**\n * bizMOB Window Load시 bizMOB Device Info 초기화\n *\n * @param\n *\n * @return\n */\nbizMOBCore.DeviceManager.init = function(){\n // Device Info관련\n var appMajorVersion = bizMOBCore.DeviceManager.getInfo({ _sKey: 'app_major_version' });\n var appMinorVersion = bizMOBCore.DeviceManager.getInfo({ _sKey: 'app_minor_version' });\n var appBuildVersion = bizMOBCore.DeviceManager.getInfo({ _sKey: 'app_build_version' });\n var contentMinorVersion = bizMOBCore.DeviceManager.getInfo({ _sKey: 'content_major_version' });",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 92,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 135,
    "char_count": 506,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0093",
    "content": "var contentBuildVersion = bizMOBCore.DeviceManager.getInfo({ _sKey: 'content_minor_version' });\n var appVersion = appMajorVersion + '.' + appMinorVersion + '.' + appBuildVersion + '_' + contentMinorVersion + '.' + contentBuildVersion;",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 93,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 62,
    "char_count": 234,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0094",
    "content": "bizMOBCore.DeviceManager.setInfo({\n _sKey: 'app_version',\n _sValue: appVersion\n });\n\n bizMOBCore.Module.logger(this.servicename, 'init', 'D', 'Device Info initialized - ' + JSON.stringify(bizMOBCore.DeviceManager.getInfo()));\n};\n\n/**\n * 단말기 정보조회\n *\n * @param {String} _sKey 디바이스 정보 키 값.\n *\n * @return Object 단말기 정보\n */\nbizMOBCore.DeviceManager.getInfo = function() {\n // Core에서 컨테이너에게 정보를 요청하지 않고 Xross에서 저장되어 있는 값을 return함.\n return arguments[0] && arguments[0]._sKey\n ? window.bizMOB.Device.Info[arguments[0]._sKey]\n : window.bizMOB.Device.Info;\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 94,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 158,
    "char_count": 549,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0095",
    "content": "/**\n * 단말기 정보조회\n *\n * @param {String} _sKey 디바이스 정보 key 값.\n * @param {String} _sValue 디바이스 정보 value 값.\n */\nbizMOBCore.DeviceManager.setInfo = function() {\n window.bizMOB.Device.Info[arguments[0]._sKey] = arguments[0]._sValue;\n};\n\n/**\n * App 판단 여부\n */\nbizMOBCore.DeviceManager.isApp = function() {\n return !!window.BMCManager || (!!window.webkit && !!window.webkit.messageHandlers && !!window.webkit.messageHandlers.BMCManager);\n};\n\n/**\n * Web 판단 여부\n */\nbizMOBCore.DeviceManager.isWeb = function() {\n return !bizMOBCore.DeviceManager.isApp();\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 95,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 153,
    "char_count": 544,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0096",
    "content": "/**\n * Mobile 여부\n */\nbizMOBCore.DeviceManager.isMobile = function() {\n var UA = navigator.userAgent || navigator.vendor || window.opera;\n return UA && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(UA);\n};\n\n/**\n * PC 여부\n */\nbizMOBCore.DeviceManager.isPC = function() {\n return !bizMOBCore.DeviceManager.isMobile();\n};\n\n/**\n * Android 여부\n */\nbizMOBCore.DeviceManager.isAndroid = function() {\n var UA = navigator.userAgent || navigator.vendor || window.opera;\n return /android/i.test(UA);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 96,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 137,
    "char_count": 512,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0097",
    "content": "/**\n * IOS 여부\n */\nbizMOBCore.DeviceManager.isIOS = function() {\n var UA = navigator.userAgent || navigator.vendor || window.opera;\n return /iPad|iPhone|iPod/.test(UA) && !window.MSStream;\n};\n\n/**\n * Tablet 여부\n */\nbizMOBCore.DeviceManager.isTablet = function() {\n var UA = navigator.userAgent || navigator.vendor || window.opera;\n return /(ipad|tablet|(android(?!.*mobile))|(windows(?!.*phone)(.*touch))|kindle|playbook|silk|(puffin(?!.*(IP|AP|WP))))/.test(UA.toLowerCase());\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 97,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 130,
    "char_count": 477,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0098",
    "content": "/**\n * Phone 여부\n */\nbizMOBCore.DeviceManager.isPhone = function() {\n return bizMOBCore.DeviceManager.isMobile() && !bizMOBCore.DeviceManager.isTablet();\n};\n\n/**\n *\n * 01.클래스 설명 : bizMOB App API 실행 기능 클래스\n * 02.제품구분 : bizMOB Core\n * 03.기능(콤퍼넌트) 명 : bizMOB App API 실행 기능\n *\n * @author 김승현\n * @version 1.0\n *\n */\nbizMOBCore.ExtendsManager = new Object();\n\nbizMOBCore.ExtendsManager.servicename = 'Extends';\n\nbizMOBCore.ExtendsManager.executer = function(){\n\n var action = 'executer';",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 98,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 135,
    "char_count": 480,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0099",
    "content": "bizMOBCore.ExtendsManager.executer = function(){\n\n var action = 'executer';\n\n for (var prop in arguments[0]._oParam) {\n if (Object.hasOwnProperty.call(arguments[0]._oParam, prop)) {\n if (typeof arguments[0]._oParam[prop] === 'function') {\n arguments[0]._oParam[prop] = bizMOBCore.CallbackManager.save(arguments[0]._oParam[prop], 'custom');\n }\n }\n }\n\n bizMOBCore.Module.logger(this.servicename, action, 'D', ' ExtendsManager executer : ' + arguments[0]._sID + ' -' + JSON.stringify(arguments[0]._oParam));\n\n var tr = {\n id: arguments[0]._sID,\n param:arguments[0]._oParam\n };",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 99,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 153,
    "char_count": 573,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0100",
    "content": "var tr = {\n id: arguments[0]._sID,\n param:arguments[0]._oParam\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n\n};\n\n/**\n *\n * 01.클래스 설명 : 단말기 주소록 기능 클래스\n * 02.제품구분 : bizMOB Core\n * 03.기능(콤퍼넌트) 명 : 단말기 주소록 관리 기능\n *\n * @author 김승현\n * @version 1.0\n *\n */\nbizMOBCore.Contacts = new Object();\n\nbizMOBCore.Contacts.servicename = 'Contacts';\nbizMOBCore.Contacts.config = {};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 100,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 112,
    "char_count": 384,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0101",
    "content": "bizMOBCore.Contacts.servicename = 'Contacts';\nbizMOBCore.Contacts.config = {};\n\n/**\n * 전화번호부 검색\n *\n * @param String _sSearchType (Default : \"\", 전체조회) 주소록 검색 대상 필드(name 또는 phone)\n * @param String _sSearchText (Default : \"\") 주소록 검색어\n * @param Function _fCallback 주소록 검색 결과를 받아 처리할 callback함수\n *\n * @return\n */\nbizMOBCore.Contacts.get = function(options) {\n\n var action = 'get';\n\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 101,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 130,
    "char_count": 450,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0102",
    "content": "var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n\n var tr =\n {\n id:'GET_CONTACT',\n param:{\n search_type : arguments[0]._sSearchType || '',\n search_text : arguments[0]._sSearchText || '',\n callback : callback\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n\n};\n\n/**\n *\n * 01.클래스 설명 : File 클래스\n * 02.제품구분 : bizMOB Core\n * 03.기능(콤퍼넌트) 명 : File 컨트롤 클래스\n *\n * @author 김승현\n * @version 1.0\n *\n */\nbizMOBCore.File = new Object();\n\nbizMOBCore.File.servicename = 'File';\nbizMOBCore.File.config = {};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 102,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 149,
    "char_count": 533,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0103",
    "content": "bizMOBCore.File.servicename = 'File';\nbizMOBCore.File.config = {};\n\n/**\n * 파일 열기\n *\n * @param String _sSourcePath 열어볼 파일 경로. 기본 설치App으로 연결.\n * @param Function _fCallback 파일을 열고 난 후 호출될 callback함수.\n *\n * @return\n */\nbizMOBCore.File.open = function()\n{\n var action = 'open';\n\n var splitSourcePath = bizMOBCore.Module.pathParser(arguments[0]._sSourcePath);\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n\n var tr =\n {\n id:'OPEN_FILE',\n param:{\n target_path : splitSourcePath.path,\n target_path_type : splitSourcePath.type,\n callback:callback\n }\n };",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 103,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 159,
    "char_count": 572,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0104",
    "content": "bizMOBCore.Module.gateway(tr, this.servicename , action );\n};\n\n/**\n * 파일 압축\n *\n * @param String _sSourcePath 소스 File Path.\n * @param String _sTargetPath 결과 File Path.\n * @param Function _fCallback 압축 후 호출될 callback함수.\n *\n * @return\n */\nbizMOBCore.File.zip= function()\n{\n var action = 'zip';\n\n var splitSourcePath = bizMOBCore.Module.pathParser(arguments[0]._sSourcePath);\n var splitTargetPath = bizMOBCore.Module.pathParser(arguments[0]._sTargetPath);\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n\n var tr =\n {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 104,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 146,
    "char_count": 539,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0105",
    "content": "var tr =\n {\n\n id:'MAKE_ZIPFILE',\n param:{\n source_path: splitSourcePath.path,\n source_path_type: splitSourcePath.type,\n target_path: splitTargetPath.path,\n target_path_type: splitTargetPath.type,\n callback:callback\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n\n};\n\n/**\n * 파일 압축해제\n *\n * @param String _sSourcePath 소스 File Path.\n * @param String _sDirectory 압축 해제할 Directory Path.\n * @param Function _fCallback 압축 후 호출될 callback함수.\n *\n * @return\n */\nbizMOBCore.File.unzip= function()\n{\n var action = 'unzip';",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 105,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 145,
    "char_count": 529,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0106",
    "content": "var splitSourcePath = bizMOBCore.Module.pathParser(arguments[0]._sSourcePath);\n var splitTargetPath = bizMOBCore.Module.pathParser(arguments[0]._sDirectory);\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n\n var tr =\n {\n\n id:'EXTRACT_ZIPFILE',\n param:{\n source_path: splitSourcePath.path,\n source_path_type: splitSourcePath.type,\n target_directory: splitTargetPath.path,\n target_directory_type: splitTargetPath.type,\n callback:callback\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 106,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 140,
    "char_count": 533,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0107",
    "content": "bizMOBCore.Module.gateway(tr, this.servicename , action );\n\n};\n\n/**\n * 파일 이동\n *\n * @param String _sSourcePath 소스 File Path.\n * @param String _sTargetPath 이동될 File Path.\n * @param Function _fCallback 이동 후 호출될 callback함수.\n *\n * @return\n */\nbizMOBCore.File.move = function()\n{\n var action = 'move';\n\n var splitSourcePath = bizMOBCore.Module.pathParser(arguments[0]._sSourcePath);\n var splitTargetPath = bizMOBCore.Module.pathParser(arguments[0]._sTargetPath);\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n\n var tr =\n {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 107,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 148,
    "char_count": 544,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0108",
    "content": "var tr =\n {\n\n id:'MOVE_FILE',\n param:{\n source_path: splitSourcePath.path,\n source_path_type: splitSourcePath.type,\n target_path: splitTargetPath.path,\n target_path_type: splitTargetPath.type,\n callback:callback\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n\n};\n\n/**\n * 파일 복사\n *\n * @param String _sSourcePath 소스 File Path.\n * @param String _sTargetPath 복사될 File Path.\n * @param Function _fCallback 복사 후 호출될 callback함수.\n *\n * @return\n */\nbizMOBCore.File.copy = function() {\n\n var action = 'copy';",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 108,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 141,
    "char_count": 517,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0109",
    "content": "var action = 'copy';\n\n var splitSourcePath = bizMOBCore.Module.pathParser(arguments[0]._sSourcePath);\n var splitTargetPath = bizMOBCore.Module.pathParser(arguments[0]._sTargetPath);\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n\n var tr = {\n\n 'id': 'COPY_FILE',\n 'param': {\n source_path: splitSourcePath.path,\n source_path_type: splitSourcePath.type,\n target_path: splitTargetPath.path,\n target_path_type: splitTargetPath.type,\n callback:callback\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 109,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 144,
    "char_count": 546,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0110",
    "content": "bizMOBCore.Module.gateway(tr, this.servicename , action );\n\n};\n\n/**\n * 파일 삭제\n *\n * @param Array _aSourcePath 삭제할 File Path 목록.\n * @param Function _fCallback 삭제 후 호출될 callback함수.\n *\n * @return\n */\nbizMOBCore.File.remove = function() {\n\n var action = 'remove';\n\n var targetfiles = [];\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n\n for(var i=0;i<arguments[0]._aSourcePath.length;i++){\n\n var splitSourcePath = bizMOBCore.Module.pathParser(arguments[0]._aSourcePath[i]);\n\n var file = {\n 'source_path': splitSourcePath.path,\n 'source_path_type': splitSourcePath.type,\n };",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 110,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 162,
    "char_count": 595,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0111",
    "content": "targetfiles[i] = file;\n }\n\n var tr = {\n\n 'id': 'REMOVE_FILES',\n 'param': {\n list: targetfiles,\n callback:callback\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n};\n\n/**\n * 디렉토리 정보 읽기\n *\n * @param Array _aSourcePath 삭제할 File Path 목록.\n * @param Function _fCallback 삭제 후 호출될 callback함수.\n *\n * @return\n */\nbizMOBCore.File.directory = function()\n{\n var action = 'directory';\n\n var splitSourcePath = bizMOBCore.Module.pathParser(arguments[0]._sDirectory);\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n\n var tr =\n {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 111,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 153,
    "char_count": 558,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0112",
    "content": "var tr =\n {\n\n id:'GET_DIRECTORY',\n param:{\n source_directory: splitSourcePath.path,\n source_directory_type: splitSourcePath.type,\n callback:callback\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n};\n\n/**\n * 파일 존재 여부 확인\n *\n * @param String _sSourcePath 확인할 File Path 목록.\n * @param Function _fCallback 확인 후 호출될 callback함수.\n *\n * @return\n */\nbizMOBCore.File.exist = function() {\n\n var action = 'exist';\n\n var splitSourcePath = bizMOBCore.Module.pathParser(arguments[0]._sSourcePath);\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n\n var tr =\n {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 112,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 161,
    "char_count": 589,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0113",
    "content": "var tr =\n {\n\n id:'EXISTS_FILE',\n param:{\n source_path: splitSourcePath.path,\n source_path_type: splitSourcePath.type,\n callback:callback\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n\n};\n\n/**\n * 파일 업로드\n *\n * @param Array _aFileList 업로드할 File Path 목록.\n * @param Function _fCallback 결과를 받을 callback 함수.\n *\n * @return\n */\nbizMOBCore.File.upload = function() {\n\n var action = 'upload';\n\n var file_list = arguments[0]._aFileList.map(function(row, index) {\n var splitSourcePath = bizMOBCore.Module.pathParser(row._sSourcePath);",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 113,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 148,
    "char_count": 543,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0114",
    "content": "return {\n source_path : splitSourcePath.path,\n source_path_type : splitSourcePath.type,\n file_name : row._sFileName\n };\n });\n\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n\n var tr =\n {\n id:'UPLOAD_FILE',\n param:{\n list : file_list,\n callback : callback\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 114,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 94,
    "char_count": 353,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0115",
    "content": "bizMOBCore.Module.gateway(tr, this.servicename , action );\n\n};\n\n/**\n * 파일 다운로드\n *\n * @param Array _aFileList 다운로드할 URL 주소 목록.\n * @param String _sMode 파일 다운로드 모드. (background 또는 foreground ).\n * @param String _sProgressBar 다운로드할 때 프로그래스바 설정 값.( off , each, full )\n * @param Function _fCallback 결과를 받을 callback 함수.\n *\n * @return\n */\nbizMOBCore.File.download = function() {\n\n var action = 'download';\n var progressbar = {};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 115,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 122,
    "char_count": 420,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0116",
    "content": "var action = 'download';\n var progressbar = {};\n\n switch(arguments[0]._sProgressBar)\n {\n // provider: progressbar를 어디서 그릴지 결정\n // bizMOB App-> bizMOB App에서 그림\n case 'full' :\n progressbar.provider = 'bizMOB App';\n progressbar.type = 'full_list';\n break;\n case 'each' :\n progressbar.provider = 'bizMOB App';\n progressbar.type = 'each_list';\n break;\n case 'off' :\n progressbar.provider = 'web';\n progressbar.type = '';\n break;\n default :\n progressbar.provider = 'bizMOB App';\n progressbar.type = 'default';\n // default: full_list\n break;\n }\n\n arguments[0]._oProgressBar = progressbar;",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 116,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 157,
    "char_count": 581,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0117",
    "content": "arguments[0]._oProgressBar = progressbar;\n\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback, 'listener');\n var file_list = arguments[0]._aFileList;\n var list_len = file_list.length;\n\n for(var i=0;i< list_len; i++){\n var splitTargetPath = bizMOBCore.Module.pathParser(file_list[i]._sDirectory);\n file_list[i].target_path = splitTargetPath.path + file_list[i]._sFileName,\n file_list[i].target_path_type = splitTargetPath.type,\n file_list[i].overwrite = file_list[i]._bOverwrite,\n file_list[i].uri = file_list[i]._sURI,\n file_list[i].file_id = i;\n }\n\n var tr = {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 117,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 155,
    "char_count": 582,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0118",
    "content": "var tr = {\n\n id:'DOWNLOAD_FILE',\n param:{\n method:arguments[0]._sMode,\n uri_list:file_list,\n progress : arguments[0]._oProgressBar,\n callback:callback\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n\n};\n\n/**\n * 파일 정보 가져오기\n *\n * @param Array _aFileList 정보를 가져올 File Path 목록.\n * @param Function _fCallback 결과를 받을 callback 함수.\n *\n * @return\n */\nbizMOBCore.File.getInfo = function() {\n var action = 'getInfo';",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 118,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 119,
    "char_count": 425,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0119",
    "content": "return {\n index : index,\n source_path : splitSourcePath.path,\n source_path_type : splitSourcePath.type\n };\n });\n var userCallback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n // JSON은 순서 보장이 안되니까 순서 맞춰서 usercallback대신 callback을 만들고\n // bizMOB App에 callback보내고 callback안에서 usercallback부르도록\n var callback = bizMOBCore.CallbackManager.save(function(res) {\n bizMOBCore.Module.logger(serviceName, action ,'D', res);\n\n if(res.result) {\n var nonIndexFileList = [];\n\n res.list.forEach(function(row) {\n var index = row.index;",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 119,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 147,
    "char_count": 532,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0120",
    "content": "res.list.forEach(function(row) {\n var index = row.index;\n\n nonIndexFileList[index] = row;\n delete nonIndexFileList[index].index;\n });\n\n res.list = nonIndexFileList;\n }\n\n // script에서 호출하는 CallbackManager responser\n bizMOBCore.CallbackManager.responser({\n 'callback' : userCallback\n }, {\n 'message' : res\n });\n });\n\n var tr = {\n id : 'GET_FILE_INFO',\n param : {\n file_path : fileList,\n callback : callback\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 120,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 126,
    "char_count": 474,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0121",
    "content": "/**\n * 이미지 파일 리사이즈\n *\n * @param Array _aFileList 이미지 파일 목록.\n * @param Boolean _bIsCopy (Default : false) 원본 파일 유지 여부. (true 또는 false)\n * @param String _sTargetDirectory _bIsCopy가 true일 경우 복사본이 저장될 디렉토리 경로.\n * @param Number _nWidth 파일의 가로 크기를 설정.\n * @param Number _nHeight 파일의 세로 크기를 설정.\n * @param Number _nCompressRate Number X (Default : 1.0) 파일의 압축률 값( 0.0부터 1.0까지 값 지정가능 )\n * @param Number _nFileSize 리사이즈 된 파일 용량의 최대값.( byte단위 )\n * @param Function _fCallback 결과를 받아 처리할 callback 함수.\n *\n * @return\n */\nbizMOBCore.File.resizeImage = function() {\n var action = 'resizeImage';",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 121,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 177,
    "char_count": 576,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0122",
    "content": "var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n var fileList = arguments[0]._aFileList.map(function(row) {\n var splitSourcePath = bizMOBCore.Module.pathParser(row._sSourcePath);",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 122,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 54,
    "char_count": 203,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0123",
    "content": "return {\n source_path : splitSourcePath.path,\n source_path_type : splitSourcePath.type\n };\n });\n var splitTargetDir = bizMOBCore.Module.pathParser(arguments[0]._sTargetDirectory);\n // resizeImage가 가로, 세로를 줄이는게 아니라 용량을 줄이는 것\n var compressRate = isNaN(Number(arguments[0]._nCompressRate)) ? 1.0 : arguments[0]._nCompressRate;\n // 원본 보존할지 여부\n var copy = arguments[0]._bIsCopy === false ? false : true;",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 123,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 112,
    "char_count": 398,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0124",
    "content": "var tr = {\n id : 'RESIZE_IMAGE',\n param : {\n image_paths : fileList,\n callback : callback,\n compress_rate : compressRate,\n copy_flag : copy,\n width : arguments[0]._nWidth,\n height : arguments[0]._nHeight,\n file_size : arguments[0]._nFileSize,\n target_path_type : splitTargetDir.type,\n target_path : splitTargetDir.path\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 124,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 103,
    "char_count": 389,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0125",
    "content": "/**\n * 이미지 파일 회전\n *\n * @param String _sSourcePath 이미지 File Path.\n * @param String _sTargetPath 회전된 이미지가 저장될 Path.\n * @param Number _nOrientation 회전 시킬 각도(EXIF_Orientation)값.(1, 2, 3, 4, 5, 6, 7, 8 )\n * @param Function _fCallback 결과를 받아 처리할 callback 함수.\n *\n * @return\n */\nbizMOBCore.File.rotateImage = function() {\n var action = 'rotateImage';\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n var splitSourcePath = bizMOBCore.Module.pathParser(arguments[0]._sSourcePath);\n var splitTargetPath = bizMOBCore.Module.pathParser(arguments[0]._sTargetPath);",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 125,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 161,
    "char_count": 576,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0126",
    "content": "var tr = {\n id : 'ROTATE_IMAGE',\n param : {\n orientation : orientation,\n source_path_type : splitSourcePath.type,\n source_path : splitSourcePath.path,\n target_path_type : splitTargetPath.type,\n target_path : splitTargetPath.path,\n callback : callback\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 126,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 85,
    "char_count": 321,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0127",
    "content": "bizMOBCore.Module.gateway(tr, this.servicename , action );\n};\n\n/**\n *\n * 01.클래스 설명 : Push 기능 클래스\n * 02.제품구분 : bizMOB Core\n * 03.기능(콤퍼넌트) 명 : bizPush Server Open API연동 본 기능\n * 04.관련 API/화면/서비스 : bizMOBCore.Module.checkparam,bizMOBCore.Push.getAlarm,bizMOBCore.Push.getMessageList,bizMOBCore.Push.getPushKey,bizMOBCore.Push.getUnreadCount,bizMOBCore.Push.readMessage,bizMOBCore.Push.registerToServer,bizMOBCore.Push.sendMessage,bizMOBCore.Push.setAlarm,bizMOBCore.Push.setBadgeCount\n *\n * @author 김승현\n * @version 1.0\n *\n */\nbizMOBCore.PushManager = new Object();",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 127,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 156,
    "char_count": 560,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0128",
    "content": "bizMOBCore.PushManager.servicename = 'PushManager';\nbizMOBCore.PushManager.config = {\n _oPushPath: {\n REGISTER: '/v150/push'\n },\n _sPushUrl: '', // Push 서버 URL\n};\n\nbizMOBCore.PushManager.userCallback = {};\n\n/**\n * 푸시 기본 저장 정보 초기화\n *\n * @param\n *\n * @return\n */\nbizMOBCore.PushManager.reset = function() {\n bizMOBCore.Properties.remove({\n '_sKey' : 'STORED_PUSHKEY'\n });\n bizMOBCore.Properties.remove({\n '_sKey' : 'STORED_PUSH_USERID'\n });\n bizMOBCore.Properties.remove({\n '_sKey' : 'IS_REGISTRATION'\n });\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 128,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 139,
    "char_count": 507,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0129",
    "content": "/**\n * 푸시 정보 등록 여부 체크\n *\n * @param\n *\n * @return Boolean isRegistration 등록 여부(true 또는 false )\n */\nbizMOBCore.PushManager.isRegistration = function() {\n // 앱 최초 실행 시, push서버에 register되었는지 확인(Properties)\n var isRegistration = bizMOBCore.Properties.get({\n '_sKey' : 'IS_REGISTRATION'\n }) ? true : false;\n\n return isRegistration;\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 129,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 94,
    "char_count": 328,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0130",
    "content": "return isRegistration;\n};\n\n/**\n * 푸시 키 일치 여부 확인\n *\n * @param\n *\n * @return Boolean result 일치 여부(true 또는 false )\n */\nbizMOBCore.PushManager.checkValidPushKey = function() {\n // 네이티브 device에 등록된 push_key랑 property에 있는 push_key일치 여부\n var deviceInfoPushKey = bizMOBCore.DeviceManager.getInfo({\n '_sKey' : 'push_key'\n });\n var storedPushKey = bizMOBCore.Properties.get({\n '_sKey' : 'STORED_PUSHKEY'\n });\n var result = false;\n\n // deviceInfoPushKey = bizMOBCore.PushManager.config._sPushUrl + \":\" + deviceInfoPushKey;",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 130,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 142,
    "char_count": 511,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0131",
    "content": "if(bizMOBCore.DeviceManager.isAndroid()) {\n if(typeof deviceInfoPushKey == 'string') {\n if(deviceInfoPushKey.trim().length > 0) {\n if(deviceInfoPushKey == storedPushKey) result = true;\n }\n }\n } else {\n if(deviceInfoPushKey == storedPushKey) result = true;\n }\n\n return result;\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 131,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 73,
    "char_count": 278,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0132",
    "content": "return result;\n};\n\n/**\n * 푸시 사용 유저 정보 조회\n *\n * @param String userId 비교할 유저ID\n *\n *\n * @return Boolean result 일치 여부(true 또는 false )\n */\nbizMOBCore.PushManager.checkValidPushUserId = function(userId) {\n // 1인 1디바이스가 아니라 한 어플리케이션에 로그아웃 후 다른 사용자로 로그인 시 userid가 등록되어 있는지 확인\n var storedPushUserId = bizMOBCore.Properties.get({\n '_sKey' : 'STORED_PUSH_USERID'\n });\n var result = false;\n\n if(storedPushUserId != undefined) {\n if(storedPushUserId.toString().trim().length > 0) {\n if(storedPushUserId == userId) {\n result = true;\n }\n }\n }\n\n return result;\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 132,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 160,
    "char_count": 548,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0133",
    "content": "return result;\n};\n\n/**\n * 푸시키 저장\n *\n * @param String pushKey 저장할 pushKey\n *\n * @return\n */\nbizMOBCore.PushManager.setStoredPushKey = function(pushKey) {\n // bizMOB App에 push_key setting용도\n var storedPushKey = bizMOBCore.Properties.get({\n '_sKey' : 'STORED_PUSHKEY'\n });\n\n // pushKey = bizMOBCore.PushManager.config._sPushUrl + \":\" + pushKey;\n\n if(storedPushKey != pushKey) {\n bizMOBCore.Properties.set({\n '_sKey' : 'STORED_PUSHKEY',\n '_vValue' : pushKey\n });\n }\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 133,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 127,
    "char_count": 464,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0134",
    "content": "/**\n * 푸시 사용 유저 정보 저장\n *\n * @param String userId 저장할 유저ID\n *\n * @return\n */\nbizMOBCore.PushManager.setStoredPushUserId = function(userId) {\n // bizMOB App에 pushUserID 저장 용도\n var storedPushUserId = bizMOBCore.Properties.get({\n '_sKey' : 'STORED_PUSH_USERID'\n });\n\n if(storedPushUserId != userId) {\n bizMOBCore.Properties.set({\n '_sKey' : 'STORED_PUSH_USERID',\n '_vValue' : userId\n });\n }\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 134,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 109,
    "char_count": 389,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0135",
    "content": "/**\n * 푸시키 정보 조회\n *\n * @param Function _fCallback 결과를 받아 처리할 callback 함수.\n * @param Boolean _bProgressEnable (default:true) 푸시 서버와 통신 중일때 화면에 progress 를 표시할지에 대한 여부( true 또는 false )\n *\n * @return\n */\nbizMOBCore.PushManager.getPushKey = function() {\n // bizMOB push server로 부터 push key get\n var action = 'getPushKey';\n var callback = bizMOBCore.CallbackManager.save(this.resGetPushKey);\n var userCallback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n var progressEnable = arguments[0]._bProgressEnable === false ? false : true;\n\n this.userCallback[action] = userCallback;",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 135,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 165,
    "char_count": 585,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0136",
    "content": "this.userCallback[action] = userCallback;\n\n var tr = {\n id : 'GET_PUSHKEY',\n param : {\n callback : callback,\n read_timeout : 10*1000,\n progress : progressEnable\n }\n };\n\n if(!this.checkValidPushKey()) {\n bizMOBCore.Properties.remove({\n '_sKey' : 'IS_REGISTRATION'\n });\n bizMOBCore.Module.gateway(tr, this.servicename, action);\n } else {\n var returnValue = {\n 'result' : true,\n 'resultCode' : '0000',\n 'resultMessage' : bizMOBCore.DeviceManager.getInfo({\n '_sKey' : 'push_key'\n })\n };\n\n this.resGetPushKey(returnValue);\n }\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 136,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 139,
    "char_count": 523,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0137",
    "content": "this.resGetPushKey(returnValue);\n }\n};\n\n/**\n * 푸시키 정보 결과처리 Callback 함수\n *\n * @param Object res bizMOB App에서 전달받은 푸시키 정보 Data Object.\n * *\n * @return\n */\nbizMOBCore.PushManager.resGetPushKey = function(res) {\n // push key get 후 response callback\n if(res.result) {\n bizMOBCore.PushManager.setStoredPushKey(res.resultMessage);\n bizMOBCore.DeviceManager.setInfo({ _sKey: 'push_key', _sValue: res.resultMessage });\n } else {\n bizMOBCore.Module.logger(this.servicename, 'getPushKey' ,'D', res.resultMessage);\n }",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 137,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 139,
    "char_count": 505,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0138",
    "content": "/**\n * 푸시서버에 사용자 정보 등록\n *\n * @param String _sServerType 푸시키를 등록할 서버 타입.( bizpush 또는 push )\n * @param String_sUserId 푸시키를 등록할 사용자 아이디.\n * @param String _sAppName 푸시키를 등록할 앱 이름.\n * @param Function _fCallback 결과를 받아 처리할 callback 함수.\n * @param Boolean _bProgressEnable (default:true) 푸시 서버와 통신 중일때 화면에 progress 를 표시할지에 대한 여부( true 또는 false )\n *\n * @return\n */\nbizMOBCore.PushManager.registerToServer = function(arg) {\n // 서버에 register용도\n if (!bizMOBCore.DeviceManager.isApp()) {\n bizMOBCore.Module.logger(this.servicename, action, 'D', 'This function doesn\\'t support in browser');\n arg._fCallback();",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 138,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 177,
    "char_count": 596,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0139",
    "content": "var action = 'registerToServer';\n var callback = {};\n var userCallback = bizMOBCore.CallbackManager.save(arg._fCallback);\n var userId = arg._sUserId;\n var progressEnable = arg._bProgressEnable === false ? false : true;\n var pushKey = bizMOBCore.DeviceManager.getInfo({\n '_sKey' : 'push_key'\n });\n\n this.userCallback[action] = userCallback;\n\n callback = function(res) {\n bizMOBCore.PushManager.resRegistration(res, userId, pushKey);\n };",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 139,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 115,
    "char_count": 435,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0140",
    "content": "var tr = {\n id : 'PUSH_REGISTRATION',\n param : {\n type : arg._sServerType,\n push_key : pushKey,\n user_id : userId,\n app_name : arg._sAppName,\n callback : bizMOBCore.CallbackManager.save(callback),\n read_timeout : 10*1000,\n progress : progressEnable\n }\n };\n\n if(this.checkValidPushUserId(userId) && this.checkValidPushKey()){\n var resultValue = {\n 'result' : true,\n 'resultCode' : '0000',\n 'resultMessage' : '성공',\n 'body' : null\n };\n\n this.resRegistration(resultValue, userId, pushKey);\n }else{\n bizMOBCore.PushManager.reset();\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n }\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 140,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 157,
    "char_count": 592,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0141",
    "content": "/**\n * 푸시서버에 사용자 정보 등록 결과 처리 함\n *\n * @param Object res bizMOB App에서 전달받은 등록 처리 결과 정보 Data\n * @param String_sUserId 등록한 사용자 아이디.\n *\n * @return\n */\nbizMOBCore.PushManager.resRegistration = function(res, userId, pushKey) {\n // 서버 register 후 response callback\n if(res.result) {\n bizMOBCore.Properties.set({\n '_sKey' : 'IS_REGISTRATION',\n '_vValue' : true\n });\n\n bizMOBCore.PushManager.setStoredPushUserId(userId);\n bizMOBCore.PushManager.setStoredPushKey(pushKey);\n } else {\n bizMOBCore.Module.logger(this.servicename, 'registerToServer' ,'D', res.resultMessage);\n }",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 141,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 159,
    "char_count": 562,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0142",
    "content": "bizMOBCore.CallbackManager.responser({\n 'callback' : bizMOBCore.PushManager.userCallback['registerToServer']\n }, {\n 'message' : res\n });\n};\n\n/**\n * 푸시 알람 수신여부 설정\n *\n * @param String _sUserId 푸시 알림 설정을 등록할 사용자 이이디.\n * @param Boolean _bEnabled (Default : true) 알람 수신 여부 설정 ( true 또는 false )\n * @param Boolean _bProgressEnable (Default:true) 푸시 알람 설정 요청시 화면에 progress 표시 여부( true 또는 false )\n * @param Function _fCallback 결과를 받아 처리할 callback 함수.\n *\n * @return\n */\nbizMOBCore.PushManager.setAlarm = function() {\n var action = 'setAlarm';",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 142,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 155,
    "char_count": 532,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0143",
    "content": "// bizMOB push on/off기능: 사용자 앱 별 on/off(GCM, APNS는 디바이스 별 on/off)\n var params = Object.assign({}, {\n '_sPushKey' : bizMOBCore.DeviceManager.getInfo({\n '_sKey' : 'push_key'\n }),\n '_bEnabled' : true\n }, arguments[0]);\n var callback = bizMOBCore.CallbackManager.save(params._fCallback);\n var progressEnable = params._bProgressEnable === false ? false : true;\n\n var tr = {\n id : 'PUSH_UPDATE_ALARM_SETTING',\n param : {\n user_id : params._sUserId,\n push_key : params._sPushKey,\n enabled : params._bEnabled,\n callback : callback,\n read_timeout : 10*1000,\n progress : progressEnable\n }\n };",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 143,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 158,
    "char_count": 582,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0144",
    "content": "/**\n * 푸시 알람 수신여부 조회\n *\n * @param String _sUserId 푸시 알림 설정을 조회할 사용자 이이디.\n * @param Boolean _bProgressEnable (Default:true) 푸시 알람 설정 요청시 화면에 progress 표시 여부( true 또는 false )\n * @param Function _fCallback 결과를 받아 처리할 callback 함수.\n *\n * @return\n */\nbizMOBCore.PushManager.getAlarm = function() {\n var action = 'getAlarm';\n // 앱 종료후 재 시작시에 화면에 설정 여부를 표시하기 서버에 설정된 값을 조회\n var params = Object.assign({}, {\n '_sPushKey' : bizMOBCore.DeviceManager.getInfo({\n '_sKey' : 'push_key'\n }),\n }, arguments[0]);\n var callback = bizMOBCore.CallbackManager.save(params._fCallback);",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 144,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 169,
    "char_count": 561,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0145",
    "content": "var tr = {\n id : 'PUSH_ALARM_SETTING_INFO',\n param : {\n user_id : params._sUserId,\n push_key : params._sPushKey,\n callback : callback,\n read_timeout : 10*1000,\n progress : progressEnable\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 145,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 68,
    "char_count": 257,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0146",
    "content": "/**\n * 푸시 수신 목록 조회\n *\n * @param String _sAppName 푸시 서버에 등록된 앱 이름.\n * @param String _sUserId 푸시 메세지를 조회할 사용자 이이디.\n * @param Number _nPageIndex 푸시 메세지를 가져올 페이징 값.\n * @param Number _nItemCount 푸시 메세지를 가져올 페이징 처리 갯수\n * @param Boolean _bProgressEnable (default:true) 푸시 서버와 통신 중일때 화면에 progress 를 표시할지에 대한 여부( true 또는 false )\n * @param Function _fCallback 결과를 받아 처리할 callback 함수.\n *\n * @return\n */\nbizMOBCore.PushManager.getMessageList = function() {\n var action = 'getMessageList';\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 146,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 167,
    "char_count": 550,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0147",
    "content": "var tr = {\n id : 'PUSH_GET_MESSAGES',\n param : {\n app_name : arguments[0]._sAppName,\n page_index : arguments[0]._nPageIndex,\n item_count : arguments[0]._nItemCount,\n user_id : arguments[0]._sUserId,\n callback : callback,\n read_timeout : 10*1000,\n progress : progressEnable\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 147,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 92,
    "char_count": 343,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0148",
    "content": "/**\n * 푸시 메세지 읽기\n *\n * @param String _sTrxDay 푸시 메세지를 읽은 날짜.(yyyymmdd)\n * @param String _sTrxId 푸시 메세지 아이디.\n * @param String _sUserId 사용자 아이디.\n * @param Boolean _bProgressEnable (Default:true) 푸시 알람 설정 요청시 화면에 progress 표시 여부( true 또는 false )\n * @param Function _fCallback 결과를 받아 처리할 callback 함수.\n *\n * @return\n */\nbizMOBCore.PushManager.readMessage = function() {\n var action = 'read';\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n var progressEnable = arguments[0]._bProgressEnable === false ? false : true;",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 148,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 156,
    "char_count": 537,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0149",
    "content": "var tr = {\n id : 'PUSH_MARK_AS_READ',\n param : {\n trx_day : arguments[0]._sTrxDay,\n trx_id : arguments[0]._sTrxId,\n user_id : arguments[0]._sUserId,\n read : true,\n callback : callback,\n read_timeout : 10*1000,\n progress : progressEnable\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 149,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 82,
    "char_count": 307,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0150",
    "content": "/**\n * 읽지 않은 푸시 메세지 카운트 조회\n *\n * @param String _sAppName 푸시 서버에 등록된 앱 이름.\n * @param String _sUserId 푸시 메세지를 조회할 사용자 이이디.\n * @param Boolean _bProgressEnable (Default:true) 푸시 알람 설정 요청시 화면에 progress 표시 여부( true 또는 false )\n * @param Function _fCallback 결과를 받아 처리할 callback 함수.\n *\n * @return\n */\nbizMOBCore.PushManager.getUnreadMessageCount = function() {\n var action = 'getUnreadMessageCount';\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n var progressEnable = arguments[0]._bProgressEnable === false ? false : true;",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 150,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 159,
    "char_count": 542,
    "created_at": "2025-08-01T15:32:19.853Z"
  },
  {
    "id": "5d01cb46_0151",
    "content": "var tr = {\n id : 'PUSH_GET_UNREAD_PUSH_MESSAGE_COUNT',\n param : {\n app_name : arguments[0]._sAppName,\n user_id : arguments[0]._sUserId,\n callback : callback,\n read_timeout : 10*1000,\n progress : progressEnable\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 151,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 75,
    "char_count": 280,
    "created_at": "2025-08-01T15:32:19.854Z"
  },
  {
    "id": "5d01cb46_0152",
    "content": "bizMOBCore.Module.gateway(tr, this.servicename , action );\n};\n\n/**\n * 앱 아이콘에 숫자 표시하기\n *\n * @param Number _nBadgeCount 뱃지에 표시할 값 .( 양수 : 표시할 갯수 , 0 : 뱃지카운트 초기화 )\n * @param Function _fCallback 결과를 받아 처리할 callback 함수.\n *\n * @return\n */\nbizMOBCore.PushManager.setBadgeCount = function() {\n var action = 'setBadgeCount';\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n\n var tr = {\n id : 'SET_BADGE_COUNT',\n param : {\n badge_count : arguments[0]._nBadgeCount,\n callback : callback\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 152,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 162,
    "char_count": 572,
    "created_at": "2025-08-01T15:32:19.854Z"
  },
  {
    "id": "5d01cb46_0153",
    "content": "/**\n * 푸시 메세지 발송\n *\n * @param String _sAppName 푸시 메세지 보낼 앱 이름.\n * @param Array _aUsers 푸시 메세지 받을 사용자 목록.\n * @param String _sFromUser 푸시 메세지를 보낼 사용자 아이디.\n * @param String _sSubject 푸시 메세지 제목.\n * @param String _sContent 푸시 메세지 내용.\n * @param String _sTrxType (Default : INSTANT) 푸시 메세지 전송 방식.( INSTANT 또는 SCHEDULE )\n * @param String _sScheduleDate 푸시 메세지 전송 날짜.\n * @param Array _aGroups 푸시 메세지를 받을 그룹 목록\n * @param Boolean _bToAll (Default : false) 해당 앱을 사용하는 전체 사용자에게 푸시 메세지를 발송할지 여부.\n * @param String _sCategory (Default : def) 푸시 메세지 카테고리.\n * @param Object _oPayLoad 푸시 기폰 용량 초과시 전달할 메세지.",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 153,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 187,
    "char_count": 587,
    "created_at": "2025-08-01T15:32:19.854Z"
  },
  {
    "id": "5d01cb46_0154",
    "content": "* @param Object _oPayLoad 푸시 기폰 용량 초과시 전달할 메세지.\n * @param Boolean _bProgressEnable (Default:true) 푸시 알람 설정 요청시 화면에 progress 표시 여부( true 또는 false )\n * @param Function _fCallback 결과를 받아 처리할 callback 함수.\n *\n * @return\n */\nbizMOBCore.PushManager.sendMessage = function() {\n var action = 'sendMessage';\n var params = Object.assign({}, {\n // 예약발송/SCHEDULE or 즉시발송/INSTANT\n _sTrxType : 'INSTANT',\n _sScheduleDate : '',\n // bizPush에 있는 group ID\n _aGroups : [],\n _bToAll : false,\n _sCategory : 'def',\n // 대량 Push 메시지\n _oPayLoad : {}\n }, arguments[0]);",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 154,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 158,
    "char_count": 542,
    "created_at": "2025-08-01T15:32:19.854Z"
  },
  {
    "id": "5d01cb46_0155",
    "content": "_sCategory : 'def',\n // 대량 Push 메시지\n _oPayLoad : {}\n }, arguments[0]);\n var callback = bizMOBCore.CallbackManager.save(params._fCallback);\n var progressEnable = params._bProgressEnable === false ? false : true;",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 155,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 58,
    "char_count": 210,
    "created_at": "2025-08-01T15:32:19.854Z"
  },
  {
    "id": "5d01cb46_0156",
    "content": "var tr = {\n id : 'SEND_PUSH_MESSAGE',\n param : {\n trx_type : params._sTrxType,\n app_name : params._sAppName,\n schedule_date : params._sScheduleDate,\n to_users : params._aUsers,\n to_groups : params._aGroups,\n to_all : params._bToAll,\n from_user : params._sFromUser,\n message_subject : params._sSubject,\n message_content : params._sContent,\n message_category : params._sCategory,\n message_payload : params._oPayLoad,\n callback : callback,\n read_timeout : 10*1000,\n progress : progressEnable\n }\n\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 156,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 148,
    "char_count": 560,
    "created_at": "2025-08-01T15:32:19.854Z"
  },
  {
    "id": "5d01cb46_0157",
    "content": "};\n\n bizMOBCore.Module.gateway(tr, this.servicename , action );\n};\n\n/**\n * 대용량 푸시 메세지 읽기\n *\n * @param String _sMessageId 푸시 메세지 아이디.\n * @param String _sUserId 사용자 아이디.\n * @param Function _fCallback 결과를 받아 처리할 callback 함수.\n *\n * @return\n */\nbizMOBCore.PushManager.readReceiptMessage = function() {\n var action = 'readReceiptMessage';\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n\n var tr = {\n id : 'CHECK_PUSH_RECEIVED',\n param : {\n callback : callback,\n user_id : arguments[0]._sUserId,\n message_id : arguments[0]._sMessageId\n }\n };",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 157,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 157,
    "char_count": 561,
    "created_at": "2025-08-01T15:32:19.854Z"
  },
  {
    "id": "5d01cb46_0158",
    "content": "bizMOBCore.Module.gateway(tr, this.servicename , action );\n};\n\n/**\n *\n * 01.클래스 설명 : Database 기능 클래스\n * 02.제품구분 : bizMOB Core\n * 03.기능(콤퍼넌트) 명 : 컨테이너 SQLite DB 사용 기능\n *\n * @author 김승현\n * @version 1.0\n *\n */\nbizMOBCore.Database = new Object();\n\nbizMOBCore.Database.servicename = 'Database';\nbizMOBCore.Database.config = {};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 158,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 93,
    "char_count": 322,
    "created_at": "2025-08-01T15:32:19.854Z"
  },
  {
    "id": "5d01cb46_0159",
    "content": "bizMOBCore.Database.servicename = 'Database';\nbizMOBCore.Database.config = {};\n\n/**\n * DataBase Open\n *\n * @param String _sDbName 오픈할 데이터베이스 명.\n * @param Function _fCallback 결과를 받아 처리할 callback 함수.\n *\n * @return\n */\nbizMOBCore.Database.openDatabase = function() {\n var action = 'openDatabase';\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n var dbName = arguments[0]._sDbName;\n\n var tr = {\n id : 'OPEN_DATABASE',\n param : {\n db_name : dbName,\n callback : callback\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename, action);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 159,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 153,
    "char_count": 560,
    "created_at": "2025-08-01T15:32:19.854Z"
  },
  {
    "id": "5d01cb46_0160",
    "content": "bizMOBCore.Module.gateway(tr, this.servicename, action);\n};\n\n/**\n * DataBase Close\n *\n * @param Function _fCallback 결과를 받아 처리할 callback 함수.\n *\n * @return\n */\nbizMOBCore.Database.closeDatabase = function() {\n var action = 'closeDatabase';\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n\n var tr = {\n id : 'CLOSE_DATABASE',\n param : {\n callback : callback\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename, action);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 160,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 121,
    "char_count": 449,
    "created_at": "2025-08-01T15:32:19.854Z"
  },
  {
    "id": "5d01cb46_0161",
    "content": "bizMOBCore.Module.gateway(tr, this.servicename, action);\n};\n\n/**\n * DataBase Transaction 시작\n *\n * @param Function _fCallback 결과를 받아 처리할 callback 함수.\n *\n * @return\n */\nbizMOBCore.Database.beginTransaction = function() {\n var action = 'beginTransaction';\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n\n var tr = {\n id : 'BEGIN_TRANSACTION',\n param : {\n callback : callback\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename, action);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 161,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 126,
    "char_count": 467,
    "created_at": "2025-08-01T15:32:19.854Z"
  },
  {
    "id": "5d01cb46_0162",
    "content": "bizMOBCore.Module.gateway(tr, this.servicename, action);\n};\n\n/**\n * DataBase Transaction Commit\n *\n * @param Function _fCallback 결과를 받아 처리할 callback 함수.\n *\n * @return\n */\nbizMOBCore.Database.commitTransaction = function() {\n var action = 'commitTransaction';\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n\n var tr = {\n id : 'COMMIT_TRANSACTION',\n param : {\n callback : callback\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename, action);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 162,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 128,
    "char_count": 474,
    "created_at": "2025-08-01T15:32:19.854Z"
  },
  {
    "id": "5d01cb46_0163",
    "content": "bizMOBCore.Module.gateway(tr, this.servicename, action);\n};\n\n/**\n * DataBase Transaction Rollback\n *\n * @param Function _fCallback 결과를 받아 처리할 callback 함수.\n *\n * @return\n */\nbizMOBCore.Database.rollbackTransaction = function() {\n var action = 'rollbackTransaction';\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n\n var tr = {\n id : 'ROLLBACK_TRANSACTION',\n param : {\n callback : callback\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename, action);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 163,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 130,
    "char_count": 482,
    "created_at": "2025-08-01T15:32:19.854Z"
  },
  {
    "id": "5d01cb46_0164",
    "content": "bizMOBCore.Module.gateway(tr, this.servicename, action);\n};\n\n/**\n * SQL쿼리문을 실행\n *\n * @param String _sQuery 실행할 SQL SELECT 쿼리문.\n * @param Array _aBindingValues 쿼리문의 각 변수 위치에 대입해줄 값의 배열.\n * @param Function _fCallback SQL쿼리문 실행 요청 후 호출되는 callback 함수.\n *\n * @return\n */\nbizMOBCore.Database.executeSql = function() {\n var action = 'executeSql';\n var query = arguments[0]._sQuery;\n var bidingValues = arguments[0]._aBindingValues ? arguments[0]._aBindingValues:[];\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 164,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 150,
    "char_count": 532,
    "created_at": "2025-08-01T15:32:19.854Z"
  },
  {
    "id": "5d01cb46_0165",
    "content": "bizMOBCore.Module.gateway(tr, this.servicename, action);\n};\n\n/**\n * SELECT SQL쿼리문을 실행\n *\n * @param String _sQuery 실행할 SQL SELECT 쿼리문.\n * @param Array _aBindingValues 쿼리문의 각 변수 위치에 대입해줄 값의 배열.\n * @param Function _fCallback SQL쿼리문 실행 요청 후 호출되는 callback 함수.\n *\n * @return\n */\nbizMOBCore.Database.executeSelect = function() {\n var action = 'executeSelect';\n var query = arguments[0]._sQuery;\n var bidingValues = arguments[0]._aBindingValues ? arguments[0]._aBindingValues:[];\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 165,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 154,
    "char_count": 545,
    "created_at": "2025-08-01T15:32:19.854Z"
  },
  {
    "id": "5d01cb46_0166",
    "content": "bizMOBCore.Module.gateway(tr, this.servicename, action);\n};\n\n/**\n * SQL쿼리문을 일괄 실행\n *\n * @param String _sQuery 실행할 SQL SELECT 쿼리문.\n * @param Array _aBindingValues 쿼리문의 각 변수 위치에 대입해줄 값의 배열.\n * @param Function _fCallback SQL쿼리문 실행 요청 후 호출되는 callback 함수.\n *\n * @return\n */\nbizMOBCore.Database.executeBatchSql = function() {\n // batch: 특정 query에 대해 반복할 때 사용\n var action = 'executeBatchSql';\n var query = arguments[0]._sQuery;\n var bidingValues = arguments[0]._aBindingValues ? arguments[0]._aBindingValues:[];\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 166,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 166,
    "char_count": 578,
    "created_at": "2025-08-01T15:32:19.854Z"
  },
  {
    "id": "5d01cb46_0167",
    "content": "var tr = {\n id : 'EXECUTE_BATCH_SQL',\n param : {\n query : query,\n bind_array : bidingValues,\n callback : callback\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename, action);\n};\n\n/**\n *\n * 01.클래스 설명 : Http 기능 클래스\n * 02.제품구분 : bizMOB Core\n * 03.기능(콤퍼넌트) 명 : bizMOB Http Client 관련 기능\n *\n * @author 김승현\n * @version 1.0\n *\n */\nbizMOBCore.Localization = new Object();\n\nbizMOBCore.Localization.servicename = 'Localization';\nbizMOBCore.Localization.config = {};\n\n// 현재 언어 값\nbizMOBCore.Localization.locale = '';",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 167,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 143,
    "char_count": 508,
    "created_at": "2025-08-01T15:32:19.854Z"
  },
  {
    "id": "5d01cb46_0168",
    "content": "// 현재 언어 값\nbizMOBCore.Localization.locale = '';\n\n// 언어 코드로 (언어코드)-(국가코드) 형태의 full locale 코드 반환\nbizMOBCore.Localization.getFullLocale = function(localeCode) {\n // 사용자 언어 목록에서 언어 코드(ko, ...)에 대응되는 full locale(ko-KR, ...) 코드\n var fullLocale = navigator.languages.find(function(lang) {\n return lang.toLowerCase().startsWith(localeCode.toLowerCase() + '-');\n });\n // 미리 지정한 언어 목록에서 언어 코드에 대응되는 preset locale 코드\n var presetLocale = window.bizMOBLocale[localeCode.toLowerCase()];",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 168,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 142,
    "char_count": 472,
    "created_at": "2025-08-01T15:32:19.854Z"
  },
  {
    "id": "5d01cb46_0169",
    "content": "// 전달받은 언어 코드가 full locale(ko-KR)값이라면 그대로 전달\n if (localeCode.indexOf('-') > 0) {\n bizMOBCore.Module.logger(this.serviceName, 'getFullLocale', 'L', 'Gets the full locale value: (parameter) ' + localeCode);\n return localeCode;\n }\n // 전달받은 언어 코드가 'ko' 형식이고, navigator.languages 목록에서 'ko-KR' 형식이 있다면 찾은 값 전달\n else if (fullLocale) {\n bizMOBCore.Module.logger(this.serviceName, 'getFullLocale', 'L', 'Gets the full locale value: (navigator) ' + fullLocale);\n return fullLocale;\n }\n // 전달받은 언어 코드가 'ko' 형식이고, 프리셋에 있다면 프리셋 언어코드를 전달\n else if (presetLocale) {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 169,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 163,
    "char_count": 549,
    "created_at": "2025-08-01T15:32:19.854Z"
  },
  {
    "id": "5d01cb46_0170",
    "content": "}\n // 전달받은 언어 코드가 'ko' 형식이고, 프리셋에 있다면 프리셋 언어코드를 전달\n else if (presetLocale) {\n bizMOBCore.Module.logger(this.serviceName, 'getFullLocale', 'L', 'Gets the full locale value: (preset) ' + presetLocale);\n return presetLocale;\n }\n // 전달받은 언어 코드가 navigator, 프리셋에 전부 없다면 전달받은 값 그대로 전달 (ko)\n else {\n bizMOBCore.Module.logger(this.serviceName, 'getFullLocale', 'L', 'Gets the full locale value: (unknown) ' + presetLocale);\n return localeCode;\n }\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 170,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 130,
    "char_count": 440,
    "created_at": "2025-08-01T15:32:19.854Z"
  },
  {
    "id": "5d01cb46_0171",
    "content": "// 설정된 (언어)-(국가) 코드 조회\nbizMOBCore.Localization.getLocale = function() {\n var action = 'getlocale';\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n\n var tr = {\n id : 'LOCALE',\n param : {\n type : 'get',\n callback : callback\n }\n };\n\n bizMOBCore.Module.gateway(tr, this.servicename, action);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 171,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 88,
    "char_count": 317,
    "created_at": "2025-08-01T15:32:19.854Z"
  },
  {
    "id": "5d01cb46_0172",
    "content": "bizMOBCore.Module.gateway(tr, this.servicename, action);\n};\n\n// 언어코드에 맞는 (언어)-(국가) 코드 저장\nbizMOBCore.Localization.setLocale = function(arg) {\n var action = 'setlocale';\n // 언어 코드 (ko, ko-KR, en, en-US, ...)\n var localeCode = arg._sLocaleCd;\n // full locale 값 조회\n var fullLocale = bizMOBCore.Localization.getFullLocale(localeCode);\n var callback = bizMOBCore.CallbackManager.save(arguments[0]._fCallback);\n\n var tr = {\n id : 'LOCALE',\n param : {\n type : 'set',\n locale : fullLocale,\n callback : callback\n }\n };",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-core.js",
      "file_name": "bizMOB-core.js",
      "file_type": "js",
      "chunk_index": 172,
      "total_chunks": 173,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 10348,
        "parsed_at": "2025-08-01T07:01:18.407330"
      },
      "position": {}
    },
    "tokens": 140,
    "char_count": 508,
    "created_at": "2025-08-01T15:32:19.854Z"
  },
  {
    "id": "e34e2be7_0000",
    "content": "var bizMOBLocale = {\n 'af': 'af-ZA', // 아프리칸스어 (남아프리카)\n 'ar': 'ar-SA', // 아랍어 (사우디아라비아)\n 'az': 'az-AZ', // 아제르바이잔어 (아제르바이잔)\n 'be': 'be-BY', // 벨라루스어 (벨라루스)\n 'bg': 'bg-BG', // 불가리아어 (불가리아)\n 'bn': 'bn-BD', // 벵골어 (방글라데시)\n 'bs': 'bs-BA', // 보스니아어 (보스니아 헤르체고비나)\n 'ca': 'ca-ES', // 카탈로니아어 (스페인)\n 'cs': 'cs-CZ', // 체코어 (체코)\n 'cy': 'cy-GB', // 웨일즈어 (영국)\n 'da': 'da-DK', // 덴마크어 (덴마크)\n 'de': 'de-DE', // 독일어 (독일)\n 'el': 'el-GR', // 그리스어 (그리스)\n 'en': 'en-US', // 영어 (미국)\n 'es': 'es-ES', // 스페인어 (스페인)\n 'et': 'et-EE', // 에스토니아어 (에스토니아)\n 'fa': 'fa-IR', // 페르시아어 (이란)\n 'fi': 'fi-FI', // 핀란드어 (핀란드)",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-locale.js",
      "file_name": "bizMOB-locale.js",
      "file_type": "js",
      "chunk_index": 0,
      "total_chunks": 5,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 403,
        "parsed_at": "2025-08-01T07:01:18.406160"
      },
      "position": {}
    },
    "tokens": 201,
    "char_count": 585,
    "created_at": "2025-08-01T15:32:19.860Z"
  },
  {
    "id": "e34e2be7_0001",
    "content": "'fa': 'fa-IR', // 페르시아어 (이란)\n 'fi': 'fi-FI', // 핀란드어 (핀란드)\n 'fj': 'fj-FJ', // 피지어 (피지)\n 'fo': 'fo-FO', // 페로어 (페로 제도)\n 'fr': 'fr-FR', // 프랑스어 (프랑스)\n 'ga': 'ga-IE', // 아일랜드어 (아일랜드)\n 'gd': 'gd-GB', // 스코틀랜드 게일어 (영국)\n 'gl': 'gl-ES', // 갈리시아어 (스페인)\n 'gu': 'gu-IN', // 구자라트어 (인도)\n 'he': 'he-IL', // 히브리어 (이스라엘)\n 'hi': 'hi-IN', // 힌디어 (인도)\n 'hr': 'hr-HR', // 크로아티아어 (크로아티아)\n 'hu': 'hu-HU', // 헝가리어 (헝가리)\n 'hy': 'hy-AM', // 아르메니아어 (아르메니아)\n 'id': 'id-ID', // 인도네시아어 (인도네시아)\n 'is': 'is-IS', // 아이슬란드어 (아이슬란드)\n 'it': 'it-IT', // 이탈리아어 (이탈리아)\n 'ja': 'ja-JP', // 일본어 (일본)\n 'ka': 'ka-GE', // 조지아어 (조지아)",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-locale.js",
      "file_name": "bizMOB-locale.js",
      "file_type": "js",
      "chunk_index": 1,
      "total_chunks": 5,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 403,
        "parsed_at": "2025-08-01T07:01:18.406160"
      },
      "position": {}
    },
    "tokens": 203,
    "char_count": 589,
    "created_at": "2025-08-01T15:32:19.860Z"
  },
  {
    "id": "e34e2be7_0002",
    "content": "'ja': 'ja-JP', // 일본어 (일본)\n 'ka': 'ka-GE', // 조지아어 (조지아)\n 'kk': 'kk-KZ', // 카자흐어 (카자흐스탄)\n 'kn': 'kn-IN', // 칸나다어 (인도)\n 'ko': 'ko-KR', // 한국어 (대한민국)\n 'ky': 'ky-KG', // 키르기스어 (키르기스스탄)\n 'lo': 'lo-LA', // 라오어 (라오스)\n 'lt': 'lt-LT', // 리투아니아어 (리투아니아)\n 'lv': 'lv-LV', // 라트비아어 (라트비아)\n 'mg': 'mg-MG', // 말라가시어 (마다가스카르)\n 'mi': 'mi-NZ', // 마오리어 (뉴질랜드)\n 'mk': 'mk-MK', // 마케도니아어 (마케도니아)\n 'ml': 'ml-IN', // 말라얄람어 (인도)\n 'mn': 'mn-MN', // 몽골어 (몽곌리아)\n 'mr': 'mr-IN', // 마라티어 (인도)\n 'ms': 'ms-MY', // 말레이어 (말레이시아)\n 'mt': 'mt-MT', // 몰타어 (몰타)\n 'ne': 'ne-NP', // 네팔어 (네팔)\n 'nl': 'nl-NL', // 네덜란드어 (네덜란드)",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-locale.js",
      "file_name": "bizMOB-locale.js",
      "file_type": "js",
      "chunk_index": 2,
      "total_chunks": 5,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 403,
        "parsed_at": "2025-08-01T07:01:18.406160"
      },
      "position": {}
    },
    "tokens": 202,
    "char_count": 584,
    "created_at": "2025-08-01T15:32:19.860Z"
  },
  {
    "id": "e34e2be7_0003",
    "content": "'ne': 'ne-NP', // 네팔어 (네팔)\n 'nl': 'nl-NL', // 네덜란드어 (네덜란드)\n 'no': 'no-NO', // 노르웨이어 (노르웨이)\n 'pa': 'pa-IN', // 펀잡어 (인도)\n 'pl': 'pl-PL', // 폴란드어 (폴란드)\n 'ps': 'ps-AF', // 파슈토어 (아프가니스탄)\n 'pt': 'pt-BR', // 포르투갈어 (브라질)\n 'ro': 'ro-RO', // 루마니아어 (루마니아)\n 'ru': 'ru-RU', // 러시아어 (러시아)\n 'si': 'si-LK', // 싱할라어 (스리랑카)\n 'sk': 'sk-SK', // 슬로바키아어 (슬로바키아)\n 'sl': 'sl-SI', // 슬로베니아어 (슬로베니아)\n 'sm': 'sm-WS', // 사모아어 (사모아)\n 'sq': 'sq-AL', // 알바니아어 (알바니아)\n 'sr': 'sr-RS', // 세르비아어 (세르비아)\n 'sv': 'sv-SE', // 스웨덴어 (스웨덴)\n 'sw': 'sw-KE', // 스와힐리어 (케냐)\n 'ta': 'ta-IN', // 타밀어 (인도)\n 'te': 'te-IN', // 텔루구어 (인도)",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-locale.js",
      "file_name": "bizMOB-locale.js",
      "file_type": "js",
      "chunk_index": 3,
      "total_chunks": 5,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 403,
        "parsed_at": "2025-08-01T07:01:18.406160"
      },
      "position": {}
    },
    "tokens": 202,
    "char_count": 584,
    "created_at": "2025-08-01T15:32:19.860Z"
  },
  {
    "id": "e34e2be7_0004",
    "content": "'ta': 'ta-IN', // 타밀어 (인도)\n 'te': 'te-IN', // 텔루구어 (인도)\n 'th': 'th-TH', // 태국어 (태국)\n 'tl': 'tl-PH', // 타갈로그어 (필리핀)\n 'to': 'to-TO', // 통가어 (통가)\n 'tr': 'tr-TR', // 터키어 (터키)\n 'uk': 'uk-UA', // 우크라이나어 (우크라이나)\n 'ur': 'ur-PK', // 우르두어 (파키스탄)\n 'vi': 'vi-VN', // 베트남어 (베트남)\n 'xh': 'xh-ZA', // 코사어 (남아프리카)\n 'zh': 'zh-CN', // 중국어 (중국)\n 'zu': 'zu-ZA', // 줄루어 (남아프리카)\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-locale.js",
      "file_name": "bizMOB-locale.js",
      "file_type": "js",
      "chunk_index": 4,
      "total_chunks": 5,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 403,
        "parsed_at": "2025-08-01T07:01:18.406160"
      },
      "position": {}
    },
    "tokens": 122,
    "char_count": 358,
    "created_at": "2025-08-01T15:32:19.860Z"
  },
  {
    "id": "e38eec38_0000",
    "content": "/**\n * <제목>bizMOB Xross4.0 Javascript Library<제목>\n * <개요>bizMOB Front Framework인 xross는 Front화면 개발시 모바일 네이티브 앱에서 제공하는 플러그인 연동을 위한 JS api Libarary다.xross.js를 직접적으로 사용하는 환경은 bizMOB 3.x에서 주로 사용하고 bizMOB4.x 부터는 웹프레임워크를 연동하여 typescript 가반의 xross디렉토리 내에 있는 class들을 사용한다.</개요>\n *\n * @namespace bizMOB\n * @version 4.0.0\n * @author mobile C&C\n *\n * @example\n * // 기본 사용법 - 환경 감지 및 파일 복사 (JavaScript)\n * if (bizMOB.Device.isApp()) {\n * // 앱 환경에서만 사용 가능한 기능\n * bizMOB.File.copy({\n * _sSourcePath: '{external}/temp.png',\n * _sTargetPath: '{internal}/images/copy.png',\n * _fCallback: function(result) {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 0,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 185,
    "char_count": 589,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0001",
    "content": "* _fCallback: function(result) {\n * console.log('파일 복사 완료:', result);\n * }\n * });\n * } else {\n * // 웹 환경 처리\n * console.log('웹 환경에서는 파일 시스템 접근이 제한됩니다');\n * }\n *\n * @example\n * // TypeScript 래퍼 사용법 - Promise 기반 모던 API\n * import File from '@/bizMOB/Xross/File';\n * import Device from '@/bizMOB/Xross/Device';\n *\n * const copyFiles = async () => {\n * if (await Device.isApp()) {\n * try {\n * const result = await File.copy({\n * _sSourcePath: '{external}/temp.png',\n * _sTargetPath: '{internal}/images/copy.png',\n * _bMock: false\n * });\n * console.log('파일 복사 완료:', result);\n * } catch (error) {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 1,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 169,
    "char_count": 588,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0002",
    "content": "* });\n * console.log('파일 복사 완료:', result);\n * } catch (error) {\n * console.error('파일 복사 실패:', error);\n * }\n * }\n * };\n *\n * @example\n * // 서버 통신 JWT 토큰 자동 관리 (JavaScript)\n * bizMOB.Network.requestTr({\n * _sTrcode: 'USER001',\n * _oBody: { userId: 'test@example.com' },\n * _fCallback: function(response) {\n * if (response.header.result) {\n * console.log('사용자 정보:', response.body);\n * }\n * }\n * });\n *\n * @example\n * // 서버 통신 JWT 토큰 자동 관리 (TypeScript)\n * * import Network from '@/bizMOB/Xross/Network';\n *\n * const fetchUserData = async () => {\n * try {\n * const response = await Network.requestTr({",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 2,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 170,
    "char_count": 596,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0003",
    "content": "* try {\n * const response = await Network.requestTr({\n * _sTrcode: 'USER001',\n * _oBody: { userId: 'test@example.com' },\n * _bMock: false\n * });\n *\n * if (response.header.result) {\n * console.log('사용자 정보:', response.body);\n * return response.body;\n * }\n * } catch (error) {\n * console.error('서버 통신 오류:', error);\n * }\n * };\n *\n * @example\n * // 이벤트 처리 - 앱 생명주기 관리 (JavaScript)\n * bizMOB.setEvent('ready', function() {\n * console.log('bizMOB SDK 초기화 완료');\n * // 앱 초기화 로직\n * });\n *\n * bizMOB.setEvent('backbutton', function() {\n * console.log('뒤로가기 버튼 감지');\n * // 커스텀 뒤로가기 처리\n * });\n *\n * @example",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 3,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 173,
    "char_count": 594,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0004",
    "content": "* console.log('뒤로가기 버튼 감지');\n * // 커스텀 뒤로가기 처리\n * });\n *\n * @example\n * // TypeScript 래퍼 이벤트 처리 - Promise와 타입 안전성\n * import Event from '@/bizMOB/Xross/Event';\n * import { onMounted } from 'vue';\n *\n * onMounted(() => {\n * Event.setEvent('ready', () => {\n * console.log('bizMOB SDK 초기화 완료');\n * initializeApp();\n * });\n *\n * Event.setEvent('backbutton', () => {\n * console.log('뒤로가기 버튼 감지');\n * handleBackButton();\n * });\n * });\n */\nvar bizMOB = new Object();",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 4,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 136,
    "char_count": 458,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0005",
    "content": "/**\n * Fast Storage - 앱 환경에서 Properties 데이터의 빠른 접근을 위한 메모리 캐시\n *\n * @description 앱 환경에서 bizMOB.Properties의 성능을 향상시키기 위한 JavaScript 메모리 캐시입니다.\n * Properties.set() 호출 시 네이티브 저장소와 함께 이 FStorage에도 동시에 저장되어,\n * Properties.get() 호출 시 네이티브 요청 없이 즉시 메모리에서 값을 반환할 수 있습니다.\n *\n * **동작 원리:**\n * - Properties.set(): 네이티브 저장소 + FStorage 동시 저장\n * - Properties.get(): FStorage에서 먼저 확인, 없으면 null 반환\n * - Properties.remove(): 네이티브 저장소 + FStorage 동시 삭제\n * - **Resume 복원**: 앱 resume 시점에 기기에 저장된 fStorage 데이터가 자동으로 bizMOB.FStorage에 로드됨\n *\n * **라이프사이클:**\n * - 앱 시작: 네이티브에서 저장된 Properties 데이터를 FStorage로 복원",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 5,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 197,
    "char_count": 583,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0006",
    "content": "*\n * **라이프사이클:**\n * - 앱 시작: 네이티브에서 저장된 Properties 데이터를 FStorage로 복원\n * - 앱 사용: Properties API 호출 시 FStorage와 네이티브 저장소 동기화\n * - 앱 종료: FStorage 메모리 해제, 네이티브 저장소는 영구 보존\n * - 앱 재시작/Resume: 네이티브 저장소에서 FStorage로 데이터 재로드\n *\n * **주의사항:**\n * - 앱 환경에서만 사용되며, 웹 환경에서는 사용되지 않음\n * - 앱 종료 시 메모리에서 사라지므로 영구 저장은 네이티브 저장소에 의존\n * - 개발자가 직접 조작하지 말고 Properties API를 통해서만 사용\n *\n * @type {Object}\n * @example\n * // ❌ 직접 사용하지 마세요\n * // bizMOB.FStorage['myKey'] = 'myValue';\n *\n * // ✅ Properties API를 사용하세요\n * bizMOB.Properties.set({ _sKey: 'myKey', _vValue: 'myValue' });",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 6,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 188,
    "char_count": 549,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0007",
    "content": "/**\n * bizMOB Core 모듈의 설정 값을 설정하는 함수\n *\n * 앱/웹 환경에 따라 해당하는 Core 모듈의 config 객체에 설정 값을 병합합니다.\n * 환경별로 다른 Core 파일의 클래스 config를 관리하기 위한 통합 인터페이스입니다.\n *\n * @param {String} sTarget 대상 환경 구분 ('APP' 또는 'WEB')\n * - 'APP': bizMOBCore (앱 환경) 모듈의 config 설정\n * - 'WEB': bizMOBWebCore (웹 환경) 모듈의 config 설정\n * @param {String} sClassName 설정할 클래스명 (예: 'App', 'Network', 'Database' 등)\n * @param {Object} oParam 설정할 config 객체 (기존 config와 병합됨)\n *\n * @example\n * // 앱 환경의 Network 클래스 config 설정\n * bizMOB.setConfig('APP', 'Network', {\n * _sBaseUrl: 'https://api.example.com',\n * _bIsProxy: true\n * });\n *",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 7,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 185,
    "char_count": 582,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0008",
    "content": "* _sBaseUrl: 'https://api.example.com',\n * _bIsProxy: true\n * });\n *\n * // 웹 환경의 App 클래스 config 설정\n * bizMOB.setConfig('WEB', 'App', {\n * _bIsRelease: false,\n * _sAppKey: 'myAppKey123'\n * });\n */\nbizMOB.setConfig = function (sTarget, sClassName, oParam) {\n switch (sTarget) {\n case 'APP':\n window.bizMOBCore[sClassName].config = Object.assign({}, window.bizMOBCore[sClassName].config, oParam);\n break;",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 8,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 110,
    "char_count": 401,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0009",
    "content": "/**\n * bizMOB Core 모듈의 설정 값을 조회하는 함수\n *\n * 앱/웹 환경에 따라 해당하는 Core 모듈의 config 객체를 반환합니다.\n * 환경별로 다른 Core 파일의 클래스 config를 조회하기 위한 통합 인터페이스입니다.\n *\n * @param {String} sTarget 대상 환경 구분 ('APP' 또는 'WEB')\n * - 'APP': bizMOBCore (앱 환경) 모듈의 config 조회\n * - 'WEB': bizMOBWebCore (웹 환경) 모듈의 config 조회\n * @param {String} sClassName 조회할 클래스명 (예: 'App', 'Network', 'Database' 등)\n *\n * @returns {Object|null} 해당 클래스의 config 객체 또는 null (잘못된 sTarget인 경우)\n *\n * @example\n * // 앱 환경의 Network 클래스 config 조회\n * var appNetworkConfig = bizMOB.getConfig('APP', 'Network');\n * console.log(appNetworkConfig._sBaseUrl);\n *",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 9,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 186,
    "char_count": 591,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0010",
    "content": "* console.log(appNetworkConfig._sBaseUrl);\n *\n * // 웹 환경의 App 클래스 config 조회\n * var webAppConfig = bizMOB.getConfig('WEB', 'App');\n * console.log(webAppConfig._bIsRelease);\n */\nbizMOB.getConfig = function (sTarget, sClassName) {\n switch (sTarget) {\n case 'APP':\n // App Target인 경우 App Core인 경우에만 반환\n return window.bizMOBCore[sClassName].config;",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 10,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 96,
    "char_count": 343,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0011",
    "content": "/**\n * bizMOB 클라이언트 라이브러리 내부 Gateway 함수\n *\n * @description 이 함수는 bizMOB 클라이언트 라이브러리 내부에서 앱/웹 환경 분기 처리를 위해\n * 사용되는 내부 함수입니다. 개발자가 직접 호출할 필요는 없으며, 모든 bizMOB API 함수들이\n * 내부적으로 이 Gateway를 통해 적절한 Core 모듈의 함수를 호출합니다.\n *\n * - 앱 환경: bizMOB-core.js의 bizMOBCore 모듈 함수 호출\n * - 웹 환경: bizMOB-core-web.js의 bizMOBWebCore 모듈 함수 호출\n *\n * @internal 내부 함수 - 개발자가 직접 사용하지 마세요\n * @param {String} sClassName 호출할 Core 클래스명\n * @param {String} sMethod 호출할 Core 메서드명\n * @param {Array} aRequired 필수 파라미터 키 목록\n * @param {Object} oParam 전달할 파라미터 객체\n * @param {Boolean} [oParam._bMock] Mock 데이터 사용 여부",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 11,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 191,
    "char_count": 570,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0012",
    "content": "* @param {Boolean} [oParam._bMock] Mock 데이터 사용 여부\n * @param {Function} [oParam._fCallback] 콜백 함수\n *\n * @returns {*} Core 함수의 반환값 또는 false\n *\n * @example\n * // ❌ 개발자가 직접 호출하지 마세요\n * // bizMOB.gateway('ExtendsManager', 'executer', ['_sID'], {...});\n *\n * // ✅ 대신 공식 API를 사용하세요\n * bizMOB.App.callPlugIn('APP_UPDATE_CHECK', {\n * callback: function(result) {\n * console.log('플러그인 실행 결과:', result);\n * }\n * });\n */\nbizMOB.gateway = function (sClassName, sMethod, aRequired, oParam) {\n var $bizMOBCore = window.bizMOBCore.readystatus ? window.bizMOBCore : window.bizMOBWebCore;",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 12,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 165,
    "char_count": 570,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0013",
    "content": "var required = aRequired || [];\n var param = oParam || {};\n var isMock = param._bMock || (param._oParam && param._oParam._bMock) || false; // mock 데이터 호출 여부 (callPlugin 까지 고려)\n var isRelease = $bizMOBCore.App.config._bRelease || false; // Release 모드 여부",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 13,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 71,
    "char_count": 252,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0014",
    "content": "// 필수 파라미터 check\n if ($bizMOBCore.Module.checkParam(param, required)) {\n // Service Call\n try {\n // Mock 데이터 호출 여부 (Release 모드가 아닌 경우에만 호출)\n if (isMock && !isRelease) {\n window.bizMOBWebCore.Http.requestMock(sClassName, sMethod, param);\n }\n // Logger 호출\n else if (sMethod === 'logger') {\n $bizMOBCore[sClassName][sMethod](param._sService, param._sAction, param._sLogType, param._sMessage);\n }\n // Core 함수 호출\n else {\n return $bizMOBCore[sClassName][sMethod](param);\n }\n }\n // 지원하지 않는 서비스인 경우\n catch (error) {\n var call = param._fCallback || param.callback || null;",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 14,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 159,
    "char_count": 563,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0015",
    "content": "catch (error) {\n var call = param._fCallback || param.callback || null;\n $bizMOBCore.Module.logger('bizMOB', 'gateway', 'W', 'This feature is not supported. - ' + sClassName + '.' + sMethod);",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 15,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 52,
    "char_count": 191,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0016",
    "content": "// 이벤트 추가 관련은 callback 실행하지 않음\n if (sClassName !== 'EventManager') {\n call && call({ result: false, type: $bizMOBCore.name === 'bizMOBCore' ? 'app' : 'web' });\n }\n }\n }\n else {\n return false;\n }\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 16,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 57,
    "char_count": 197,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0017",
    "content": "/**\n * Native 이벤트 리스너를 등록하는 함수\n *\n * 앱/웹 환경에 따라 해당하는 EventManager를 통해 이벤트를 등록합니다.\n * - 앱 환경: bizMOBCore.EventManager.set 호출\n * - 웹 환경: bizMOBWebCore.EventManager.set 호출 (웹에서는 즉시 실행되는 이벤트도 존재)\n *\n * @param {String} sEvent Native 이벤트명\n * - 'open': 페이지(웹뷰)를 열었을 때 발생하는 이벤트\n * - 'close': 페이지(웹뷰)를 닫았을 때 발생하는 이벤트\n * - 'beforeready': 페이지(웹뷰)가 로드되기 전에 발생하는 이벤트\n * - 'ready': 페이지(웹뷰)가 로드되었을 때 발생하는 이벤트\n * - 'backbutton': Back Button이 눌러졌을 때 발생하는 이벤트 (Android 전용)\n * - 'resume': 페이지(웹뷰)가 활성화 되었을 때 발생하는 이벤트 (포커스, 화면 표시시)\n * - 'push': Push 메세지를 수신하였을 때 발생하는 이벤트",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 17,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 194,
    "char_count": 551,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0018",
    "content": "* - 'push': Push 메세지를 수신하였을 때 발생하는 이벤트\n * - 'networkstatechange': 네트워크 상태가 변경되었을 때 발생하는 이벤트\n * - 'sessiontimeout': 세션 타임아웃이 발생했을 때의 이벤트\n * @param {Function} fCallback 이벤트 발생시 실행될 콜백 함수\n *\n * @example\n * // 페이지 로드 완료 이벤트 등록\n * bizMOB.setEvent('ready', function() {\n * console.log('페이지가 로드되었습니다!');\n * // 초기화 코드 실행\n * });\n *\n * // 페이지 열림 이벤트 등록\n * bizMOB.setEvent('open', function() {\n * console.log('페이지가 열렸습니다');\n * });\n *\n * // 백버튼 이벤트 등록 (Android)\n * bizMOB.setEvent('backbutton', function() {\n * console.log('백버튼이 눌렸습니다');\n * // 백버튼 처리 로직\n * });\n *\n * // 푸시 메시지 수신 이벤트 등록",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 18,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 192,
    "char_count": 574,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0019",
    "content": "* console.log('백버튼이 눌렸습니다');\n * // 백버튼 처리 로직\n * });\n *\n * // 푸시 메시지 수신 이벤트 등록\n * bizMOB.setEvent('push', function(pushData) {\n * console.log('푸시 메시지 수신:', pushData);\n * // 푸시 메시지 처리 로직\n * });\n *\n * // 네트워크 상태 변경 이벤트 등록\n * bizMOB.setEvent('networkstatechange', function(networkState) {\n * console.log('네트워크 상태 변경:', networkState);\n * // 네트워크 상태에 따른 처리\n * });\n */\nbizMOB.setEvent = function (sEvent, fCallback) {\n if (bizMOB.Device.isApp()) {\n window.bizMOBCore.EventManager.set({ _sEvent: sEvent, _fCallback: fCallback });\n }\n else {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 19,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 161,
    "char_count": 532,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0020",
    "content": "/**\n * Native 이벤트 리스너를 제거하는 함수\n *\n * 등록된 Native 이벤트 리스너를 제거하여 더 이상 해당 이벤트가 발생해도 콜백이 실행되지 않습니다.\n * 앱/웹 환경에 따라 해당하는 EventManager.clear를 통해 이벤트를 제거합니다.\n *\n * @param {String} sEvent 제거할 Native 이벤트명\n * - 'open': 페이지(웹뷰) 열림 이벤트\n * - 'close': 페이지(웹뷰) 닫힘 이벤트\n * - 'beforeready': 페이지(웹뷰) 로드 전 이벤트\n * - 'ready': 페이지(웹뷰) 로드 완료 이벤트\n * - 'backbutton': Back Button 이벤트 (Android 전용)\n * - 'resume': 페이지(웹뷰) 활성화 이벤트\n * - 'push': Push 메세지 수신 이벤트\n * - 'networkstatechange': 네트워크 상태 변경 이벤트\n * - 'sessiontimeout': 세션 타임아웃 이벤트\n *\n * @example\n * // ready 이벤트 리스너 제거\n * bizMOB.clearEvent('ready');\n *\n * // 백버튼 이벤트 리스너 제거",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 20,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 204,
    "char_count": 597,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0021",
    "content": "* // ready 이벤트 리스너 제거\n * bizMOB.clearEvent('ready');\n *\n * // 백버튼 이벤트 리스너 제거\n * bizMOB.clearEvent('backbutton');\n *\n * // 푸시 이벤트 리스너 제거\n * bizMOB.clearEvent('push');\n *\n * // 네트워크 상태 변경 이벤트 리스너 제거\n * bizMOB.clearEvent('networkstatechange');\n */\nbizMOB.clearEvent = function (sEvent) {\n bizMOB.gateway('EventManager', 'clear', ['_sEvent'], { _sEvent: sEvent });\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 21,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 109,
    "char_count": 363,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0022",
    "content": "/**\n * Logger - Cross-Platform 로깅 및 디버깅 시스템\n *\n * @description bizMOB 애플리케이션에서 로그 메시지를 기록하고 관리하는 통합 로깅 시스템입니다.\n * 앱과 웹 환경에서 서로 다른 로깅 메커니즘을 사용하여 개발자에게 일관된 로깅 인터페이스를 제공합니다.\n * 로그 레벨별 필터링과 환경별 최적화된 출력 방식을 지원합니다.\n *\n * **주요 기능:**\n * - 레벨별 로그 메시지 기록 (info, log, warn, debug, error)\n * - 환경별 최적화된 로그 출력 시스템\n * - 릴리즈 빌드에서 로그 출력 제어\n * - 구조화된 로그 메시지 포맷팅\n *\n * **환경별 동작:**\n * - **앱 환경**: Native 로그 시스템 사용, OS별 로그 파일 저장, 외부 로그 수집 도구 연동 가능\n * - **웹 환경**: 브라우저 콘솔 출력, 컬러 스타일링 지원, 개발자 도구 통합\n *\n * @class bizMOB.Logger\n */\nbizMOB.Logger = new Object();",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 22,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 197,
    "char_count": 537,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0023",
    "content": "/**\n * 정보성 로그 메시지 기록\n *\n * @description 일반적인 정보나 애플리케이션의 정상적인 동작을 기록할 때 사용합니다.\n * 사용자 액션, 시스템 상태 변경 등의 중요한 정보를 기록하는데 적합합니다.\n *\n * @param {String} sMessage 기록할 로그 메시지\n * @example\n * bizMOB.Logger.info('사용자 로그인 성공');\n */\nbizMOB.Logger.info = function (sMessage) {\n bizMOB.gateway('Module', 'logger', [], { _sService: 'Page', _sAction: 'info', _sLogType: 'I', _sMessage: sMessage });\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 23,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 124,
    "char_count": 383,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0024",
    "content": "/**\n * 일반 로그 메시지 기록\n *\n * @description 개발 과정에서 추적이 필요한 일반적인 동작이나 상태를 기록할 때 사용합니다.\n * 디버깅보다는 가벼운 수준의 정보를 기록하는데 적합합니다.\n *\n * @param {String} sMessage 기록할 로그 메시지\n * @example\n * bizMOB.Logger.log('페이지 로드 시작');\n */\nbizMOB.Logger.log = function (sMessage) {\n bizMOB.gateway('Module', 'logger', [], { _sService: 'Page', _sAction: 'log', _sLogType: 'L', _sMessage: sMessage });\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 24,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 120,
    "char_count": 372,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0025",
    "content": "/**\n * 경고 로그 메시지 기록\n *\n * @description 애플리케이션이 정상 동작하지만 주의가 필요한 상황을 기록할 때 사용합니다.\n * 잠재적인 문제나 예상치 못한 상황, 성능 이슈 등을 알릴 때 적합합니다.\n *\n * @param {String} sMessage 기록할 경고 메시지\n * @example\n * bizMOB.Logger.warn('네트워크 응답 시간이 길어집니다 (5초 초과)');\n */\nbizMOB.Logger.warn = function (sMessage) {\n bizMOB.gateway('Module', 'logger', [], { _sService: 'Page', _sAction: 'warn', _sLogType: 'W', _sMessage: sMessage });\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 25,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 130,
    "char_count": 399,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0026",
    "content": "/**\n * 디버그 로그 메시지 기록\n *\n * @description 개발 및 디버깅 과정에서 상세한 정보를 추적할 때 사용합니다.\n * 변수값, 함수 호출 순서, 상태 변화 등 개발자가 문제를 진단하는데 필요한 정보를 기록합니다.\n * 일반적으로 개발 환경에서만 활성화되며, 운영 환경에서는 비활성화됩니다.\n *\n * @param {String} sMessage 기록할 디버그 메시지\n * @example\n * bizMOB.Logger.debug('함수 호출: getUserData() 시작');\n */\nbizMOB.Logger.debug = function (sMessage) {\n bizMOB.gateway('Module', 'logger', [], { _sService: 'Page', _sAction: 'debug', _sLogType: 'D', _sMessage: sMessage });\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 26,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 149,
    "char_count": 450,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0027",
    "content": "/**\n * 오류 로그 메시지 기록\n *\n * @description 애플리케이션에서 발생한 오류나 예외 상황을 기록할 때 사용합니다.\n * 시스템 에러, API 호출 실패, 예외 처리, 치명적인 문제 등을 기록하여\n * 문제 해결과 시스템 안정성 향상에 활용합니다.\n *\n * @param {String} sMessage 기록할 오류 메시지\n * @example\n * bizMOB.Logger.error('파일 업로드 실패: ' + error.message);\n */\nbizMOB.Logger.error = function (sMessage) {\n bizMOB.gateway('Module', 'logger', [], { _sService: 'Page', _sAction: 'error', _sLogType: 'E', _sMessage: sMessage });\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 27,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 138,
    "char_count": 429,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0028",
    "content": "/**\n * Storage - Session 기반 임시 데이터 저장소\n *\n * @description 애플리케이션 세션 동안 임시 데이터를 저장하고 관리하는 휘발성 저장소입니다.\n * 앱과 웹 환경 모두에서 sessionStorage API를 직접 사용하여 일관된 동작을 보장합니다.\n * 애플리케이션 종료 시 자동으로 데이터가 삭제되는 특성을 가집니다.\n *\n * **주요 기능:**\n * - 키-값 쌍 기반 임시 데이터 저장\n * - 세션 기반 자동 데이터 정리\n * - JSON 직렬화/역직렬화 자동 처리\n * - 앱/웹 환경 통합 인터페이스\n *\n * **환경별 동작:**\n * - **앱 환경**: sessionStorage API 직접 사용, 웹뷰 세션과 연동\n * - **웹 환경**: 브라우저 sessionStorage 직접 사용, 탭 단위 격리\n *\n * @class bizMOB.Storage\n */\nbizMOB.Storage = new Object();",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 28,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 174,
    "char_count": 489,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0029",
    "content": "/**\n * Storage 데이터 저장\n *\n * @param {String} _sKey 저장할 값의 키\n * @param {Variable} _vValue 저장할 값\n * @example\n * // 문자열 데이터 저장\n * bizMOB.Storage.set({ _sKey: 'username', _vValue: '홍길동' });\n *\n * // 객체 데이터 저장\n * bizMOB.Storage.set({\n * _sKey: 'user_info',\n * _vValue: { name: '홍길동', age: 30, role: 'admin' }\n * });\n *\n * // 배열 데이터 저장\n * bizMOB.Storage.set({\n * _sKey: 'menu_items',\n * _vValue: ['홈', '설정', '로그아웃']\n * });\n */\nbizMOB.Storage.set = function () {\n bizMOB.gateway('Storage', 'set', ['_sKey', '_vValue'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 29,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 157,
    "char_count": 528,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0030",
    "content": "/**\n * Storage 복수 데이터 저장\n *\n * @param {Array} _aList 저장할 데이터들의 배열\n * @example\n * // 여러 데이터를 한 번에 저장\n * bizMOB.Storage.setList({\n * _aList: [\n * { key: 'username', value: '홍길동' },\n * { key: 'theme', value: 'dark' },\n * { key: 'language', value: 'ko' }\n * ]\n * });\n *\n * // 설정값들을 일괄 저장\n * bizMOB.Storage.setList({\n * _aList: [\n * { key: 'app_version', value: '1.0.0' },\n * { key: 'last_login', value: new Date().toISOString() }\n * ]\n * });\n */\nbizMOB.Storage.setList = function () {\n bizMOB.gateway('Storage', 'set', ['_aList'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 30,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 158,
    "char_count": 544,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0031",
    "content": "/**\n * Storage 데이터 불러오기\n *\n * @param {String} _sKey 저장 값의 키\n * @returns {*} 저장된 데이터 값. 키가 존재하지 않으면 null 반환\n *\n * @example\n * // 기본 사용법\n * var userData = bizMOB.Storage.get({ _sKey: 'user_info' });\n * if (userData) {\n * console.log('사용자 정보:', userData);\n * }\n *\n * // 객체 데이터 조회\n * var settings = bizMOB.Storage.get({ _sKey: 'app_settings' });\n * console.log('앱 설정:', settings);\n */\nbizMOB.Storage.get = function () {\n return bizMOB.gateway('Storage', 'get', ['_sKey'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 31,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 144,
    "char_count": 485,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0032",
    "content": "/**\n * Storage 데이터 삭제\n *\n * @param {String} _sKey 저장 값의 키\n * @example\n * // 특정 키의 데이터 삭제\n * bizMOB.Storage.remove({ _sKey: 'temp_data' });\n *\n * // 사용자 정보 삭제\n * bizMOB.Storage.remove({ _sKey: 'user_session' });\n *\n * // 임시 설정값 삭제\n * bizMOB.Storage.remove({ _sKey: 'form_draft' });\n */\nbizMOB.Storage.remove = function () {\n bizMOB.gateway('Storage', 'remove', ['_sKey'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 32,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 114,
    "char_count": 388,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0033",
    "content": "/**\n * Properties - 영구 데이터 저장소 및 설정 관리 시스템\n *\n * @description 애플리케이션 설정과 영구 보존이 필요한 데이터를 저장하고 관리하는 시스템입니다.\n * 앱 재시작 후에도 데이터가 유지되며, 앱 환경에서는 FStorage 메모리 캐시를 통해\n * 성능을 최적화합니다. 웹 환경에서는 브라우저의 localStorage를 활용합니다.\n *\n * **주요 기능:**\n * - 영구 키-값 쌍 데이터 저장\n * - FStorage 메모리 캐시를 통한 빠른 데이터 접근 (앱 환경)\n * - JSON 객체 및 배열 자동 직렬화/역직렬화\n * - 앱 Resume 시 자동 데이터 복원\n *\n * **환경별 동작:**\n * - **앱 환경**: Native File Storage + FStorage 메모리 캐시 이중 저장, Resume 시 자동 복원\n * - **웹 환경**: localStorage 브라우저 저장소 직접 사용, 도메인별 격리\n *\n * **⚠️ 중요 주의사항:**\n * - FStorage는 bizMOB 라이브러리 내부에서만 사용되는 메모리 캐시 시스템입니다",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 33,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 207,
    "char_count": 564,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0034",
    "content": "*\n * **⚠️ 중요 주의사항:**\n * - FStorage는 bizMOB 라이브러리 내부에서만 사용되는 메모리 캐시 시스템입니다\n * - 개발자가 FStorage에 직접 접근하거나 조작하는 것은 금지되어 있습니다\n * - 모든 영구 데이터 저장은 반드시 bizMOB.Properties API를 통해서만 수행해야 합니다\n *\n * @class bizMOB.Properties\n */\nbizMOB.Properties = new Object();",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 34,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 86,
    "char_count": 249,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0035",
    "content": "/**\n * Properties 데이터 저장\n *\n * @param {String} _sKey 저장할 값의 키\n * @param {Variable} _vValue 저장할 값\n * @example\n * // 사용자 토큰 저장 (영구 보관)\n * bizMOB.Properties.set({ _sKey: 'auth_token', _vValue: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...' });\n *\n * // 앱 설정 저장\n * bizMOB.Properties.set({\n * _sKey: 'app_settings',\n * _vValue: { theme: 'dark', notification: true, language: 'ko' }\n * });\n *\n * // 서버 URL 저장\n * bizMOB.Properties.set({ _sKey: 'server_url', _vValue: 'https://api.example.com' });\n */\nbizMOB.Properties.set = function () {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 35,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 151,
    "char_count": 526,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0036",
    "content": "/**\n * Properties 복수 데이터 저장.\n *\n * @param {Array} _aList 저장할 데이터들의 배열\n * @example\n * // 초기 설정값들을 일괄 저장\n * bizMOB.Properties.setList({\n * _aList: [\n * { key: 'user_id', value: 'user@example.com' },\n * { key: 'login_type', value: 'email' },\n * { key: 'auto_login', value: true }\n * ]\n * });\n *\n * // 앱 구성 정보를 영구 저장\n * bizMOB.Properties.setList({\n * _aList: [\n * { key: 'app_version', value: '2.1.0' },\n * { key: 'first_run', value: false },\n * { key: 'terms_agreed', value: true }\n * ]\n * });\n */\nbizMOB.Properties.setList = function () {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 36,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 154,
    "char_count": 536,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0037",
    "content": "/**\n * Properties 데이터 불러오기\n *\n * @description 앱 환경에서는 FStorage 메모리 캐시를 통해 빠른 조회가 가능하며,\n * 웹 환경에서는 로컬스토리지에서 데이터를 조회합니다.\n *\n * @param {String} _sKey 저장 값의 키\n * @returns {*} 저장된 데이터 값. 키가 존재하지 않으면 null 반환\n *\n * @example\n * // 기본 사용법\n * var token = bizMOB.Properties.get({ _sKey: 'auth_token' });\n * if (token) {\n * console.log('인증 토큰:', token);\n * }\n *\n * // 설정값 조회\n * var serverUrl = bizMOB.Properties.get({ _sKey: 'server_url' });\n * console.log('서버 URL:', serverUrl);\n *\n * // 앱 환경에서는 FStorage에서 빠른 조회\n * var userPrefs = bizMOB.Properties.get({ _sKey: 'user_preferences' });\n */",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 37,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 180,
    "char_count": 578,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0038",
    "content": "* var userPrefs = bizMOB.Properties.get({ _sKey: 'user_preferences' });\n */\nbizMOB.Properties.get = function () {\n return bizMOB.gateway('Properties', 'get', ['_sKey'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 38,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 50,
    "char_count": 186,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0039",
    "content": "/**\n * Properties 데이터 삭제\n *\n * @param {String} _sKey 저장 값의 키\n * @example\n * // 사용자 토큰 삭제 (로그아웃 시)\n * bizMOB.Properties.remove({ _sKey: 'auth_token' });\n *\n * // 임시 설정 삭제\n * bizMOB.Properties.remove({ _sKey: 'temp_config' });\n *\n * // 사용자별 설정 초기화\n * bizMOB.Properties.remove({ _sKey: 'user_preferences' });\n */\nbizMOB.Properties.remove = function () {\n return bizMOB.gateway('Properties', 'remove', ['_sKey'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 39,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 125,
    "char_count": 426,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0040",
    "content": "/**\n * Network - bizMOB 서버 통신 및 HTTP 요청 관리 시스템\n *\n * @description bizMOB 서버와의 전문 통신, JWT 토큰 기반 인증, HTTP 요청을 통합 관리하는 시스템입니다.\n * 앱과 웹 환경에서 서로 다른 통신 메커니즘을 사용하며, 암호화, 토큰 갱신, 에러 처리 등을\n * 자동으로 처리합니다. 선택적으로 JWT 토큰 인증과 메시지 암호화를 지원합니다.\n *\n * **주요 기능:**\n * - bizMOB 서버 전문 통신 (requestTr, requestLogin)\n * - JWT 토큰 자동 관리 및 갱신\n * - 메시지 암호화/복호화 (선택적)\n * - RESTful HTTP API 통신 (requestHttp)\n * - 다국어 로케일 설정\n *\n * **환경별 동작:**\n * - **앱 환경**: Native HTTP 통신 + 콜백 큐 시스템, 네이티브 보안 저장소 활용\n * - **웹 환경**: fetch API + Promise 패턴, 브라우저 암호화 라이브러리 지원\n *\n * @class bizMOB.Network\n */\nbizMOB.Network = new Object();",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 40,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 203,
    "char_count": 586,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0041",
    "content": "/**\n * Network 통신 시 애플리케이션 로케일(언어/지역) 변경\n *\n * @description 애플리케이션의 언어 설정을 변경하여 서버 통신 시 사용할 로케일을 설정합니다.\n * 이 함수는 앱/웹 환경에 따라 다르게 동작합니다:\n *\n * **앱 환경 (bizMOBCore)**:\n * - Native 디바이스의 언어 설정과 연동\n * - 전체 앱의 언어 환경을 변경\n * - 네이티브 UI 요소의 언어도 함께 변경됨\n *\n * **웹 환경 (bizMOBWebCore)**:\n * - 브라우저의 언어 설정을 기반으로 동작\n * - 웹 애플리케이션 내부의 언어 환경만 변경\n * - HTTP 헤더의 Accept-Language에 반영\n *\n * @param {String} _sLocaleCd 언어코드\n * - 단순 언어코드: 'ko', 'en', 'ja', 'zh' 등\n * - 전체 로케일코드: 'ko-KR', 'en-US', 'ja-JP', 'zh-CN' 등\n * - 시스템이 자동으로 적절한 전체 로케일코드로 변환\n *\n * @example\n * // 한국어로 변경",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 41,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 196,
    "char_count": 550,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0042",
    "content": "* - 시스템이 자동으로 적절한 전체 로케일코드로 변환\n *\n * @example\n * // 한국어로 변경\n * bizMOB.Network.changeLocale({ _sLocaleCd: 'ko' });\n *\n * // 영어(미국)로 변경\n * bizMOB.Network.changeLocale({ _sLocaleCd: 'en-US' });\n *\n * // 일본어로 변경\n * bizMOB.Network.changeLocale({ _sLocaleCd: 'ja' });\n *\n * // 중국어(간체)로 변경\n * bizMOB.Network.changeLocale({ _sLocaleCd: 'zh-CN' });\n *\n * @example\n * // 언어 변경 후 서버 통신에서 자동으로 적용\n * bizMOB.Network.changeLocale({ _sLocaleCd: 'en' });\n *\n * // 이후 모든 서버 통신에서 영어 로케일이 적용됨\n * bizMOB.Network.requestTr({\n * _sTrcode: 'USER001',\n * _oBody: { userId: 'test@example.com' },",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 42,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 174,
    "char_count": 570,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0043",
    "content": "* _sTrcode: 'USER001',\n * _oBody: { userId: 'test@example.com' },\n * _fCallback: function(response) {\n * // 서버 응답이 영어로 제공됨\n * console.log('Response:', response);\n * }\n * });\n */\nbizMOB.Network.changeLocale = function () {\n bizMOB.gateway('Network', 'changeLocale', ['_sLocaleCd'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 43,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 84,
    "char_count": 298,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0044",
    "content": "/**\n * bizMOB Server 전문 통신\n *\n * @description bizMOB 서버와 전문 기반 통신을 수행합니다.\n * JWT 토큰이 설정된 경우 자동으로 Authorization 헤더에 추가되며,\n * 암호화가 활성화된 경우 메시지 암호화를 지원합니다.\n * 토큰 없이도 기본 전문 통신이 가능합니다.\n *\n * @param {String} _sTrcode bizMOB Server 인증 전문코드\n * @param {String} _oHeader bizMOB Server 인증 전문 Header 객체\n * @param {String} _oBody bizMOB Server 인증 전문 Body 객체\n * @param {Boolean} _bProgressEnable (default:true) 서버에 통신 요청시 progress 표시 여부( true 또는 false )\n * @param {Number} _nTimeout (default: 60) 서버에 통신 요청시 timeout 시간 (sec)\n * @param {Function} _fCallback 서버와 통신 후 실행될 callback 함수\n * @callback _fCallback",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 44,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 186,
    "char_count": 591,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0045",
    "content": "* @callback _fCallback\n * @param {Object} response - 서버 통신 결과\n * @param {Object} response.header - 응답 헤더\n * @param {boolean} response.header.result - 성공 여부\n * @param {string} response.header.error_code - 에러 코드\n * @param {string} response.header.error_text - 에러 메시지\n * @param {string} response.header.trcode - 트랜잭션 코드\n * @param {Object} response.body - 응답 본문 (비즈니스 로직에 따라 구조가 달라짐)\n *\n * @example\n * // 기본 전문 통신 (JWT 토큰 없이)\n * bizMOB.Network.requestTr({\n * _sTrcode: 'USER001',\n * _oBody: { userId: 'test@example.com' },\n * _fCallback: function(response) {\n * if (response.header.result) {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 45,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 170,
    "char_count": 587,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0046",
    "content": "* _fCallback: function(response) {\n * if (response.header.result) {\n * console.log('Success:', response.body);\n * }\n * }\n * });\n *\n * @example\n * // JWT 토큰 자동 적용 (토큰이 설정된 경우)\n * bizMOB.Network.requestTr({\n * _sTrcode: 'USER002',\n * _oHeader: { customField: 'value' },\n * _oBody: { data: 'example' },\n * _nTimeout: 30,\n * _fCallback: function(response) {\n * // 자동으로 Authorization: Bearer [token] 헤더 추가됨\n * console.log(response);\n * }\n * });\n */",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 46,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 125,
    "char_count": 443,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0047",
    "content": "/**\n * bizMOB Server 로그인(인증)전문 통신\n *\n * @description bizMOB 서버 로그인 인증을 수행합니다.\n * 성공 시 JWT Access Token과 Refresh Token을 반환하며,\n * 이후 requestTr 호출 시 자동으로 Authorization 헤더에 적용됩니다.\n * 레거시 시스템과의 통합을 위해 기존 로그인 전문을 감싸서 처리합니다.\n *\n * @param {String} _sUserId 인증 받을 사용자 아이디\n * @param {String} _sPassword 인증 받을 사용자 패스워드\n * @param {String} _sTrcode 레거시 로그인 인증 전문코드\n * @param {String} _oHeader 레거시 로그인 인증 전문 Header 객체\n * @param {String} _oBody 레거시 로그인 인증 전문 Body 객체\n * @param {Boolean} _bProgressEnable (default:true) 서버에 통신 요청시 progress 표시 여부( true 또는 false )",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 47,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 179,
    "char_count": 546,
    "created_at": "2025-08-01T15:32:20.350Z"
  },
  {
    "id": "e38eec38_0048",
    "content": "* @param {Number} _nTimeout (default: 60) 서버에 통신 요청시 timeout 시간 (sec)\n * @param {Function} _fCallback 서버와 통신 후 실행될 callback 함수\n * @callback _fCallback\n * @param {Object} response - 로그인 통신 결과\n * @param {Object} response.header - 응답 헤더\n * @param {boolean} response.header.result - 성공 여부\n * @param {string} response.header.error_code - 에러 코드\n * @param {string} response.header.error_text - 에러 메시지\n * @param {string} response.header.trcode - 트랜잭션 코드\n * @param {boolean} response.header.content_update_flag - 컨텐츠 업데이트 플래그\n * @param {boolean} response.header.emergency_flag - 긴급 플래그",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 48,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 168,
    "char_count": 576,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0049",
    "content": "* @param {boolean} response.header.emergency_flag - 긴급 플래그\n * @param {string} response.header.info_text - 정보 텍스트\n * @param {string} response.header.login_session_id - 로그인 세션 ID\n * @param {string} response.header.message_version - 메시지 버전\n * @param {number} response.header.content_major_version - 컨텐츠 메이저 버전\n * @param {number} response.header.content_minor_version - 컨텐츠 마이너 버전\n * @param {Object} response.body - 응답 본문 (비즈니스 로직에 따라 구조가 달라짐)\n * @param {string} response.body.accessToken - JWT Access Token (웹 환경)\n * @param {string} response.body.refreshToken - JWT Refresh Token (웹 환경)",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 49,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 169,
    "char_count": 583,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0050",
    "content": "* @param {string} response.body.refreshToken - JWT Refresh Token (웹 환경)\n * @param {number} response.body.accessTokenExpTime - Access Token 만료 시간 (웹 환경)\n * @param {number} response.body.refreshTokenExpTime - Refresh Token 만료 시간 (웹 환경)\n *\n * @example\n * // 기본 로그인 (레거시 시스템 연동)\n * bizMOB.Network.requestLogin({\n * _sTrcode: 'DM0001',\n * _sUserId: 'user@example.com', // 레거시 시스템용\n * _sPassword: 'password123', // 레거시 시스템용\n * _oBody: { userId: 'test', password: 'password123' }, // bizMOB 시스템용\n * _fCallback: function(response) {\n * if (response.header.result) {\n * // 웹 환경: JWT 토큰 자동 저장됨",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 50,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 169,
    "char_count": 583,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0051",
    "content": "* if (response.header.result) {\n * // 웹 환경: JWT 토큰 자동 저장됨\n * // 앱 환경: 세션 정보 저장됨\n * console.log('Login success:', response.body);\n * }\n * }\n * });\n *\n * @example\n * // 로그인 후 자동 토큰 적용 확인\n * bizMOB.Network.requestLogin({\n * _sTrcode: 'DM0001',\n * _sUserId: '',\n * _sPassword: '',\n * _oBody: { userId: 'admin', password: 'admin123' }, // bizMOB 시스템용\n * _fCallback: function(response) {\n * if (response.header.result) {\n * // 이후 requestTr 호출 시 JWT 토큰 자동 적용\n * bizMOB.Network.requestTr({\n * _sTrcode: 'DM0002',\n * _fCallback: function(userResponse) {\n * // Authorization 헤더 자동 추가됨",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 51,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 167,
    "char_count": 574,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0052",
    "content": "* _fCallback: function(userResponse) {\n * // Authorization 헤더 자동 추가됨\n * console.log(userResponse);\n * }\n * });\n * }\n * }\n * });\n */\nbizMOB.Network.requestLogin = function () {\n bizMOB.gateway('Network', 'requestLogin', ['_sUserId', '_sPassword'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 52,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 74,
    "char_count": 264,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0053",
    "content": "/**\n * API 서버 통신\n *\n * @param {String} _sUrl 서버 URL\n * @param {String} _sMethod 통신 방식 (get, post)\n * @param {String} _oHeader Http Header\n * @param {String} _oBody Http Body\n * @param {Boolean} _bProgressEnable (default:true) 서버에 통신 요청시 progress 표시 여부( true 또는 false )\n * @param {Number} _nTimeout (default: 60) 서버에 통신 요청시 timeout 시간 (sec)\n * @param {Function} _fCallback 서버와 통신 후 실행될 callback 함수\n * @callback _fCallback\n * @param {Object} response - HTTP 통신 결과\n * @param {boolean} response.result - 성공 여부\n * @param {Object} response.data - 응답 데이터 (API에 따라 구조가 달라짐)",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 53,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 165,
    "char_count": 565,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0054",
    "content": "* @param {Object} response.data - 응답 데이터 (API에 따라 구조가 달라짐)\n * @param {number} response.status - HTTP 상태 코드\n * @param {Object} response.headers - 응답 헤더\n * @example\n * // GET 요청으로 사용자 목록 조회\n * bizMOB.Network.requestHttp({\n * _sUrl: 'https://api.example.com/users',\n * _sMethod: 'get',\n * _oHeader: { 'Accept': 'application/json' },\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('사용자 목록:', response.data);\n * }\n * }\n * });\n *\n * // POST 요청으로 데이터 전송\n * bizMOB.Network.requestHttp({\n * _sUrl: 'https://api.example.com/users',\n * _sMethod: 'post',",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 54,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 166,
    "char_count": 572,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0055",
    "content": "* _sUrl: 'https://api.example.com/users',\n * _sMethod: 'post',\n * _oHeader: { 'Content-Type': 'application/json' },\n * _oBody: JSON.stringify({ name: '홍길동', email: 'hong@example.com' }),\n * _nTimeout: 30,\n * _fCallback: function(response) {\n * console.log('생성 결과:', response);\n * }\n * });\n */",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 55,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 83,
    "char_count": 292,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0056",
    "content": "/**\n * System - 운영체제 및 디바이스 기능 통합 관리 시스템\n *\n * @description 모바일 디바이스의 Native 기능들(전화, 카메라, GPS, 브라우저 등)에 접근하고\n * 제어하는 시스템입니다. 앱 환경에서는 모든 Native API를 지원하며, 웹 환경에서는\n * 브라우저에서 지원 가능한 기능들만 제한적으로 제공합니다.\n *\n * **주요 기능:**\n * - 전화 걸기 및 SMS 발송\n * - 카메라 촬영 및 갤러리 접근\n * - GPS 위치 정보 조회\n * - 지도 앱 연동 및 브라우저 호출\n * - 외부 애플리케이션 연동\n *\n * **환경별 동작:**\n * - **앱 환경**: 모든 Native API 완전 지원, 디바이스 권한 관리 연동\n * - **웹 환경**: getGPS만 브라우저 Geolocation API로 제한적 지원, 나머지 기능은 기본 구조만 제공\n *\n * @class bizMOB.System\n */\nbizMOB.System = new Object();",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 56,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 185,
    "char_count": 513,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0057",
    "content": "/**\n * 전화걸기\n *\n * @param {String} _sNumber 전화번호\n * @param {Function} _fCallback 실행후 결과를 처리할 callback 함수\n * @callback _fCallback\n * @param {Object} response - 전화걸기 결과\n * @param {boolean} response.result - 성공 여부\n * @param {Object} response.data - 응답 데이터\n * @example\n * // 전화번호로 전화걸기\n * bizMOB.System.callTEL({\n * _sNumber: '010-1234-5678',\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('전화 앱이 실행되었습니다');\n * } else {\n * console.log('전화걸기 실패');\n * }\n * }\n * });\n *\n * // 긴급전화 걸기\n * bizMOB.System.callTEL({\n * _sNumber: '119',\n * _fCallback: function(response) {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 57,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 173,
    "char_count": 588,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0058",
    "content": "* _sNumber: '119',\n * _fCallback: function(response) {\n * console.log('긴급전화 실행 결과:', response);\n * }\n * });\n */\nbizMOB.System.callTEL = function () {\n bizMOB.gateway('System', 'callTEL', ['_sNumber'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 58,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 62,
    "char_count": 218,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0059",
    "content": "/**\n * 문자보내기\n *\n * @param {Array} _aNumber 메세지를 보낼 전화번호 배열\n * @param {String} _sMessage 보낼 메세지\n * @param {Function} _fCallback 실행후 결과를 처리할 callback 함수\n * @callback _fCallback\n * @param {Object} response - 문자보내기 결과\n * @param {boolean} response.result - 성공 여부\n * @param {Object} response.data - 응답 데이터\n * @example\n * // 단일 수신자에게 문자 발송\n * bizMOB.System.callSMS({\n * _aNumber: ['010-1234-5678'],\n * _sMessage: '안녕하세요. 테스트 메시지입니다.',\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('문자 앱이 실행되었습니다');\n * }\n * }\n * });\n *\n * // 여러 수신자에게 문자 발송\n * bizMOB.System.callSMS({",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 59,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 181,
    "char_count": 590,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0060",
    "content": "* }\n * }\n * });\n *\n * // 여러 수신자에게 문자 발송\n * bizMOB.System.callSMS({\n * _aNumber: ['010-1111-2222', '010-3333-4444'],\n * _sMessage: '회의 알림: 오늘 오후 2시 회의실에서 회의가 있습니다.',\n * _fCallback: function(response) {\n * console.log('문자 발송 결과:', response);\n * }\n * });\n */\nbizMOB.System.callSMS = function () {\n bizMOB.gateway('System', 'callSMS', ['_aNumber'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 60,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 108,
    "char_count": 362,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0061",
    "content": "/**\n * 단말기 설치된 브라우져 열기\n *\n * @param {String} _sURL 열어볼 URL 주소\n * @param {Function} _fCallback 브라우저 열기 후 결과를 처리할 callback 함수\n * @callback _fCallback\n * @param {Object} response - 브라우저 열기 결과\n * @param {boolean} response.result - 성공 여부\n * @param {Object} response.data - 응답 데이터\n * @example\n * // 웹사이트 열기\n * bizMOB.System.callBrowser({\n * _sURL: 'https://www.google.com',\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('브라우저가 실행되었습니다');\n * }\n * }\n * });\n *\n * // 특정 서비스 페이지 열기\n * bizMOB.System.callBrowser({\n * _sURL: 'https://support.example.com/help',",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 61,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 174,
    "char_count": 579,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0062",
    "content": "* bizMOB.System.callBrowser({\n * _sURL: 'https://support.example.com/help',\n * _fCallback: function(response) {\n * console.log('도움말 페이지 열기 결과:', response);\n * }\n * });\n */\nbizMOB.System.callBrowser = function () {\n bizMOB.gateway('System', 'callBrowser', ['_sURL'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 62,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 79,
    "char_count": 283,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0063",
    "content": "/**\n * 단말기 디바이스의 갤러리(사진앨범) 보기\n *\n * @param {String} _sType String (Default : all) 갤러리에서 불러올 미디어 타입( all, image, video )가 있습니다.\n * @param {Function} _fCallback 갤러리에서 선택한 미디어를 결과를 전달 받아서 처리할 callback 함수.\n * @callback _fCallback\n * @param {Object} response - 갤러리 선택 결과\n * @param {Array} response.images - 선택된 이미지 목록\n * @param {string} response.images[].filename - 파일명\n * @param {number} response.images[].index - 인덱스\n * @param {string} response.images[].uri - 파일 URI\n * @param {string} response.images[].size - 파일 크기 (bytes)\n * @param {boolean} response.result - 성공 여부",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 63,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 172,
    "char_count": 565,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0064",
    "content": "* @param {boolean} response.result - 성공 여부\n * @param {Object} response.error - 에러 정보\n * @example\n * // 모든 미디어 타입으로 갤러리 열기\n * bizMOB.System.callGallery({\n * _sType: 'all',\n * _fCallback: function(response) {\n * if (response.result && response.images) {\n * response.images.forEach(function(image) {\n * console.log('선택된 파일:', image.filename, image.uri);\n * });\n * }\n * }\n * });\n *\n * // 이미지만 선택 가능한 갤러리 열기\n * bizMOB.System.callGallery({\n * _sType: 'image',\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('선택된 이미지 수:', response.images.length);\n * }\n * }\n * });\n */",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 64,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 170,
    "char_count": 590,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0065",
    "content": "* console.log('선택된 이미지 수:', response.images.length);\n * }\n * }\n * });\n */\nbizMOB.System.callGallery = function () {\n bizMOB.gateway('System', 'callGallery', ['_fCallback'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 65,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 54,
    "char_count": 190,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0066",
    "content": "/**\n * 단말기 카메라 촬영\n *\n * @param {String} _sFileName 찍은 이미지를 저장할 이름\n * @param {String} _sDirectory 찍은 이미지를 저장할 경로\n * @param {Boolean} _bAutoVerticalHorizontal (Default : true) 찍은 이미지를 화면에 맞게 자동으로 회전시켜 저장할지를 설정 값\n * @param {Function} _fCallback 갤러리에서 선택한 미디어를 전달 받아서 처리하는 callback 함수\n * @callback _fCallback\n * @param {Object} response - 카메라 촬영 결과\n * @param {string} response.path - 촬영된 이미지 파일 경로\n * @param {boolean} response.result - 성공 여부\n * @example\n * // 기본 카메라 촬영\n * bizMOB.System.callCamera({\n * _sFileName: 'photo_' + new Date().getTime() + '.jpg',\n * _sDirectory: '{internal}/photos/',",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 66,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 183,
    "char_count": 590,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0067",
    "content": "* _sDirectory: '{internal}/photos/',\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('촬영된 이미지 경로:', response.path);\n * } else {\n * console.log('촬영이 취소되었습니다');\n * }\n * }\n * });\n *\n * // 자동 회전 비활성화로 촬영\n * bizMOB.System.callCamera({\n * _sFileName: 'raw_photo.jpg',\n * _sDirectory: '{external}/camera/',\n * _bAutoVerticalHorizontal: false,\n * _fCallback: function(response) {\n * console.log('원본 방향 촬영 결과:', response);\n * }\n * });\n */\nbizMOB.System.callCamera = function () {\n bizMOB.gateway('System', 'callCamera', ['_fCallback'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 67,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 164,
    "char_count": 573,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0068",
    "content": "/**\n * 단말기 지도 실행\n *\n * @param {String} _sLocation 위치 정보(주소, 위경도값)\n * @param {Function} _fCallback 지도 실행 후 결과를 처리할 callback 함수\n * @callback _fCallback\n * @param {Object} response - 지도 실행 결과\n * @param {boolean} response.result - 성공 여부\n * @param {Object} response.data - 응답 데이터\n * @example\n * // 주소로 지도 열기\n * bizMOB.System.callMap({\n * _sLocation: '서울특별시 강남구 테헤란로 152',\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('지도 앱이 실행되었습니다');\n * }\n * }\n * });\n *\n * // 위경도 좌표로 지도 열기\n * bizMOB.System.callMap({\n * _sLocation: '37.5665, 126.9780',",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 68,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 172,
    "char_count": 564,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0069",
    "content": "* bizMOB.System.callMap({\n * _sLocation: '37.5665, 126.9780',\n * _fCallback: function(response) {\n * console.log('지도 실행 결과:', response);\n * }\n * });\n */\nbizMOB.System.callMap = function () {\n bizMOB.gateway('System', 'callMap', ['_sLocation'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 69,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 72,
    "char_count": 261,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0070",
    "content": "/**\n * 위치 정보 조회\n *\n * @param {String} _sLocation 위치 정보(주소, 위경도값)\n * @callback _fCallback\n * @param {Object} response - GPS 위치 정보\n * @param {boolean} response.result - 성공 여부\n * @param {string} response.provider - GPS 제공자 (예: \"fused\")\n * @param {number} response.latitude - 위도\n * @param {number} response.longitude - 경도\n * @param {string} response.address - 주소\n * @param {boolean} response.gps_enabled - GPS 활성화 여부\n * @example\n * // 현재 위치 정보 조회\n * bizMOB.System.getGPS({\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('현재 위치:', response.latitude, response.longitude);",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 70,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 170,
    "char_count": 595,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0071",
    "content": "* console.log('현재 위치:', response.latitude, response.longitude);\n * console.log('주소:', response.address);\n * console.log('GPS 제공자:', response.provider);\n * } else {\n * console.log('GPS 권한이 없거나 위치를 가져올 수 없습니다');\n * }\n * }\n * });\n *\n * // GPS 상태 확인\n * bizMOB.System.getGPS({\n * _fCallback: function(response) {\n * if (response.gps_enabled) {\n * console.log('GPS가 활성화되어 있습니다');\n * } else {\n * console.log('GPS를 활성화해 주세요');\n * }\n * }\n * });\n */\nbizMOB.System.getGPS = function () {\n bizMOB.gateway('System', 'getGPS', ['_fCallback'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 71,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 160,
    "char_count": 546,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0072",
    "content": "/**\n * Window - Native UI 컴포넌트 및 대화상자 관리 시스템\n *\n * @description 모바일 앱에서 사용할 수 있는 Native UI 컴포넌트들을 생성하고 관리하는 시스템입니다.\n * 서명패드, 이미지뷰어, 코드리더, 파일탐색기 등의 전문화된 Native Window를 제공하며,\n * 앱 환경에서만 완전한 기능을 지원합니다. 웹 환경에서는 기본 구조만 제공됩니다.\n *\n * **주요 기능:**\n * - 서명패드 (SignPad) 생성 및 이미지 저장\n * - 이미지뷰어 및 코드리더 (QR/바코드) 실행\n * - Native 대화상자 (alert, confirm, toast)\n * - 타이틀바, 툴바, 사이드바 UI 컴포넌트 생성\n * - 페이지 네비게이션 및 메시지 전달\n *\n * **환경별 동작:**\n * - **앱 환경**: 모든 Native Window 컴포넌트 완전 지원, 하드웨어 가속 UI\n * - **웹 환경**: 기본 브라우저 대화상자만 지원, Native 컴포넌트는 기본 구조만 제공\n *\n * @class bizMOB.Window\n */\nbizMOB.Window = new Object();",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 72,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 211,
    "char_count": 585,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0073",
    "content": "/**\n * SignPad(서명) Window 띄우기\n *\n * @param {String} _sTargetPath 사인패드에서 서명한 이미지를 저장할 File Path.\n * @param {Function} _fCallback 사인패드 처리 결과값을 받을 callback 함수.\n * @callback _fCallback\n * @param {Object} response - 서명 패드 결과\n * @param {boolean} response.result - 성공 여부\n * @param {string} response.sign_data - 서명 데이터 (Base64 인코딩)\n * @param {string} response.file_path - 서명 이미지 파일 경로\n * @example\n * // 서명패드 열기\n * bizMOB.Window.openSignPad({\n * _sTargetPath: '{internal}/signatures/sign_' + new Date().getTime() + '.png',\n * _fCallback: function(response) {\n * if (response.result) {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 73,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 169,
    "char_count": 575,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0074",
    "content": "* _fCallback: function(response) {\n * if (response.result) {\n * console.log('서명이 저장되었습니다:', response.file_path);\n * console.log('서명 데이터:', response.sign_data);\n * } else {\n * console.log('서명이 취소되었습니다');\n * }\n * }\n * });\n *\n * // 계약서 서명\n * bizMOB.Window.openSignPad({\n * _sTargetPath: '{external}/contract/signature.png',\n * _fCallback: function(response) {\n * if (response.result) {\n * // 서명 완료 후 서버에 업로드\n * console.log('계약서 서명 완료');\n * }\n * }\n * });\n */\nbizMOB.Window.openSignPad = function () {\n bizMOB.gateway('Window', 'openSignPad', ['_sTargetPath'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 74,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 167,
    "char_count": 573,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0075",
    "content": "/**\n * ImageViewer 띄우기\n *\n * @param {String} _sImagePath 이미지 뷰어로 열 이미지 File Path.\n * @param {Function} _fCallback 이미지 뷰어 Close시 결과값을 받을 callback함수.\n * @callback _fCallback\n * @param {Object} response - 이미지 뷰어 결과\n * @param {boolean} response.result - 성공 여부\n * @param {string} response.file_path - 이미지 파일 경로\n * @example\n * // 저장된 이미지 보기\n * bizMOB.Window.openImageViewer({\n * _sImagePath: '{internal}/photos/image001.jpg',\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('이미지 뷰어가 닫혔습니다');\n * }\n * }\n * });\n *\n * // 촬영한 사진 확인\n * bizMOB.Window.openImageViewer({",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 75,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 173,
    "char_count": 585,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0076",
    "content": "* }\n * }\n * });\n *\n * // 촬영한 사진 확인\n * bizMOB.Window.openImageViewer({\n * _sImagePath: '{external}/camera/photo.png',\n * _fCallback: function(response) {\n * console.log('이미지 뷰어 종료:', response);\n * }\n * });\n */\nbizMOB.Window.openImageViewer = function () {\n bizMOB.gateway('Window', 'set', [], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 76,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 88,
    "char_count": 309,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0077",
    "content": "/**\n * CodeReader( BarCode, QRCode ) 띄우기\n *\n * @param {Function} _fCallback Code 판독 결과값을 받을 callback함수.\n * @callback _fCallback\n * @param {Object} response - 코드 리더 결과\n * @param {boolean} response.result - 성공 여부\n * @param {string} response.result_value - 인식된 코드 값\n * @example\n * // QR코드/바코드 스캔\n * bizMOB.Window.openCodeReader({\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('스캔된 코드:', response.result_value);\n *\n * // URL인 경우 브라우저로 열기\n * if (response.result_value.startsWith('http')) {\n * bizMOB.System.callBrowser({\n * _sURL: response.result_value\n * });\n * }",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 77,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 169,
    "char_count": 590,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0078",
    "content": "* bizMOB.System.callBrowser({\n * _sURL: response.result_value\n * });\n * }\n * } else {\n * console.log('코드 스캔이 취소되었습니다');\n * }\n * }\n * });\n *\n * // 제품 바코드 스캔\n * bizMOB.Window.openCodeReader({\n * _fCallback: function(response) {\n * if (response.result) {\n * // 제품 정보 조회 API 호출\n * console.log('제품 바코드:', response.result_value);\n * }\n * }\n * });\n */\nbizMOB.Window.openCodeReader = function () {\n bizMOB.gateway('Window', 'openCodeReader', [], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 78,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 131,
    "char_count": 455,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0079",
    "content": "/**\n * FileExplorer 띄우기\n *\n * @param {Function} _fCallback 탐색기에서 선택한 파일 정보 결과값을 받을 callback함수.\n * @callback _fCallback\n * @param {Object} response - 파일 탐색기 결과\n * @param {boolean} response.result - 성공 여부\n * @param {Array} response.file_path - 선택된 파일 경로 목록\n * @param {Array} response.uri_path - 선택된 파일 URI 경로 목록\n * @example\n * // 파일 선택 대화상자 열기\n * bizMOB.Window.openFileExplorer({\n * _fCallback: function(response) {\n * if (response.result && response.file_path) {\n * response.file_path.forEach(function(filePath, index) {\n * console.log('선택된 파일 ' + (index + 1) + ':', filePath);",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 79,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 169,
    "char_count": 576,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0080",
    "content": "* console.log('선택된 파일 ' + (index + 1) + ':', filePath);\n * console.log('URI 경로:', response.uri_path[index]);\n * });\n * } else {\n * console.log('파일 선택이 취소되었습니다');\n * }\n * }\n * });\n *\n * // 업로드할 파일 선택\n * bizMOB.Window.openFileExplorer({\n * _fCallback: function(response) {\n * if (response.result) {\n * // 선택된 파일들을 서버에 업로드\n * bizMOB.File.upload({\n * _aFileList: response.file_path.map(function(path) {\n * return { file_path: path };\n * })\n * });\n * }\n * }\n * });\n */\nbizMOB.Window.openFileExplorer = function () {\n bizMOB.gateway('Window', 'openFileExplorer', ['_fCallback'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 80,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 169,
    "char_count": 590,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0081",
    "content": "/**\n * App - 애플리케이션 생명주기 및 세션 관리 시스템\n *\n * @description 모바일 애플리케이션의 생명주기를 관리하고 세션 타임아웃, 앱 종료,\n * 플러그인 호출 등의 앱 레벨 기능을 제어하는 시스템입니다. 앱 환경에서는\n * Native 앱 제어 기능을 완전히 지원하며, 웹 환경에서는 기본 구조만 제공됩니다.\n *\n * **주요 기능:**\n * - 애플리케이션 종료 및 로그아웃 처리\n * - 세션 타임아웃 설정 및 관리\n * - 스플래시 화면 제어\n * - Native 플러그인 호출 및 연동\n * - 앱 상태 및 라이프사이클 관리\n *\n * **환경별 동작:**\n * - **앱 환경**: 모든 Native 앱 제어 기능 완전 지원, 스플래시 화면 및 타임아웃 관리\n * - **웹 환경**: 기본 구조만 제공, 브라우저 환경에 맞는 제한적 기능\n *\n * @class bizMOB.App\n */\nbizMOB.App = new Object();",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 81,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 183,
    "char_count": 490,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0082",
    "content": "/**\n * App 종료\n *\n * @param {String} _sType (Default : kill )어플리케이션 종료 유형( logout 또는 kill )\n * @example\n * // 앱 강제 종료\n * bizMOB.App.exit({ _sType: 'kill' });\n *\n * // 로그아웃 처리 후 종료\n * bizMOB.App.exit({ _sType: 'logout' });\n *\n * // 기본 종료 (kill과 동일)\n * bizMOB.App.exit();\n */\nbizMOB.App.exit = function () {\n bizMOB.gateway('App', 'exit', [], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 82,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 107,
    "char_count": 357,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0083",
    "content": "/**\n * App 자동 종료 시간 설정\n *\n * @param {Number} _nSeconds ( default : 7200 )어플리케이션의 세션 만료 시간(초단위) 설정 값.\n * @example\n * // 30분(1800초) 후 자동 종료 설정\n * bizMOB.App.setTimeout({ _nSeconds: 1800 });\n *\n * // 1시간(3600초) 후 자동 종료 설정\n * bizMOB.App.setTimeout({ _nSeconds: 3600 });\n *\n * // 기본값(2시간, 7200초) 설정\n * bizMOB.App.setTimeout({ _nSeconds: 7200 });\n *\n * // 세션 타임아웃 비활성화 (0으로 설정)\n * bizMOB.App.setTimeout({ _nSeconds: 0 });\n */\nbizMOB.App.setTimeout = function () {\n bizMOB.gateway('App', 'requestTimeout', ['_nSeconds'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 83,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 160,
    "char_count": 531,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0084",
    "content": "/**\n * App 자동 종료 설정 시간 조회\n *\n * @param {Function} _fCallback 세션 만료 시간을 받아서 처리할 Callback 함수.\n * @callback _fCallback\n * @param {Object} response - 세션 타임아웃 조회 결과\n * @param {boolean} response.result - 성공 여부\n * @param {number} response.session_timeout - 세션 만료 시간 (초)\n * @example\n * // 현재 세션 타임아웃 시간 조회\n * bizMOB.App.getTimeout({\n * _fCallback: function(response) {\n * if (response.result) {\n * var timeoutMinutes = Math.floor(response.session_timeout / 60);\n * console.log('현재 세션 타임아웃:', timeoutMinutes + '분');\n *\n * if (response.session_timeout === 0) {\n * console.log('세션 타임아웃이 비활성화되어 있습니다');\n * }",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 84,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 178,
    "char_count": 595,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0085",
    "content": "* console.log('세션 타임아웃이 비활성화되어 있습니다');\n * }\n * }\n * }\n * });\n *\n * // 타임아웃 시간에 따른 UI 처리\n * bizMOB.App.getTimeout({\n * _fCallback: function(response) {\n * if (response.result && response.session_timeout > 0) {\n * // 타이머 UI 표시\n * startSessionTimer(response.session_timeout);\n * }\n * }\n * });\n */\nbizMOB.App.getTimeout = function () {\n bizMOB.gateway('App', 'getTimeout', ['_fCallback'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 85,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 117,
    "char_count": 402,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0086",
    "content": "/**\n * App 스플래시 화면 수동 종료\n *\n * @description 스플래시 화면의 자동 종료를 비활성화한 상태에서 수동으로 스플래시 화면을 닫는 함수.\n * 앱 초기화 로직 완료 후 호출하여 사용자에게 메인 화면을 표시한다.\n *\n * @usage\n * 1. 앱 설정에서 스플래시 자동 종료 비활성화 필요\n * 2. 초기화 로직 (데이터 로드, 설정 확인 등) 완료 후 호출\n * 3. 매개변수 및 콜백 함수 없음\n *\n * @example\n * // 앱 초기화 완료 후 스플래시 화면 닫기\n * function initializeApp() {\n * // 초기화 로직 실행\n * loadUserData();\n * checkAppSettings();\n *\n * // 초기화 완료 후 스플래시 화면 종료\n * bizMOB.App.hideSplash();\n * }\n */\nbizMOB.App.hideSplash = function () {\n bizMOB.gateway('App', 'hideSplash', [], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 86,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 181,
    "char_count": 532,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0087",
    "content": "/**\n * 커스텀 플러그인 호출\n *\n * @param {String} sId 커스텀으로 추가된 플러그인 Call ID.\n * @param {Object} oParam 플러그인에서 사용될 Parameters.\n * @param {Function} oParam.callback 플러그인 실행 결과를 받을 callback 함수.\n * @callback oParam.callback\n * @param {Object} response - 플러그인 실행 결과 (커스텀 데이터 포함)\n * @param {boolean} response.result - 실행 성공 여부 (항상 포함)\n * @param {...*} [response.customData] - 플러그인별 커스텀 응답 데이터 (예: isAppUpdate, storeUrl 등)\n * @example\n * // APP_UPDATE_CHECK 플러그인 호출 예시\n * bizMOB.App.callPlugIn('APP_UPDATE_CHECK', {\n * callback: function(response) {\n * console.log('결과:', response.result);",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 87,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 175,
    "char_count": 574,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0088",
    "content": "* callback: function(response) {\n * console.log('결과:', response.result);\n * console.log('앱 업데이트 필요:', response.isAppUpdate);\n * console.log('스토어 URL:', response.storeUrl);\n * }\n * });\n */\nbizMOB.App.callPlugIn = function (sId, oParam) {\n bizMOB.gateway('ExtendsManager', 'executer', ['_sID'], { _sID: sId, _oParam: oParam });\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 88,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 92,
    "char_count": 328,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0089",
    "content": "/**\n * Contacts - 디바이스 주소록 접근 및 연락처 관리 시스템\n *\n * @description 모바일 디바이스의 주소록(연락처)에 접근하여 연락처 정보를 검색하고\n * 조회하는 시스템입니다. 앱 환경에서는 Native 주소록 API를 통해 완전한 기능을 지원하며,\n * 웹 환경에서는 보안상의 이유로 기본 구조만 제공됩니다.\n *\n * **주요 기능:**\n * - 디바이스 주소록 전체 조회\n * - 이름/전화번호 기반 연락처 검색\n * - 연락처 상세 정보 조회\n * - 연락처 권한 관리 및 접근 제어\n *\n * **환경별 동작:**\n * - **앱 환경**: Native 주소록 API 완전 지원, 연락처 권한 관리 연동\n * - **웹 환경**: 기본 구조만 제공, 브라우저 보안 정책으로 인한 접근 제한\n *\n * @class bizMOB.Contacts\n */\nbizMOB.Contacts = new Object();",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 89,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 175,
    "char_count": 472,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0090",
    "content": "/**\n * 전화번호부 검색\n *\n * @param {String} _sSearchType (Default : \"\", 전체조회) 주소록 검색 대상 필드(name 또는 phone)\n * @param {String} _sSearchText (Default : \"\") 주소록 검색어\n * @param {Function} _fCallback 주소록 검색 결과를 받아 처리할 callback함수\n * @callback _fCallback\n * @param {Object} response - 전화번호부 검색 결과\n * @param {number} response.total_count - 전체 연락처 수\n * @param {number} response.contact_count - 검색된 연락처 수\n * @param {Array} response.list - 연락처 목록\n * @param {string} response.list[].fax_number - 팩스 번호\n * @param {string} response.list[].department - 부서\n * @param {string} response.list[].concurrent - 동시 연락처",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 90,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 176,
    "char_count": 587,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0091",
    "content": "* @param {string} response.list[].concurrent - 동시 연락처\n * @param {string} response.list[].company_telphone - 회사 전화번호\n * @param {string} response.list[].title - 직책\n * @param {string} response.list[].full_name - 이름\n * @param {string} response.list[].email - 이메일\n * @param {string} response.list[].mobile_number - 휴대폰 번호\n * @param {string} response.list[].company_name - 회사명\n * @param {string} response.list[].contact_uid - 연락처 UID\n * @param {string} response.list[].contact_box_id - 연락처 박스 ID\n * @example\n * // 전체 연락처 조회\n * bizMOB.Contacts.get({\n * _fCallback: function(response) {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 91,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 165,
    "char_count": 578,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0092",
    "content": "* // 전체 연락처 조회\n * bizMOB.Contacts.get({\n * _fCallback: function(response) {\n * console.log('전체 연락처 수:', response.total_count);\n * response.list.forEach(function(contact) {\n * console.log(contact.full_name + ': ' + contact.mobile_number);\n * });\n * }\n * });\n *\n * // 이름으로 연락처 검색\n * bizMOB.Contacts.get({\n * _sSearchType: 'name',\n * _sSearchText: '홍길동',\n * _fCallback: function(response) {\n * if (response.contact_count > 0) {\n * console.log('검색된 연락처:', response.list[0].full_name);\n * console.log('전화번호:', response.list[0].mobile_number);\n * } else {\n * console.log('검색 결과가 없습니다');\n * }\n * }\n * });",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 92,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 173,
    "char_count": 597,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0093",
    "content": "* } else {\n * console.log('검색 결과가 없습니다');\n * }\n * }\n * });\n *\n * // 전화번호로 연락처 검색\n * bizMOB.Contacts.get({\n * _sSearchType: 'phone',\n * _sSearchText: '010',\n * _fCallback: function(response) {\n * console.log('010으로 시작하는 연락처 수:', response.contact_count);\n * }\n * });\n */\nbizMOB.Contacts.get = function () {\n bizMOB.gateway('Contacts', 'get', [], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 93,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 106,
    "char_count": 361,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0094",
    "content": "/**\n * File - 파일시스템 및 미디어 처리 관리 시스템\n *\n * @description 모바일 디바이스의 파일시스템에 접근하여 파일 관리, 이미지 처리,\n * 압축/해제, 업로드/다운로드 등의 파일 관련 작업을 수행하는 시스템입니다.\n * 앱 환경에서는 Native 파일시스템 API를 완전히 지원하며, 웹 환경에서는 보안상 제한됩니다.\n *\n * **주요 기능:**\n * - 파일 복사, 이동, 삭제 및 정보 조회\n * - 파일 업로드/다운로드 (서버 연동)\n * - 이미지 리사이징, 회전 등 미디어 처리\n * - ZIP 압축/해제 기능\n * - 디렉토리 생성 및 관리\n *\n * **환경별 동작:**\n * - **앱 환경**: Native 파일시스템 완전 지원, 내부/외부 저장소 접근, 미디어 처리\n * - **웹 환경**: 기본 구조만 제공, 브라우저 보안 정책으로 인한 파일 시스템 접근 제한\n *\n * @class bizMOB.File\n */\nbizMOB.File = new Object();",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 94,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 192,
    "char_count": 512,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0095",
    "content": "/**\n * 파일 열기\n *\n * @param {String} _sSourcePath 열어볼 파일 경로. 기본 설치App으로 연결.\n * @param {Function} _fCallback 파일을 열고 난 후 호출될 callback함수.\n * @callback _fCallback\n * @param {Object} response - 파일 열기 결과\n * @param {boolean} response.result - 성공 여부\n * @param {string} response.file_path - 열린 파일의 경로\n * @example\n * // PDF 파일 열기\n * bizMOB.File.open({\n * _sSourcePath: '{internal}/documents/manual.pdf',\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('파일이 열렸습니다:', response.file_path);\n * } else {\n * console.log('파일 열기에 실패했습니다');\n * }\n * }\n * });\n *\n * // 이미지 파일 기본 앱으로 열기",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 95,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 178,
    "char_count": 591,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0096",
    "content": "* console.log('파일 열기에 실패했습니다');\n * }\n * }\n * });\n *\n * // 이미지 파일 기본 앱으로 열기\n * bizMOB.File.open({\n * _sSourcePath: '{external}/photos/vacation.jpg',\n * _fCallback: function(response) {\n * console.log('이미지 뷰어 실행:', response);\n * }\n * });\n */\nbizMOB.File.open = function () {\n bizMOB.gateway('File', 'open', ['_sSourcePath'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 96,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 100,
    "char_count": 340,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0097",
    "content": "/**\n * 파일 압축\n *\n * @param {String} _sSourcePath 소스 File Path.\n * @param {String} _sTargetPath 결과 File Path.\n * @param {Function} _fCallback 압축 후 호출될 callback함수.\n * @callback _fCallback\n * @param {Object} response - 파일 압축 결과\n * @param {boolean} response.result - 성공 여부\n * @param {string} response.file_path - 압축된 파일의 경로\n * @example\n * // 폴더를 ZIP 파일로 압축\n * bizMOB.File.zip({\n * _sSourcePath: '{internal}/documents/',\n * _sTargetPath: '{external}/backup/documents.zip',\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('압축 완료:', response.file_path);\n * } else {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 97,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 167,
    "char_count": 586,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0098",
    "content": "* console.log('압축 완료:', response.file_path);\n * } else {\n * console.log('압축에 실패했습니다');\n * }\n * }\n * });\n *\n * // 단일 파일 압축\n * bizMOB.File.zip({\n * _sSourcePath: '{internal}/logs/app.log',\n * _sTargetPath: '{external}/archive/logs.zip',\n * _fCallback: function(response) {\n * console.log('로그 압축 결과:', response);\n * }\n * });\n */\nbizMOB.File.zip = function () {\n bizMOB.gateway('File', 'zip', ['_sSourcePath', '_sTargetPath'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 98,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 127,
    "char_count": 440,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0099",
    "content": "/**\n * 파일 압축해제\n *\n * @param {String} _sSourcePath 소스 File Path.\n * @param {String} _sDirectory 압축 해제할 Directory Path.\n * @param {Function} _fCallback 압축 후 호출될 callback함수.\n * @callback _fCallback\n * @param {Object} response - 파일 압축해제 결과\n * @param {boolean} response.result - 성공 여부\n * @param {string} response.file_path - 압축해제된 파일들이 저장된 디렉토리 경로\n * @example\n * // ZIP 파일 압축해제\n * bizMOB.File.unzip({\n * _sSourcePath: '{external}/download/data.zip',\n * _sDirectory: '{internal}/extracted/',\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('압축해제 완료:', response.file_path);",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 99,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 174,
    "char_count": 595,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0100",
    "content": "* if (response.result) {\n * console.log('압축해제 완료:', response.file_path);\n * } else {\n * console.log('압축해제에 실패했습니다');\n * }\n * }\n * });\n *\n * // 백업 파일 복원\n * bizMOB.File.unzip({\n * _sSourcePath: '{external}/backup/app_backup.zip',\n * _sDirectory: '{internal}/restore/',\n * _fCallback: function(response) {\n * console.log('백업 복원 결과:', response);\n * }\n * });\n */\nbizMOB.File.unzip = function () {\n bizMOB.gateway('File', 'unzip', ['_sSourcePath', '_sDirectory'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 100,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 137,
    "char_count": 475,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0101",
    "content": "/**\n * 파일 이동\n *\n * @param {String} _sSourcePath 소스 File Path.\n * @param {String} _sTargetPath 이동될 File Path.\n * @param {Function} _fCallback 이동 후 호출될 callback함수.\n * @callback _fCallback\n * @param {Object} response - 파일 이동 결과\n * @param {boolean} response.result - 성공 여부\n * @param {string} response.file_path - 이동된 파일의 경로\n * @example\n * // 파일 이동\n * bizMOB.File.move({\n * _sSourcePath: '{external}/download/temp.pdf',\n * _sTargetPath: '{internal}/documents/moved.pdf',\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('파일이 이동되었습니다:', response.file_path);\n * } else {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 101,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 170,
    "char_count": 591,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0102",
    "content": "* console.log('파일이 이동되었습니다:', response.file_path);\n * } else {\n * console.log('파일 이동에 실패했습니다');\n * }\n * }\n * });\n *\n * // 임시 파일을 정식 위치로 이동\n * bizMOB.File.move({\n * _sSourcePath: '{internal}/temp/upload.jpg',\n * _sTargetPath: '{internal}/gallery/final.jpg',\n * _fCallback: function(response) {\n * console.log('파일 정리 완료:', response);\n * }\n * });\n */\nbizMOB.File.move = function () {\n bizMOB.gateway('File', 'move', ['_sSourcePath', '_sTargetPath'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 102,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 136,
    "char_count": 464,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0103",
    "content": "/**\n * 파일 복사\n *\n * @param {String} _sSourcePath 소스 File Path.\n * @param {String} _sTargetPath 복사될 File Path.\n * @param {Function} _fCallback 복사 후 호출될 callback함수.\n * @callback _fCallback\n * @param {Object} response - 파일 복사 결과\n * @param {boolean} response.result - 성공 여부\n * @param {string} response.file_path - 복사된 파일의 경로\n * @example\n * // 파일 복사\n * bizMOB.File.copy({\n * _sSourcePath: '{external}/temp.png',\n * _sTargetPath: '{internal}/images/copy.png',\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('파일이 복사되었습니다:', response.file_path);\n * } else {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 103,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 167,
    "char_count": 578,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0104",
    "content": "* console.log('파일이 복사되었습니다:', response.file_path);\n * } else {\n * console.log('파일 복사에 실패했습니다');\n * }\n * }\n * });\n *\n * // 백업 파일 생성\n * bizMOB.File.copy({\n * _sSourcePath: '{internal}/data/important.db',\n * _sTargetPath: '{external}/backup/important_backup.db',\n * _fCallback: function(response) {\n * console.log('백업 완료:', response);\n * }\n * });\n */\nbizMOB.File.copy = function () {\n bizMOB.gateway('File', 'copy', ['_sSourcePath', '_sTargetPath'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 104,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 134,
    "char_count": 464,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0105",
    "content": "/**\n * 파일 삭제\n *\n * @param {Array} _aSourcePath 삭제할 File Path 목록.\n * @param {Function} _fCallback 삭제 후 호출될 callback함수.\n * @callback _fCallback\n * @param {Object} response - 파일 삭제 결과\n * @param {boolean} response.result - 성공 여부\n * @param {Array} response.list - 삭제된 파일 목록\n * @param {boolean} response.list[].result - 각 파일의 삭제 성공 여부\n * @param {string} response.list[].file_path - 삭제된 파일 경로\n * @example\n * // 단일 파일 삭제\n * bizMOB.File.remove({\n * _aSourcePath: ['{internal}/temp/cache.tmp'],\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('파일이 삭제되었습니다');\n * }\n * }\n * });\n *",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 105,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 176,
    "char_count": 597,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0106",
    "content": "* if (response.result) {\n * console.log('파일이 삭제되었습니다');\n * }\n * }\n * });\n *\n * // 여러 파일 일괄 삭제\n * bizMOB.File.remove({\n * _aSourcePath: [\n * '{internal}/temp/file1.tmp',\n * '{internal}/temp/file2.tmp',\n * '{internal}/temp/file3.tmp'\n * ],\n * _fCallback: function(response) {\n * response.list.forEach(function(item) {\n * if (item.result) {\n * console.log('삭제 완료:', item.file_path);\n * } else {\n * console.log('삭제 실패:', item.file_path);\n * }\n * });\n * }\n * });\n */\nbizMOB.File.remove = function () {\n bizMOB.gateway('File', 'remove', ['_aSourcePath'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 106,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 161,
    "char_count": 566,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0107",
    "content": "/**\n * 디렉토리 정보 읽기\n *\n * @param {String} _sDirectory 읽어올 Directory Path.\n * @param {Function} _fCallback 디렉토리 정보 조회 후 호출될 callback함수.\n * @callback _fCallback\n * @param {Object} response - 디렉토리 조회 결과\n * @param {boolean} response.result - 성공 여부\n * @param {Array} response.directory_info - 디렉토리 내 파일/폴더 목록\n * @param {string} response.directory_info[].file_path - 파일/폴더 경로\n * @param {boolean} response.directory_info[].is_directory - 디렉토리 여부\n * @example\n * // 디렉토리 내용 조회\n * bizMOB.File.directory({\n * _sDirectory: '{internal}/photos/',\n * _fCallback: function(response) {\n * if (response.result) {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 107,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 173,
    "char_count": 592,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0108",
    "content": "* _fCallback: function(response) {\n * if (response.result) {\n * response.directory_info.forEach(function(item) {\n * if (item.is_directory) {\n * console.log('폴더:', item.file_path);\n * } else {\n * console.log('파일:', item.file_path);\n * }\n * });\n * }\n * }\n * });\n *\n * // 다운로드 폴더 파일 목록 확인\n * bizMOB.File.directory({\n * _sDirectory: '{external}/download/',\n * _fCallback: function(response) {\n * console.log('다운로드 파일 수:', response.directory_info.length);\n * }\n * });\n */\nbizMOB.File.directory = function () {\n bizMOB.gateway('File', 'directory', ['_sDirectory'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 108,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 162,
    "char_count": 576,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0109",
    "content": "/**\n * 파일 존재 여부 확인\n *\n * @param {String} _sSourcePath 확인할 File Path.\n * @param {Function} _fCallback 확인 후 호출될 callback함수.\n * @callback _fCallback\n * @param {Object} response - 파일 존재 여부 확인 결과\n * @param {boolean} response.result - 성공 여부 (파일 존재 시 true, 없으면 false)\n * @param {string} response.file_path - 확인한 파일 경로\n * @example\n * // 파일 존재 여부 확인\n * bizMOB.File.exist({\n * _sSourcePath: '{internal}/config/settings.json',\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('파일이 존재합니다:', response.file_path);\n * } else {\n * console.log('파일이 존재하지 않습니다');\n * }\n * }\n * });\n *",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 109,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 177,
    "char_count": 592,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0110",
    "content": "* } else {\n * console.log('파일이 존재하지 않습니다');\n * }\n * }\n * });\n *\n * // 백업 파일 확인 후 처리\n * bizMOB.File.exist({\n * _sSourcePath: '{external}/backup/data.bak',\n * _fCallback: function(response) {\n * if (response.result) {\n * // 백업 파일이 있으면 복원 진행\n * console.log('백업 파일 발견, 복원을 시작합니다');\n * } else {\n * console.log('백업 파일이 없습니다');\n * }\n * }\n * });\n */\nbizMOB.File.exist = function () {\n bizMOB.gateway('File', 'exist', ['_sSourcePath'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 110,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 135,
    "char_count": 444,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0111",
    "content": "/**\n * 파일 다운로드\n *\n * @param {Array} _aFileList 다운로드할 URL 주소 목록.\n * @param {String} _sMode 파일 다운로드 모드. (background 또는 foreground ).\n * @param {String} _sProgressBar 다운로드할 때 프로그래스바 설정 값.( off , each, full )\n * @param {Function} _fCallback 결과를 받을 callback 함수.\n * @callback _fCallback\n * @param {Object} response - 다운로드 결과\n * @param {boolean} response.result - 성공 여부\n * @param {Array} response.list - 다운로드된 파일 목록\n * @param {boolean} response.list[].result - 각 파일의 다운로드 성공 여부\n * @param {string} response.list[].file_path - 다운로드된 파일 경로\n * @param {string} response.list[].message - 메시지",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 111,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 174,
    "char_count": 578,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0112",
    "content": "* @param {string} response.list[].message - 메시지\n * @param {number} response.list[].file_id - 파일 ID\n * @param {number} response.list[].total_count - 전체 파일 수\n * @param {number} response.list[].current_count - 현재 다운로드된 파일 수\n * @example\n * // 단일 파일 다운로드\n * bizMOB.File.download({\n * _aFileList: [{\n * url: 'https://example.com/files/document.pdf',\n * file_path: '{external}/download/document.pdf'\n * }],\n * _sMode: 'foreground',\n * _sProgressBar: 'full',\n * _fCallback: function(response) {\n * if (response.result && response.list[0].result) {\n * console.log('다운로드 완료:', response.list[0].file_path);",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 112,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 168,
    "char_count": 595,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0113",
    "content": "* console.log('다운로드 완료:', response.list[0].file_path);\n * }\n * }\n * });\n *\n * // 여러 파일 백그라운드 다운로드\n * bizMOB.File.download({\n * _aFileList: [\n * { url: 'https://example.com/file1.jpg', file_path: '{external}/images/file1.jpg' },\n * { url: 'https://example.com/file2.jpg', file_path: '{external}/images/file2.jpg' }\n * ],\n * _sMode: 'background',\n * _sProgressBar: 'each',\n * _fCallback: function(response) {\n * console.log('전체 다운로드 진행률:', response.list[0].current_count + '/' + response.list[0].total_count);\n * }\n * });\n */\nbizMOB.File.download = function () {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 113,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 160,
    "char_count": 560,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0114",
    "content": "/**\n * 파일 업로드\n *\n * @param {Array} _aFileList 업로드할 File Path 목록.\n * @param {Function} _fCallback 결과를 받을 callback 함수.\n * @callback _fCallback\n * @param {Object} response - 업로드 결과\n * @param {boolean} response.result - 성공 여부\n * @param {Array} response.list - 업로드된 파일 목록\n * @param {boolean} response.list[].result - 각 파일의 업로드 성공 여부\n * @param {string} response.list[].uid - 업로드된 파일의 고유 ID\n * @param {string} response.list[].file_name - 업로드된 파일명\n * @param {string} response.exception_msg - 예외 메시지\n * @example\n * // 단일 파일 업로드\n * bizMOB.File.upload({\n * _aFileList: [{",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 114,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 166,
    "char_count": 560,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0115",
    "content": "* @example\n * // 단일 파일 업로드\n * bizMOB.File.upload({\n * _aFileList: [{\n * file_path: '{internal}/photos/photo.jpg',\n * server_url: 'https://api.example.com/upload'\n * }],\n * _fCallback: function(response) {\n * if (response.result && response.list[0].result) {\n * console.log('업로드 완료:', response.list[0].uid);\n * console.log('파일명:', response.list[0].file_name);\n * } else {\n * console.log('업로드 실패:', response.exception_msg);\n * }\n * }\n * });\n *\n * // 여러 파일 일괄 업로드\n * bizMOB.File.upload({\n * _aFileList: [\n * { file_path: '{internal}/documents/report.pdf' },",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 115,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 158,
    "char_count": 554,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0116",
    "content": "* _aFileList: [\n * { file_path: '{internal}/documents/report.pdf' },\n * { file_path: '{internal}/images/chart.png' }\n * ],\n * _fCallback: function(response) {\n * response.list.forEach(function(item, index) {\n * if (item.result) {\n * console.log('파일 ' + (index + 1) + ' 업로드 성공:', item.uid);\n * }\n * });\n * }\n * });\n */\nbizMOB.File.upload = function () {\n bizMOB.gateway('File', 'upload', ['_aFileList'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 116,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 117,
    "char_count": 420,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0117",
    "content": "/**\n * 파일 정보 가져오기\n *\n * @param {Array} _aFileList 정보를 가져올 File Path 목록.\n * @param {Function} _fCallback 결과를 받을 callback 함수.\n * @callback _fCallback\n * @param {Object} response - 파일 정보 조회 결과\n * @param {boolean} response.result - 성공 여부\n * @param {Array} response.list - 파일 정보 목록\n * @param {string} response.list[].path - 파일 경로\n * @param {Object} response.list[].detail - 파일 상세 정보\n * @param {number} response.list[].detail.width - 이미지 너비 (-1은 해당 없음)\n * @param {number} response.list[].detail.height - 이미지 높이 (-1은 해당 없음)\n * @param {string} response.list[].index - 파일 인덱스",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 117,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 168,
    "char_count": 566,
    "created_at": "2025-08-01T15:32:20.351Z"
  },
  {
    "id": "e38eec38_0118",
    "content": "* @param {string} response.list[].index - 파일 인덱스\n * @param {number} response.list[].file_size - 파일 크기 (bytes)\n * @param {boolean} response.list[].result - 각 파일 조회 성공 여부\n * @example\n * // 여러 파일의 정보 조회\n * bizMOB.File.getInfo({\n * _aFileList: [\n * '/storage/photos/image1.jpg',\n * '/storage/documents/report.pdf',\n * '/storage/videos/video1.mp4'\n * ],\n * _fCallback: function(response) {\n * if (response.result) {\n * response.list.forEach(function(fileInfo) {\n * console.log('파일: ' + fileInfo.path);\n * console.log('크기: ' + fileInfo.file_size + ' bytes');\n * if (fileInfo.detail.width > 0) {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 118,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 166,
    "char_count": 588,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0119",
    "content": "* if (fileInfo.detail.width > 0) {\n * console.log('이미지 해상도: ' + fileInfo.detail.width + 'x' + fileInfo.detail.height);\n * }\n * });\n * }\n * }\n * });\n */\nbizMOB.File.getInfo = function () {\n bizMOB.gateway('File', 'getInfo', ['_aFileList'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 119,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 71,
    "char_count": 256,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0120",
    "content": "/**\n * 이미지 파일 리사이즈\n *\n * @param {Array} _aFileList 이미지 파일 목록.\n * @param {Boolean} _bIsCopy (Default : false) 원본 파일 유지 여부. (true 또는 false)\n * @param {String} _sTargetDirectory _bIsCopy가 true일 경우 복사본이 저장될 디렉토리 경로.\n * @param {Number} _nWidth 파일의 가로 크기를 설정.\n * @param {Number} _nHeight 파일의 세로 크기를 설정.\n * @param {Number} _nCompressRate Number X (Default : 1.0) 파일의 압축률 값( 0.0부터 1.0까지 값 지정가능 )\n * @param {Number} _nFileSize 리사이즈 된 파일 용량의 최대값.( byte단위 )\n * @param {Function} _fCallback 결과를 받아 처리할 callback 함수.\n * @callback _fCallback\n * @param {Object} response - 이미지 리사이즈 결과",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 120,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 178,
    "char_count": 568,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0121",
    "content": "* @callback _fCallback\n * @param {Object} response - 이미지 리사이즈 결과\n * @param {boolean} response.result - 성공 여부\n * @param {Array} response.list - 리사이즈된 이미지 목록\n * @param {string} response.list[].origin_path - 원본 이미지 파일 경로\n * @param {string} response.list[].target_path - 리사이즈된 이미지 파일 경로\n * @example\n * // 썸네일 생성 (원본 유지, 압축률 적용)\n * bizMOB.File.resizeImage({\n * _aFileList: ['/storage/photos/original.jpg'],\n * _bIsCopy: true,\n * _sTargetDirectory: '/storage/thumbnails/',\n * _nWidth: 300,\n * _nHeight: 300,\n * _nCompressRate: 0.8,\n * _nFileSize: 102400, // 100KB 최대\n * _fCallback: function(response) {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 121,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 174,
    "char_count": 596,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0122",
    "content": "* _nFileSize: 102400, // 100KB 최대\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('썸네일 생성 완료: ' + response.list[0].target_path);\n * }\n * }\n * });\n *\n * // 프로필 이미지 최적화 (원본 덮어쓰기)\n * bizMOB.File.resizeImage({\n * _aFileList: ['/storage/profile/avatar.jpg'],\n * _bIsCopy: false,\n * _nWidth: 500,\n * _nHeight: 500,\n * _nCompressRate: 0.9,\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('프로필 이미지 최적화 완료');\n * }\n * }\n * });\n */\nbizMOB.File.resizeImage = function () {\n bizMOB.gateway('File', 'resizeImage', ['_aFileList'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 122,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 169,
    "char_count": 591,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0123",
    "content": "/**\n * 이미지 파일 회전\n *\n * @param {String} _sSourcePath 이미지 File Path.\n * @param {String} _sTargetPath 회전된 이미지가 저장될 Path.\n * @param {Number} _nOrientation 회전 시킬 각도(EXIF_Orientation)값.(1, 2, 3, 4, 5, 6, 7, 8 )\n * @param {Function} _fCallback 결과를 받아 처리할 callback 함수.\n * @callback _fCallback\n * @param {Object} response - 이미지 회전 결과\n * @param {boolean} response.result - 성공 여부\n * @param {string} response.path - 회전된 이미지 파일의 저장 경로\n * @example\n * // 세로로 찍힌 사진을 가로로 회전 (90도 시계방향)\n * bizMOB.File.rotateImage({\n * _sSourcePath: '/storage/photos/portrait.jpg',",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 123,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 164,
    "char_count": 546,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0124",
    "content": "* bizMOB.File.rotateImage({\n * _sSourcePath: '/storage/photos/portrait.jpg',\n * _sTargetPath: '/storage/photos/portrait_rotated.jpg',\n * _nOrientation: 6, // 90도 시계방향 회전\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('이미지 회전 완료: ' + response.path);\n * } else {\n * console.log('이미지 회전 실패');\n * }\n * }\n * });\n *\n * // EXIF 정보에 따른 자동 회전 보정\n * bizMOB.File.rotateImage({\n * _sSourcePath: '/storage/camera/IMG_001.jpg',\n * _sTargetPath: '/storage/camera/IMG_001_corrected.jpg',\n * _nOrientation: 3, // 180도 회전\n * _fCallback: function(response) {\n * if (response.result) {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 124,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 168,
    "char_count": 595,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0125",
    "content": "* _fCallback: function(response) {\n * if (response.result) {\n * console.log('EXIF 회전 보정 완료');\n * }\n * }\n * });\n */\nbizMOB.File.rotateImage = function () {\n bizMOB.gateway('File', 'rotateImage', ['_sSourcePath', '_sTargetPath', '_nOrientation'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 125,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 73,
    "char_count": 262,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0126",
    "content": "/**\n * Push - 실시간 푸시 메시징 및 알림 관리 시스템\n *\n * @description bizPush 서버와 연동하여 실시간 푸시 메시지 송수신, 알림 관리,\n * 배지 카운트 등의 푸시 서비스를 제공하는 시스템입니다. 앱 환경에서는\n * Native Push 서비스를 완전히 지원하며, 웹 환경에서는 기본 구조만 제공됩니다.\n *\n * **주요 기능:**\n * - 푸시 서버 등록 및 키 관리\n * - 실시간 푸시 메시지 송수신\n * - 읽지 않은 메시지 카운트 관리\n * - 앱 배지 카운트 설정\n * - 푸시 알림 및 알람 관리\n *\n * **환경별 동작:**\n * - **앱 환경**: Native Push 서비스 완전 지원, FCM/APNS 연동, 백그라운드 수신\n * - **웹 환경**: 기본 구조만 제공, 브라우저 알림 API 제한적 활용\n *\n * @class bizMOB.Push\n */\nbizMOB.Push = new Object();",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 126,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 176,
    "char_count": 485,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0127",
    "content": "/**\n * 푸시 기본 저장 정보 초기화\n *\n * @param {Function} _fCallback 결과를 받아 처리할 callback 함수.\n * @callback _fCallback\n * @param {Object} response - 푸시 정보 초기화 결과\n * @param {boolean} response.result - 성공 여부\n * @example\n * // 푸시 설정 초기화\n * bizMOB.Push.reset({\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('푸시 설정이 초기화되었습니다');\n * } else {\n * console.log('푸시 설정 초기화에 실패했습니다');\n * }\n * }\n * });\n *\n * // 앱 재설치 시 푸시 정보 재설정\n * bizMOB.Push.reset({\n * _fCallback: function(response) {\n * if (response.result) {\n * // 초기화 후 새로운 푸시 키 발급\n * bizMOB.Push.getPushKey({",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 127,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 174,
    "char_count": 570,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0128",
    "content": "* if (response.result) {\n * // 초기화 후 새로운 푸시 키 발급\n * bizMOB.Push.getPushKey({\n * _fCallback: function(keyResponse) {\n * console.log('새 푸시 키:', keyResponse.resultMessage);\n * }\n * });\n * }\n * }\n * });\n */\nbizMOB.Push.reset = function () {\n bizMOB.gateway('PushManager', 'reset', [], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 128,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 85,
    "char_count": 298,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0129",
    "content": "/**\n * 푸시키 정보 조회\n *\n * @param {Function} _fCallback 결과를 받아 처리할 callback 함수.\n * @param {Boolean} _bProgressEnable (default:true) 푸시 서버와 통신 중일때 화면에 progress 를 표시할지에 대한 여부( true 또는 false )\n * @callback _fCallback\n * @param {Object} response - 푸시키 조회 결과\n * @param {boolean} response.result - 성공 여부\n * @param {string} response.resultCode - 결과 코드\n * @param {string} response.resultMessage - 푸시키\n * @example\n * // 현재 디바이스의 푸시키 조회\n * bizMOB.Push.getPushKey({\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('푸시키:', response.resultMessage);\n * // 서버에 푸시키 등록",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 129,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 173,
    "char_count": 577,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0130",
    "content": "* console.log('푸시키:', response.resultMessage);\n * // 서버에 푸시키 등록\n * registerPushKeyToServer(response.resultMessage);\n * } else {\n * console.log('푸시키 조회 실패:', response.resultCode);\n * }\n * }\n * });\n *\n * // 프로그레스 없이 푸시키 조회\n * bizMOB.Push.getPushKey({\n * _bProgressEnable: false,\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('백그라운드 푸시키 조회 완료');\n * }\n * }\n * });\n */\nbizMOB.Push.getPushKey = function () {\n bizMOB.gateway('PushManager', 'getPushKey', ['_fCallback'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 130,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 148,
    "char_count": 512,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0131",
    "content": "/**\n * 푸시서버에 사용자 정보 등록\n *\n * @param {String} _sServerType 푸시키를 등록할 서버 타입.( bizpush 또는 push )\n * @param {String_sUserId} 푸시키를 등록할 사용자 아이디.\n * @param {String} _sAppName 푸시키를 등록할 앱 이름.\n * @param {Function} _fCallback 결과를 받아 처리할 callback 함수.\n * @param {Boolean} _bProgressEnable (default:true) 푸시 서버와 통신 중일때 화면에 progress 를 표시할지에 대한 여부( true 또는 false )\n * @callback _fCallback\n * @param {Object} response - 푸시 서버 등록 결과\n * @param {boolean} response.result - 성공 여부\n * @param {string} response.resultCode - 결과 코드\n * @param {string} response.resultMessage - 결과 메시지\n * @example\n * // bizPush 서버에 사용자 등록",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 131,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 182,
    "char_count": 592,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0132",
    "content": "* @example\n * // bizPush 서버에 사용자 등록\n * bizMOB.Push.registerToServer({\n * _sServerType: 'bizpush',\n * _sUserId: 'user@example.com',\n * _sAppName: 'MyMobileApp',\n * _bProgressEnable: true,\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('푸시 서버 등록 성공');\n * // 등록 완료 후 알람 설정 등 추가 작업 수행\n * } else {\n * console.log('등록 실패: ' + response.resultMessage);\n * }\n * }\n * });\n *\n * // 일반 푸시 서버에 등록 (progress 숨김)\n * bizMOB.Push.registerToServer({\n * _sServerType: 'push',\n * _sUserId: 'admin',\n * _sAppName: 'AdminApp',\n * _bProgressEnable: false,\n * _fCallback: function(response) {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 132,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 172,
    "char_count": 598,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0133",
    "content": "* _bProgressEnable: false,\n * _fCallback: function(response) {\n * console.log('등록 결과:', response.resultCode);\n * }\n * });\n */\nbizMOB.Push.registerToServer = function () {\n bizMOB.gateway('PushManager', 'registerToServer', ['_sServerType', '_sUserId', '_sAppName'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 133,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 77,
    "char_count": 282,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0134",
    "content": "/**\n * 푸시 알람 수신여부 설정\n *\n * @param {String} _sUserId 푸시 알림 설정을 등록할 사용자 이이디.\n * @param {Boolean} _bEnabled (Default : true) 알람 수신 여부 설정 ( true 또는 false )\n * @param {Boolean} _bProgressEnable (Default:true) 푸시 알람 설정 요청시 화면에 progress 표시 여부( true 또는 false )\n * @param {Function} _fCallback 결과를 받아 처리할 callback 함수.\n * @callback _fCallback\n * @param {Object} response - 푸시 알람 설정 결과\n * @param {boolean} response.result - 성공 여부\n * @param {string} response.resultCode - 결과 코드\n * @param {string} response.resultMessage - 결과 메시지\n * @example\n * // 푸시 알람 활성화\n * bizMOB.Push.setAlarm({",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 134,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 173,
    "char_count": 570,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0135",
    "content": "* @example\n * // 푸시 알람 활성화\n * bizMOB.Push.setAlarm({\n * _sUserId: 'user@example.com',\n * _bEnabled: true,\n * _bProgressEnable: true,\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('푸시 알람이 활성화되었습니다');\n * } else {\n * console.log('알람 설정 실패: ' + response.resultMessage);\n * }\n * }\n * });\n *\n * // 푸시 알람 비활성화 (조용한 모드)\n * bizMOB.Push.setAlarm({\n * _sUserId: 'user@example.com',\n * _bEnabled: false,\n * _bProgressEnable: false,\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('푸시 알람이 비활성화되었습니다');\n * }\n * }\n * });\n */",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 135,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 166,
    "char_count": 569,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0136",
    "content": "* console.log('푸시 알람이 비활성화되었습니다');\n * }\n * }\n * });\n */\nbizMOB.Push.setAlarm = function () {\n bizMOB.gateway('PushManager', 'setAlarm', ['_sUserId'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 136,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 50,
    "char_count": 167,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0137",
    "content": "/**\n * 푸시 알람 수신여부 조회\n *\n * @param {String} _sUserId 푸시 알림 설정을 조회할 사용자 이이디.\n * @param {Boolean} _bProgressEnable (Default:true) 푸시 알람 설정 요청시 화면에 progress 표시 여부( true 또는 false )\n * @param {Function} _fCallback 결과를 받아 처리할 callback 함수.\n * @callback _fCallback\n * @param {Object} response - 푸시 알람 조회 결과\n * @param {boolean} response.result - 성공 여부\n * @param {string} response.resultCode - 결과 코드\n * @param {string} response.resultMessage - 결과 메시지\n * @example\n * // 현재 푸시 알람 설정 상태 확인\n * bizMOB.Push.getAlarm({\n * _sUserId: 'user@example.com',\n * _bProgressEnable: true,\n * _fCallback: function(response) {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 137,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 179,
    "char_count": 597,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0138",
    "content": "* _bProgressEnable: true,\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('알람 설정 조회 성공');\n * // response.data에서 알람 활성화 상태 확인 가능\n * } else {\n * console.log('알람 설정 조회 실패: ' + response.resultMessage);\n * }\n * }\n * });\n *\n * // 백그라운드에서 조용히 확인 (progress 숨김)\n * bizMOB.Push.getAlarm({\n * _sUserId: 'user@example.com',\n * _bProgressEnable: false,\n * _fCallback: function(response) {\n * if (response.result) {\n * // 설정 UI 업데이트 등\n * }\n * }\n * });\n */\nbizMOB.Push.getAlarm = function () {\n bizMOB.gateway('PushManager', 'getAlarm', ['_sUserId'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 138,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 168,
    "char_count": 582,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0139",
    "content": "/**\n * 푸시 수신 목록 조회\n *\n * @param {String} _sAppName 푸시 서버에 등록된 앱 이름.\n * @param {String} _sUserId 푸시 메세지를 조회할 사용자 이이디.\n * @param {Number} _nPageIndex 푸시 메세지를 가져올 페이징 값.\n * @param {Number} _nItemCount 푸시 메세지를 가져올 페이징 처리 갯수\n * @param {Boolean} _bProgressEnable (default:true) 푸시 서버와 통신 중일때 화면에 progress 를 표시할지에 대한 여부( true 또는 false )\n * @param {Function} _fCallback 결과를 받아 처리할 callback 함수.\n * @callback _fCallback\n * @param {Object} response - 푸시 메시지 목록 조회 결과\n * @param {boolean} response.result - 성공 여부\n * @param {string} response.resultCode - 결과 코드\n * @param {string} response.resultMessage - 결과 메시지",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 139,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 187,
    "char_count": 597,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0140",
    "content": "* @param {string} response.resultMessage - 결과 메시지\n * @example\n * // 최신 푸시 메시지 목록 조회 (첫 페이지, 20개)\n * bizMOB.Push.getMessageList({\n * _sAppName: 'MyMobileApp',\n * _sUserId: 'user@example.com',\n * _nPageIndex: 0,\n * _nItemCount: 20,\n * _bProgressEnable: true,\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('메시지 목록 조회 성공');\n * // response.data.list에서 메시지 목록 확인\n * response.data.list.forEach(function(message) {\n * console.log('메시지: ' + message.title);\n * });\n * } else {\n * console.log('메시지 조회 실패: ' + response.resultMessage);\n * }\n * }\n * });\n *\n * // 다음 페이지 조회 (페이징)",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 140,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 174,
    "char_count": 595,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0141",
    "content": "* }\n * }\n * });\n *\n * // 다음 페이지 조회 (페이징)\n * bizMOB.Push.getMessageList({\n * _sAppName: 'MyMobileApp',\n * _sUserId: 'user@example.com',\n * _nPageIndex: 1,\n * _nItemCount: 10,\n * _bProgressEnable: false,\n * _fCallback: function(response) {\n * if (response.result) {\n * // 추가 메시지 목록 처리\n * }\n * }\n * });\n */\nbizMOB.Push.getMessageList = function () {\n bizMOB.gateway('PushManager', 'getMessageList', ['_sAppName', '_nPageIndex', '_nItemCount', '_sUserId', '_fCallback'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 141,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 136,
    "char_count": 484,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0142",
    "content": "/**\n * 푸시 메세지 읽기\n *\n * @param {String} _sTrxDay 푸시 메세지를 읽은 날짜.(yyyymmdd)\n * @param {String} _sTrxId 푸시 메세지 아이디.\n * @param {String} _sUserId 사용자 아이디.\n * @param {Boolean} _bProgressEnable (Default:true) 푸시 알람 설정 요청시 화면에 progress 표시 여부( true 또는 false )\n * @param {Function} _fCallback 결과를 받아 처리할 callback 함수.\n * @callback _fCallback\n * @param {Object} response - 푸시 메시지 읽기 결과\n * @param {boolean} response.result - 성공 여부\n * @param {string} response.resultCode - 결과 코드\n * @param {string} response.resultMessage - 결과 메시지\n * @example\n * // 특정 푸시 메시지 읽음 처리\n * bizMOB.Push.readMessage({",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 142,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 174,
    "char_count": 577,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0143",
    "content": "* @example\n * // 특정 푸시 메시지 읽음 처리\n * bizMOB.Push.readMessage({\n * _sTrxDay: '20241201',\n * _sTrxId: '103',\n * _sUserId: 'user@example.com',\n * _bProgressEnable: true,\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('메시지 읽음 처리 완료');\n * // 읽지 않은 메시지 카운트 업데이트\n * updateUnreadCount();\n * } else {\n * console.log('읽음 처리 실패: ' + response.resultMessage);\n * }\n * }\n * });\n *\n * // 백그라운드에서 조용히 읽음 처리\n * bizMOB.Push.readMessage({\n * _sTrxDay: '20241201',\n * _sTrxId: '104',\n * _sUserId: 'user@example.com',\n * _bProgressEnable: false,\n * _fCallback: function(response) {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 143,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 171,
    "char_count": 589,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0144",
    "content": "* _bProgressEnable: false,\n * _fCallback: function(response) {\n * if (response.result) {\n * // UI 업데이트 등 후속 처리\n * }\n * }\n * });\n */\nbizMOB.Push.readMessage = function () {\n bizMOB.gateway('PushManager', 'readMessage', ['_sTrxDay', '_sTrxId', '_sUserId'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 144,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 77,
    "char_count": 272,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0145",
    "content": "/**\n * 읽지 않은 푸시 메세지 카운트 조회\n *\n * @param {String} _sAppName 푸시 서버에 등록된 앱 이름.\n * @param {String} _sUserId 푸시 메세지를 조회할 사용자 이이디.\n * @param {Boolean} _bProgressEnable (Default:true) 푸시 알람 설정 요청시 화면에 progress 표시 여부( true 또는 false )\n * @param {Function} _fCallback 결과를 받아 처리할 callback 함수.\n * @callback _fCallback\n * @param {Object} response - 읽지 않은 메시지 수 조회 결과\n * @param {boolean} response.result - 성공 여부\n * @param {string} response.resultCode - 결과 코드\n * @param {string} response.resultMessage - 결과 메시지\n * @example\n * // 읽지 않은 메시지 수 조회 및 배지 업데이트\n * bizMOB.Push.getUnreadCount({",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 145,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 176,
    "char_count": 570,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0146",
    "content": "* @example\n * // 읽지 않은 메시지 수 조회 및 배지 업데이트\n * bizMOB.Push.getUnreadCount({\n * _sAppName: 'MyMobileApp',\n * _sUserId: 'user@example.com',\n * _bProgressEnable: true,\n * _fCallback: function(response) {\n * if (response.result) {\n * var unreadCount = response.data.unreadCount;\n * console.log('읽지 않은 메시지: ' + unreadCount + '개');\n *\n * // 앱 배지에 카운트 표시\n * bizMOB.Push.setBadgeCount({\n * _nBadgeCount: unreadCount,\n * _fCallback: function(badgeResponse) {\n * console.log('배지 업데이트 완료');\n * }\n * });\n * } else {\n * console.log('카운트 조회 실패: ' + response.resultMessage);\n * }\n * }\n * });\n *",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 146,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 167,
    "char_count": 577,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0147",
    "content": "* console.log('카운트 조회 실패: ' + response.resultMessage);\n * }\n * }\n * });\n *\n * // 정기적인 카운트 체크 (백그라운드)\n * setInterval(function() {\n * bizMOB.Push.getUnreadCount({\n * _sAppName: 'MyMobileApp',\n * _sUserId: 'user@example.com',\n * _bProgressEnable: false,\n * _fCallback: function(response) {\n * if (response.result) {\n * updateUnreadBadge(response.data.unreadCount);\n * }\n * }\n * });\n * }, 30000); // 30초마다 체크\n */\nbizMOB.Push.getUnreadCount = function () {\n bizMOB.gateway('PushManager', 'getUnreadMessageCount', ['_sAppName', '_sUserId', '_fCallback'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 147,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 158,
    "char_count": 566,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0148",
    "content": "/**\n * 앱 아이콘에 숫자 표시하기\n *\n * @param {Number} _nBadgeCount 뱃지에 표시할 값 .( 양수 : 표시할 갯수 , 0 : 뱃지카운트 초기화 )\n * @param {Function} _fCallback 결과를 받아 처리할 callback 함수.\n * @callback _fCallback\n * @param {Object} response - 뱃지 카운트 설정 결과\n * @param {boolean} response.result - 성공 여부\n * @example\n * // 앱 아이콘에 뱃지 숫자 표시\n * bizMOB.Push.setBadgeCount({\n * _nBadgeCount: 5,\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('앱 아이콘에 뱃지 5개가 표시되었습니다');\n * }\n * }\n * });\n *\n * // 뱃지 카운트 초기화 (숫자 제거)\n * bizMOB.Push.setBadgeCount({\n * _nBadgeCount: 0,\n * _fCallback: function(response) {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 148,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 180,
    "char_count": 586,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0149",
    "content": "* _nBadgeCount: 0,\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('앱 아이콘의 뱃지가 제거되었습니다');\n * }\n * }\n * });\n *\n * // 읽지 않은 메시지 수에 따라 뱃지 설정\n * bizMOB.Push.getUnreadCount({\n * _sAppName: 'MyApp',\n * _sUserId: 'user@example.com',\n * _fCallback: function(countResponse) {\n * if (countResponse.result) {\n * bizMOB.Push.setBadgeCount({\n * _nBadgeCount: countResponse.unreadCount\n * });\n * }\n * }\n * });\n */\nbizMOB.Push.setBadgeCount = function () {\n bizMOB.gateway('PushManager', 'setBadgeCount', ['_nBadgeCount'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 149,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 156,
    "char_count": 554,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0150",
    "content": "/**\n * 푸시 메세지 발송\n *\n * @param {String} _sAppName 푸시 메세지 보낼 앱 이름.\n * @param {Array} _aUsers 푸시 메세지 받을 사용자 목록.\n * @param {String} _sFromUser 푸시 메세지를 보낼 사용자 아이디.\n * @param {String} _sSubject 푸시 메세지 제목.\n * @param {String} _sContent 푸시 메세지 내용.\n * @param {String} _sTrxType (Default : INSTANT) 푸시 메세지 전송 방식.( INSTANT 또는 SCHEDULE )\n * @param {String} _sScheduleDate 푸시 메세지 전송 날짜.\n * @param {Array} _aGroups 푸시 메세지를 받을 그룹 목록\n * @param {Boolean} _bToAll (Default : false) 해당 앱을 사용하는 전체 사용자에게 푸시 메세지를 발송할지 여부.\n * @param {String} _sCategory (Default : def) 푸시 메세지 카테고리.",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 150,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 178,
    "char_count": 558,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0151",
    "content": "* @param {String} _sCategory (Default : def) 푸시 메세지 카테고리.\n * @param {Object} _oPayLoad 푸시 기폰 용량 초과시 전달할 메세지.\n * @param {Boolean} _bProgressEnable (Default:true) 푸시 알람 설정 요청시 화면에 progress 표시 여부( true 또는 false )\n * @param {Function} _fCallback 결과를 받아 처리할 callback 함수.\n * @callback _fCallback\n * @param {Object} response - 푸시 메시지 발송 결과\n * @param {boolean} response.result - 성공 여부\n * @param {string} response.resultCode - 결과 코드\n * @param {string} response.resultMessage - 결과 메시지\n * @example\n * // 특정 사용자들에게 즉시 푸시 메시지 발송\n * bizMOB.Push.sendMessage({\n * _sAppName: 'MyMobileApp',",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 151,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 174,
    "char_count": 573,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0152",
    "content": "* bizMOB.Push.sendMessage({\n * _sAppName: 'MyMobileApp',\n * _aUsers: ['user1@example.com', 'user2@example.com'],\n * _sFromUser: 'admin@company.com',\n * _sSubject: '중요 공지사항',\n * _sContent: '시스템 점검이 오늘 오후 6시에 진행됩니다.',\n * _sTrxType: 'INSTANT',\n * _sCategory: 'notice',\n * _oPayLoad: { type: 'system', priority: 'high' },\n * _bProgressEnable: true,\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('푸시 메시지 발송 성공');\n * } else {\n * console.log('발송 실패: ' + response.resultMessage);\n * }\n * }\n * });\n *\n * // 전체 사용자에게 예약 발송\n * bizMOB.Push.sendMessage({",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 152,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 167,
    "char_count": 572,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0153",
    "content": "* }\n * }\n * });\n *\n * // 전체 사용자에게 예약 발송\n * bizMOB.Push.sendMessage({\n * _sAppName: 'MyMobileApp',\n * _aUsers: [],\n * _sFromUser: 'marketing@company.com',\n * _sSubject: '새로운 업데이트 출시',\n * _sContent: '새로운 기능이 추가된 앱 업데이트가 출시되었습니다!',\n * _sTrxType: 'SCHEDULE',\n * _sScheduleDate: '20241201120000', // 2024년 12월 1일 12시\n * _bToAll: true,\n * _sCategory: 'marketing',\n * _oPayLoad: { version: '2.1.0', updateRequired: false },\n * _bProgressEnable: false,\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('예약 발송 등록 완료');\n * }\n * }\n * });\n *\n * // 그룹 단위 메시지 발송",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 153,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 171,
    "char_count": 576,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0154",
    "content": "* console.log('예약 발송 등록 완료');\n * }\n * }\n * });\n *\n * // 그룹 단위 메시지 발송\n * bizMOB.Push.sendMessage({\n * _sAppName: 'MyMobileApp',\n * _aUsers: [],\n * _aGroups: ['admin_group', 'manager_group'],\n * _sFromUser: 'system@company.com',\n * _sSubject: '관리자 공지',\n * _sContent: '관리자 권한 변경사항을 확인해 주세요.',\n * _sTrxType: 'INSTANT',\n * _sCategory: 'admin',\n * _fCallback: function(response) {\n * console.log('그룹 메시지 발송:', response.resultCode);\n * }\n * });\n */\nbizMOB.Push.sendMessage = function () {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 154,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 142,
    "char_count": 481,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0155",
    "content": "* }\n * });\n */\nbizMOB.Push.sendMessage = function () {\n bizMOB.gateway('PushManager', 'sendMessage', ['_sAppName', '_aUsers', '_sFromUser', '_sSubject', '_sContent'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 155,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 51,
    "char_count": 184,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0156",
    "content": "/**\n * 수신받은 푸시 메세지의 상세 정보를 조회합니다.\n *\n * @param {String} _sMessageId 푸시 메세지 아이디.\n * @param {String} _sUserId 사용자 아이디.\n * @param {Function} _fCallback 결과를 받아 처리할 callback 함수.\n * @callback _fCallback\n * @param {Object} response - 푸시 메세지의 상세 정보 조회 결과\n * @param {boolean} response.result - 성공 여부\n * @param {string} response.resultCode - 결과 코드\n * @param {string} response.resultMessage - 결과 메시지\n * @param {Object} response.body - 푸시 메시지 상세 정보\n * @param {string} response.body.channelType - 푸시발송시 요청이 들어온 채널 (HTTP 또는 DB)\n * @param {string} response.body.messageSubject - 푸시메세지 제목",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 156,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 175,
    "char_count": 572,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0157",
    "content": "* @param {string} response.body.messageSubject - 푸시메세지 제목\n * @param {string} response.body.fromUser - 푸시메세지 발송자\n * @param {string} response.body.messageContent - 푸시메세지 내용\n * @param {string} response.body.messageCategory - 푸시메세지 카테고리\n * @param {string} response.body.processedDate - 발송처리시간\n * @param {string} response.body.trxType - 푸시메세지 전송방식\n * @param {string} response.body.appName - 푸시메세지를 수신한 앱 이름\n * @param {boolean} response.body.processed - 푸시 발송 처리 여부\n * @param {Object} response.body.messagePayload - 푸시메세지와 함께 전송된 파라미터\n * @param {number} response.body.trxId - 트랜잭션 아이디",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 157,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 173,
    "char_count": 578,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0158",
    "content": "* @param {number} response.body.trxId - 트랜잭션 아이디\n * @param {string} response.body.trxDay - 트랜잭션날짜\n * @param {string} response.body.serverId - 푸시서버아이디\n * @param {string} response.body.trxDate - 푸시발송을 등록한 시간\n * @example\n * // 푸시 메시지 상세 정보 조회\n * bizMOB.Push.readReceiptMessage({\n * _sMessageId: '105',\n * _sUserId: 'user@example.com',\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('메시지 상세 정보 조회 성공');\n * var messageInfo = response.body;\n *\n * console.log('제목: ' + messageInfo.messageSubject);\n * console.log('내용: ' + messageInfo.messageContent);",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 158,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 166,
    "char_count": 573,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0159",
    "content": "* console.log('내용: ' + messageInfo.messageContent);\n * console.log('발송자: ' + messageInfo.fromUser);\n * console.log('카테고리: ' + messageInfo.messageCategory);\n * console.log('발송시간: ' + messageInfo.processedDate);\n *\n * // 추가 파라미터가 있는 경우 처리\n * if (messageInfo.messagePayload) {\n * console.log('추가 데이터:', messageInfo.messagePayload);\n *\n * // 페이지 이동 등 액션 처리\n * if (messageInfo.messagePayload.action === 'navigate') {\n * navigateToPage(messageInfo.messagePayload.url);\n * }\n * }\n * } else {\n * console.log('메시지 조회 실패: ' + response.resultMessage);\n * }\n * }\n * });\n *\n * // 푸시 알림 클릭 시 상세 정보 조회 및 처리",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 159,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 174,
    "char_count": 591,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0160",
    "content": "* }\n * }\n * });\n *\n * // 푸시 알림 클릭 시 상세 정보 조회 및 처리\n * function handlePushNotificationClick(messageId, userId) {\n * bizMOB.Push.readReceiptMessage({\n * _sMessageId: messageId,\n * _sUserId: userId,\n * _fCallback: function(response) {\n * if (response.result) {\n * var msg = response.body;\n *\n * // 메시지 타입별 처리\n * switch (msg.messageCategory) {\n * case 'notice':\n * showNoticeDetail(msg);\n * break;\n * case 'chat':\n * openChatRoom(msg.messagePayload.roomId);\n * break;\n * case 'update':\n * showUpdateDialog(msg.messagePayload.version);\n * break;\n * default:\n * showGeneralMessage(msg);\n * }\n *",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 160,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 162,
    "char_count": 587,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0161",
    "content": "* break;\n * default:\n * showGeneralMessage(msg);\n * }\n *\n * // 읽음 처리\n * bizMOB.Push.readMessage({\n * _sTrxDay: msg.trxDay,\n * _sTrxId: msg.trxId.toString(),\n * _sUserId: userId,\n * _fCallback: function() {\n * console.log('읽음 처리 완료');\n * }\n * });\n * }\n * }\n * });\n * }\n */\nbizMOB.Push.readReceiptMessage = function () {\n bizMOB.gateway('PushManager', 'readReceiptMessage', ['_sUserId', '_sMessageId', '_fCallback'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 161,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 120,
    "char_count": 432,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0162",
    "content": "/**\n * Device - 디바이스 정보 및 플랫폼 감지 시스템\n *\n * @description 현재 실행 중인 디바이스의 하드웨어 정보, 운영체제 정보, 플랫폼 타입 등을\n * 조회하고 앱/웹 환경을 구분하는 시스템입니다. 환경별로 다른 정보 수집 방식을 사용하여\n * 일관된 디바이스 정보를 제공합니다.\n *\n * **주요 기능:**\n * - 디바이스 하드웨어 정보 조회 (모델명, OS 버전 등)\n * - 플랫폼 구분 (앱/웹, 모바일/PC, iOS/Android)\n * - 디바이스 상태 정보 (배터리, 네트워크 등)\n * - 앱 환경 감지 및 컨텍스트 정보\n *\n * **환경별 동작:**\n * - **앱 환경**: Native API를 통한 상세한 디바이스 정보 수집, 하드웨어 직접 접근\n * - **웹 환경**: 브라우저 UserAgent 및 Web API를 통한 제한적 정보 수집\n *\n * **Device.Info 변수:**\n * - **bizMOB.Device.Info**는 Native 런타임 전용 디바이스 정보 저장 변수입니다\n * - Native 앱 Resume 시점에 자동으로 기기 정보가 삽입되는 특수 변수",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 162,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 214,
    "char_count": 581,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0163",
    "content": "* - Native 앱 Resume 시점에 자동으로 기기 정보가 삽입되는 특수 변수\n * - JavaScript 코드에서는 직접 접근하지 말고 **bizMOB.Device.getInfo() API만 사용**해야 합니다\n * - 웹 환경에서는 빈 객체 상태로 유지되며, Native 정보 캐싱 역할을 담당\n *\n * @class bizMOB.Device\n */\nbizMOB.Device = new Object();",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 163,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 78,
    "char_count": 230,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0164",
    "content": "/**\n * 디바이스 정보 저장 변수\n *\n * @description Native 앱에서 디바이스 정보를 저장하기 위한 전용 변수입니다.\n * 이 변수는 JavaScript 코드에서 직접 값을 설정하지 않으며, Native 런타임이\n * 앱 Resume 시점에 현재 기기의 하드웨어 및 시스템 정보를 자동으로 삽입합니다.\n *\n * **주요 특징:**\n * - Native 앱 Resume 시점에 자동으로 디바이스 정보가 갱신됨\n * - JavaScript에서는 읽기 전용으로만 사용해야 함\n * - 웹 환경에서는 빈 객체 상태로 유지됨\n * - 실시간 기기 정보 접근을 위한 캐시 역할\n *\n * **포함되는 정보:**\n * - 기기 모델명, OS 버전, 앱 버전\n * - 화면 해상도, 메모리 정보\n * - 네트워크 상태, 배터리 정보\n * - 기타 플랫폼별 하드웨어 정보\n *\n * **⚠️ 중요 주의사항:**\n * - JavaScript 코드에서 이 변수에 직접 값을 할당하지 마세요\n * - Native에서 설정된 값을 임의로 수정하지 마세요\n * - 디바이스 정보 조회는 bizMOB.Device.getInfo() 함수를 사용하세요\n *",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 164,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 218,
    "char_count": 587,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0165",
    "content": "* - 디바이스 정보 조회는 bizMOB.Device.getInfo() 함수를 사용하세요\n *\n * @type {Object}\n * @readonly\n * @example\n * // ❌ 잘못된 사용법 - 직접 수정 금지\n * bizMOB.Device.Info.model = 'CustomModel'; // 금지!\n *\n * // ⚠️ 비권장 - 직접 접근 (개발시 사용 금지)\n * // bizMOB.Device.Info에 직접 접근하는 것은 권장하지 않습니다\n * // console.log('기기 모델:', bizMOB.Device.Info.model); // 사용하지 마세요\n *\n * // ✅ 권장 사용법 - 공식 API만 사용\n * bizMOB.Device.getInfo({\n * _fCallback: function(deviceInfo) {\n * console.log('디바이스 정보:', deviceInfo);\n * console.log('기기 모델:', deviceInfo.model);\n * console.log('OS 버전:', deviceInfo.osVersion);\n * }\n * });\n *\n * // ✅ 특정 정보만 조회하는 경우",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 165,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 185,
    "char_count": 590,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0166",
    "content": "* }\n * });\n *\n * // ✅ 특정 정보만 조회하는 경우\n * bizMOB.Device.getInfo({\n * _sKey: 'model',\n * _fCallback: function(modelInfo) {\n * console.log('기기 모델:', modelInfo);\n * }\n * });\n */\nbizMOB.Device.Info = {}; // Native에서 직접 값을 저장하는 변수",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 166,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 68,
    "char_count": 223,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0167",
    "content": "/**\n * 단말기 정보 조회\n *\n * @description 현재 디바이스의 정보를 JSON 객체 형태로 즉시 반환하는 함수.\n * callback 함수 없이 동기적으로 디바이스 정보에 접근할 수 있다.\n *\n * @param {String} _sKey 디바이스 정보 키 값 (선택적)\n * @returns {DeviceInfo} 디바이스 정보 객체\n *\n * @typedef {Object} DeviceInfo\n * @property {string} device_id 디바이스 고유 식별자 - 기기를 구별하는 유니크한 ID\n * @property {string} os_type 운영체제 타입 - \"Android\", \"iOS\" 등의 플랫폼 구분\n * @property {string} device_os_type 디바이스 운영체제 타입 - \"ANDROID\", \"IOS\" 등의 상수값\n * @property {string} os_version 운영체제 상세 버전 - \"15.0\", \"17.2.1\" 등의 정확한 OS 버전\n * @property {string} device_os_version 디바이스 운영체제 메이저 버전 - \"15\", \"17\" 등의 주요 버전",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 167,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 195,
    "char_count": 593,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0168",
    "content": "* @property {string} device_os_version 디바이스 운영체제 메이저 버전 - \"15\", \"17\" 등의 주요 버전\n * @property {number} content_major_version 컨텐츠 메이저 버전 - 앱 컨텐츠의 주요 버전 번호\n * @property {number} content_minor_version 컨텐츠 마이너 버전 - 앱 컨텐츠의 세부 버전 번호\n * @property {number} app_major_version 앱 메이저 버전 - 애플리케이션의 주요 버전 번호\n * @property {number} app_minor_version 앱 마이너 버전 - 애플리케이션의 세부 버전 번호\n * @property {number} app_build_version 앱 빌드 버전 - 빌드 번호 또는 패치 버전\n * @property {string} [app_version] 통합 앱 버전 - bizMOBCore 초기화 시 동적으로 생성되는 버전 문자열 (예: \"2.0.7_4.15\")",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 168,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 171,
    "char_count": 522,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0169",
    "content": "* @property {string} network_operater_name 통신사명 - \"KT\", \"SKT\", \"LGU+\" 등의 이동통신사\n * @property {number} screen_density 화면 밀도 - 화면의 픽셀 밀도 값\n * @property {number} screen_density_dpi 화면 DPI 값 - 인치당 도트 수 (120, 160, 240, 320, 480, 640 등)\n * @property {number} screen_width 화면 너비 - 화면의 가로 픽셀 수\n * @property {number} screen_height 화면 높이 - 화면의 세로 픽셀 수\n * @property {string} manufacturer 제조사명 - \"Samsung\", \"Apple\", \"LG\" 등의 기기 제조업체\n * @property {string} model 기기 모델명 - \"SM-S921N\", \"iPhone14,2\" 등의 구체적 모델명\n * @property {string} device_type 기기 타입 - \"Phone\", \"Tablet\", \"Desktop\" 등의 디바이스 분류",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 169,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 174,
    "char_count": 573,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0170",
    "content": "* @property {string} app_key 앱 고유 키 - 애플리케이션을 식별하는 고유한 키값\n * @property {string} [push_key] 푸시 키 - 푸시 서비스를 위한 고유 키값 (bizMOB.Push.getPushKey() 호출 후 설정됨)\n * @property {boolean} release_flag 릴리즈 모드 여부 - true(운영환경), false(개발환경)\n *\n * @example\n * // 전체 디바이스 정보 조회\n * const deviceInfo = bizMOB.Device.getInfo();\n * console.log('디바이스 ID:', deviceInfo.device_id);\n * console.log('운영체제:', deviceInfo.os_type);\n * console.log('화면 크기:', deviceInfo.screen_width + 'x' + deviceInfo.screen_height);\n * console.log('제조사:', deviceInfo.manufacturer);\n * console.log('모델명:', deviceInfo.model);\n *",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 170,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 175,
    "char_count": 577,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0171",
    "content": "* console.log('모델명:', deviceInfo.model);\n *\n * // 특정 키로 정보 조회 (키 지원 시)\n * const screenWidth = bizMOB.Device.getInfo({ \"_sKey\" : \"screen_width\" });\n */\nbizMOB.Device.getInfo = function () {\n return bizMOB.gateway('DeviceManager', 'getInfo', [], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 171,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 75,
    "char_count": 261,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0172",
    "content": "/**\n * 현재 환경이 App 환경인지 판별\n *\n * @description bizMOB 앱 컨테이너 내에서 실행 중인지 확인하는 함수.\n * 앱 환경에서만 사용 가능한 네이티브 기능을 호출하기 전에 체크하는데 사용된다.\n *\n * @returns {boolean} App 환경이면 true, 그렇지 않으면 false\n *\n * @example\n * if (bizMOB.Device.isApp()) {\n * // 네이티브 기능 사용 가능\n * bizMOB.System.callCamera();\n * }\n */\nbizMOB.Device.isApp = function () {\n return bizMOB.gateway('DeviceManager', 'isApp', [], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 172,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 125,
    "char_count": 393,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0173",
    "content": "/**\n * 현재 환경이 Web 환경인지 판별\n *\n * @description 웹 브라우저 환경에서 실행 중인지 확인하는 함수.\n * 웹 환경에서만 사용 가능한 기능을 분기 처리할 때 사용된다.\n *\n * @returns {boolean} Web 환경이면 true, 그렇지 않으면 false\n *\n * @example\n * if (bizMOB.Device.isWeb()) {\n * // 웹 환경 전용 처리\n * console.log('웹 브라우저에서 실행 중');\n * }\n */\nbizMOB.Device.isWeb = function () {\n return bizMOB.gateway('DeviceManager', 'isWeb', [], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 173,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 121,
    "char_count": 376,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0174",
    "content": "/**\n * 현재 디바이스가 모바일 기기인지 판별\n *\n * @description 스마트폰, 태블릿 등 모바일 디바이스에서 실행 중인지 확인하는 함수.\n * 모바일 특화 UI나 기능을 적용할 때 사용된다.\n *\n * @returns {boolean} 모바일 기기이면 true, 그렇지 않으면 false\n *\n * @example\n * if (bizMOB.Device.isMobile()) {\n * // 모바일 전용 UI 적용\n * document.body.classList.add('mobile-layout');\n * }\n */\nbizMOB.Device.isMobile = function () {\n return bizMOB.gateway('DeviceManager', 'isMobile', [], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 174,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 129,
    "char_count": 409,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0175",
    "content": "/**\n * 현재 디바이스가 PC인지 판별\n *\n * @description 데스크톱, 노트북 등 PC 환경에서 실행 중인지 확인하는 함수.\n * PC 환경에 최적화된 UI나 기능을 적용할 때 사용된다.\n *\n * @returns {boolean} PC 환경이면 true, 그렇지 않으면 false\n *\n * @example\n * if (bizMOB.Device.isPC()) {\n * // PC 전용 키보드 단축키 활성화\n * enableKeyboardShortcuts();\n * }\n */\nbizMOB.Device.isPC = function () {\n return bizMOB.gateway('DeviceManager', 'isPC', [], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 175,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 119,
    "char_count": 380,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0176",
    "content": "/**\n * 현재 디바이스가 Android 기기인지 판별\n *\n * @description Android 운영체제를 사용하는 디바이스인지 확인하는 함수.\n * Android 특화 기능이나 UI를 적용할 때 사용된다.\n *\n * @returns {boolean} Android 기기이면 true, 그렇지 않으면 false\n *\n * @example\n * if (bizMOB.Device.isAndroid()) {\n * // Android 전용 머티리얼 디자인 적용\n * applyMaterialDesign();\n * }\n */\nbizMOB.Device.isAndroid = function () {\n return bizMOB.gateway('DeviceManager', 'isAndroid', [], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 176,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 126,
    "char_count": 408,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0177",
    "content": "/**\n * 현재 디바이스가 iOS 기기인지 판별\n *\n * @description iPhone, iPad 등 iOS 운영체제를 사용하는 디바이스인지 확인하는 함수.\n * iOS 특화 기능이나 UI를 적용할 때 사용된다.\n *\n * @returns {boolean} iOS 기기이면 true, 그렇지 않으면 false\n *\n * @example\n * if (bizMOB.Device.isIOS()) {\n * // iOS 전용 쿠퍼티노 디자인 적용\n * applyCupertinoDesign();\n * }\n */\nbizMOB.Device.isIOS = function () {\n return bizMOB.gateway('DeviceManager', 'isIOS', [], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 177,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 122,
    "char_count": 392,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0178",
    "content": "/**\n * 현재 디바이스가 태블릿인지 판별\n *\n * @description iPad, Android 태블릿 등 태블릿 형태의 디바이스인지 확인하는 함수.\n * 태블릿에 최적화된 레이아웃이나 기능을 적용할 때 사용된다.\n *\n * @returns {boolean} 태블릿이면 true, 그렇지 않으면 false\n *\n * @example\n * if (bizMOB.Device.isTablet()) {\n * // 태블릿 전용 2열 레이아웃 적용\n * enableTwoColumnLayout();\n * }\n */\nbizMOB.Device.isTablet = function () {\n return bizMOB.gateway('DeviceManager', 'isTablet', [], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 178,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 126,
    "char_count": 398,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0179",
    "content": "/**\n * 현재 디바이스가 스마트폰인지 판별\n *\n * @description iPhone, Android 폰 등 스마트폰 형태의 디바이스인지 확인하는 함수.\n * 스마트폰에 최적화된 UI나 기능을 적용할 때 사용된다.\n *\n * @returns {boolean} 스마트폰이면 true, 그렇지 않으면 false\n *\n * @example\n * if (bizMOB.Device.isPhone()) {\n * // 스마트폰 전용 1열 레이아웃 적용\n * enableSingleColumnLayout();\n * }\n */\nbizMOB.Device.isPhone = function () {\n return bizMOB.gateway('DeviceManager', 'isPhone', [], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 179,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 126,
    "char_count": 400,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0180",
    "content": "/**\n * Database - SQLite 데이터베이스 연결 및 쿼리 실행 시스템\n *\n * @description 모바일 앱에서 SQLite 데이터베이스에 연결하고 SQL 쿼리를 실행하는 시스템입니다.\n * 트랜잭션 관리, 배치 쿼리 실행, 데이터베이스 생명주기 관리 등의 기능을 제공합니다.\n * 앱 환경에서만 완전한 기능을 지원하며, 웹 환경에서는 기본 구조만 제공됩니다.\n *\n * **주요 기능:**\n * - SQLite 데이터베이스 연결 및 해제\n * - SQL 쿼리 실행 (SELECT, INSERT, UPDATE, DELETE)\n * - 트랜잭션 관리 (BEGIN, COMMIT, ROLLBACK)\n * - 배치 SQL 실행 및 성능 최적화\n *\n * **환경별 동작:**\n * - **앱 환경**: Native SQLite 엔진 완전 지원, 파일 기반 데이터베이스, 트랜잭션 관리\n * - **웹 환경**: 기본 구조만 제공, 브라우저 제약으로 인한 SQLite 지원 제한\n *\n * @class bizMOB.Database\n */\nbizMOB.Database = new Object();",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 180,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 198,
    "char_count": 563,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0181",
    "content": "/**\n * DataBase Open\n *\n * @param {String} _sDbName 오픈할 데이터베이스 명.\n * @param {Function} _fCallback 결과를 받아 처리할 callback 함수.\n * @callback _fCallback\n * @param {Object} response - 데이터베이스 오픈 결과\n * @param {boolean} response.result - 데이터베이스 오픈 결과 값\n * @param {string} response.error_message - 데이터베이스 오픈 실패시 오류 메세지\n * @example\n * // 데이터베이스 연결\n * bizMOB.Database.openDatabase({\n * _sDbName: 'myapp.db',\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('데이터베이스 연결 성공');\n * // 테이블 생성 또는 초기화 작업 수행\n * initializeDatabase();\n * } else {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 181,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 168,
    "char_count": 550,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0182",
    "content": "* // 테이블 생성 또는 초기화 작업 수행\n * initializeDatabase();\n * } else {\n * console.log('데이터베이스 연결 실패:', response.error_message);\n * }\n * }\n * });\n *\n * // 사용자별 데이터베이스 연결\n * bizMOB.Database.openDatabase({\n * _sDbName: 'user_' + userId + '.db',\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('사용자 데이터베이스 연결 완료');\n * }\n * }\n * });\n */\nbizMOB.Database.openDatabase = function () {\n bizMOB.gateway('Database', 'openDatabase', ['_sDbName', '_fCallback'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 182,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 144,
    "char_count": 486,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0183",
    "content": "/**\n * DataBase Close\n *\n * @param {Function} _fCallback 결과를 받아 처리할 callback 함수.\n * @callback _fCallback\n * @param {Object} response - 데이터베이스 닫기 결과\n * @param {boolean} response.result - 데이터베이스 닫기 결과 값\n * @param {string} response.error_message - 데이터베이스 닫기 실패시 오류 메세지\n * @example\n * // 데이터베이스 작업 완료 후 정리\n * bizMOB.Database.closeDatabase({\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('데이터베이스가 정상적으로 닫혔습니다');\n * // 앱 종료 또는 다른 DB로 전환 등 후속 작업\n * } else {\n * console.log('데이터베이스 닫기 실패:', response.error_message);\n * }\n * }\n * });\n *\n * // 앱 종료 시 리소스 정리",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 183,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 181,
    "char_count": 578,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0184",
    "content": "* }\n * }\n * });\n *\n * // 앱 종료 시 리소스 정리\n * function cleanupResources() {\n * bizMOB.Database.closeDatabase({\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('앱 종료 전 데이터베이스 정리 완료');\n * }\n * }\n * });\n * }\n */\nbizMOB.Database.closeDatabase = function () {\n bizMOB.gateway('Database', 'closeDatabase', ['_fCallback'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 184,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 103,
    "char_count": 358,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0185",
    "content": "/**\n * DataBase Transaction 시작\n *\n * @param {Function} _fCallback 결과를 받아 처리할 callback 함수.\n * @callback _fCallback\n * @param {Object} response - 트랜잭션 시작 결과\n * @param {boolean} response.result - 트랜잭션 시작 결과 값\n * @param {string} response.error_message - 트랜잭션 시작 실패시 오류 메세지\n * @example\n * // 여러 작업을 하나의 트랜잭션으로 처리\n * bizMOB.Database.beginTransaction({\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('트랜잭션 시작 성공');\n *\n * // 여러 SQL 작업 수행\n * bizMOB.Database.executeSql({\n * _sQuery: 'INSERT INTO orders (user_id, product_id, quantity) VALUES (?, ?, ?)',",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 185,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 171,
    "char_count": 574,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0186",
    "content": "* _aBindingValues: [userId, productId, quantity],\n * _fCallback: function(insertResponse) {\n * if (insertResponse.result) {\n * // 재고 업데이트\n * bizMOB.Database.executeSql({\n * _sQuery: 'UPDATE products SET stock = stock - ? WHERE id = ?',\n * _aBindingValues: [quantity, productId],\n * _fCallback: function(updateResponse) {\n * if (updateResponse.result) {\n * // 모든 작업 성공 시 커밋\n * bizMOB.Database.commitTransaction({\n * _fCallback: function() {\n * console.log('주문 처리 완료');\n * }\n * });\n * } else {\n * // 오류 발생 시 롤백\n * bizMOB.Database.rollbackTransaction({});\n * }\n * }\n * });\n * }\n * }\n * });\n * } else {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 186,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 167,
    "char_count": 598,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0187",
    "content": "* }\n * }\n * });\n * }\n * }\n * });\n * } else {\n * console.log('트랜잭션 시작 실패:', response.error_message);\n * }\n * }\n * });\n */\nbizMOB.Database.beginTransaction = function () {\n bizMOB.gateway('Database', 'beginTransaction', ['_fCallback'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 187,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 71,
    "char_count": 251,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0188",
    "content": "/**\n * DataBase Transaction Commit\n *\n * @param {Function} _fCallback 결과를 받아 처리할 callback 함수.\n * @callback _fCallback\n * @param {Object} response - 트랜잭션 커밋 결과\n * @param {boolean} response.result - 트랜잭션 커밋 결과 값\n * @param {string} response.error_message - 트랜잭션 커밋 실패시 오류 메세지\n * @example\n * // 트랜잭션 내 모든 작업 성공 시 커밋\n * bizMOB.Database.commitTransaction({\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('트랜잭션 커밋 성공 - 모든 변경사항이 저장되었습니다');\n * // UI 업데이트 등 후속 작업\n * updateUserInterface();\n * } else {\n * console.log('트랜잭션 커밋 실패:', response.error_message);\n * // 오류 처리\n * }\n * }",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 188,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 182,
    "char_count": 598,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0189",
    "content": "* console.log('트랜잭션 커밋 실패:', response.error_message);\n * // 오류 처리\n * }\n * }\n * });\n *\n * // 복잡한 데이터 이전 작업 커밋\n * function migrationCommit() {\n * bizMOB.Database.commitTransaction({\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('데이터 마이그레이션 완료');\n * showSuccessMessage('데이터 이전이 완료되었습니다');\n * } else {\n * console.log('마이그레이션 커밋 실패');\n * showErrorMessage('데이터 이전 중 오류가 발생했습니다');\n * }\n * }\n * });\n * }\n */\nbizMOB.Database.commitTransaction = function () {\n bizMOB.gateway('Database', 'commitTransaction', ['_fCallback'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 189,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 170,
    "char_count": 563,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0190",
    "content": "/**\n * DataBase Transaction Rollback\n *\n * @param {Function} _fCallback 결과를 받아 처리할 callback 함수.\n * @callback _fCallback\n * @param {Object} response - 트랜잭션 롤백 결과\n * @param {boolean} response.result - 트랜잭션 롤백 결과 값\n * @param {string} response.error_message - 트랜잭션 롤백 실패시 오류 메세지\n * @example\n * // 오류 발생 시 트랜잭션 롤백\n * bizMOB.Database.rollbackTransaction({\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('트랜잭션 롤백 성공 - 모든 변경사항이 취소되었습니다');\n * // 사용자에게 오류 알림\n * showErrorMessage('작업 중 오류가 발생하여 변경사항이 취소되었습니다');\n * } else {\n * console.log('트랜잭션 롤백 실패:', response.error_message);",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 190,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 185,
    "char_count": 597,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0191",
    "content": "* } else {\n * console.log('트랜잭션 롤백 실패:', response.error_message);\n * // 심각한 오류 상황\n * }\n * }\n * });\n *\n * // 검증 실패 시 자동 롤백\n * function validateAndProcess(data) {\n * if (!isValidData(data)) {\n * console.log('데이터 검증 실패 - 롤백 수행');\n * bizMOB.Database.rollbackTransaction({\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('잘못된 데이터로 인한 롤백 완료');\n * resetForm();\n * }\n * }\n * });\n * return;\n * }\n * }\n *\n * // 사용자 취소 시 롤백\n * function handleUserCancel() {\n * bizMOB.Database.rollbackTransaction({\n * _fCallback: function(response) {\n * if (response.result) {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 191,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 168,
    "char_count": 577,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0192",
    "content": "* _fCallback: function(response) {\n * if (response.result) {\n * console.log('사용자 취소로 인한 롤백 완료');\n * }\n * }\n * });\n * }\n */\nbizMOB.Database.rollbackTransaction = function () {\n bizMOB.gateway('Database', 'rollbackTransaction', ['_fCallback'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 192,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 73,
    "char_count": 259,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0193",
    "content": "/**\n * SQL쿼리문을 실행\n *\n * @param {String} _sQuery 실행할 SQL SELECT 쿼리문.\n * @param {Array} _aBindingValues 쿼리문의 각 변수 위치에 대입해줄 값의 배열.\n * @param {Function} _fCallback SQL쿼리문 실행 요청 후 호출되는 callback 함수.\n * @callback _fCallback\n * @param {Object} response - SQL 실행 결과\n * @param {boolean} response.result - SQL쿼리문 실행 결과 값\n * @param {string} response.error_message - SQL쿼리문 실행 실패시 오류 메세지\n * @param {Object} response.data - SQL 실행 응답 데이터\n * @param {number} response.data.affected_number - SQL쿼리문 실행 후 영향을 받은 레코드 수\n * @example\n * // 새 사용자 추가\n * bizMOB.Database.executeSql({",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 193,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 171,
    "char_count": 558,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0194",
    "content": "* @example\n * // 새 사용자 추가\n * bizMOB.Database.executeSql({\n * _sQuery: 'INSERT INTO users (name, email, age) VALUES (?, ?, ?)',\n * _aBindingValues: ['홍길동', 'hong@example.com', 30],\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('사용자 추가 완료. 영향받은 레코드:', response.data.affected_number);\n * } else {\n * console.log('사용자 추가 실패:', response.error_message);\n * }\n * }\n * });\n *\n * // 사용자 정보 업데이트\n * bizMOB.Database.executeSql({\n * _sQuery: 'UPDATE users SET age = ? WHERE email = ?',\n * _aBindingValues: [31, 'hong@example.com'],\n * _fCallback: function(response) {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 194,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 167,
    "char_count": 586,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0195",
    "content": "* _fCallback: function(response) {\n * if (response.result && response.data.affected_number > 0) {\n * console.log('사용자 정보가 업데이트되었습니다');\n * }\n * }\n * });\n */\nbizMOB.Database.executeSql = function () {\n bizMOB.gateway('Database', 'executeSql', ['_sQuery', '_fCallback'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 195,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 82,
    "char_count": 285,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0196",
    "content": "/**\n * SELECT SQL쿼리문을 실행\n *\n * @param {String} _sQuery 실행할 SQL SELECT 쿼리문.\n * @param {Array} _aBindingValues 쿼리문의 각 변수 위치에 대입해줄 값의 배열.\n * @param {Function} _fCallback SQL쿼리문 실행 요청 후 호출되는 callback 함수.\n * @callback _fCallback\n * @param {Object} response - SELECT 쿼리 실행 결과\n * @param {boolean} response.result - SELECT SQL쿼리문 실행 결과 값\n * @param {string} response.error_message - SELECT SQL쿼리문 실행 실패시 오류 메세지\n * @param {Object} response.data - SELECT 쿼리 응답 데이터\n * @param {Object} response.data.result_set - 쿼리 결과 집합\n * @param {Array} response.data.result_set.rows - SELECT SQL쿼리문 실행으로 반환된 레코드 배열",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 196,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 179,
    "char_count": 588,
    "created_at": "2025-08-01T15:32:20.352Z"
  },
  {
    "id": "e38eec38_0197",
    "content": "* @param {Array} response.data.result_set.rows - SELECT SQL쿼리문 실행으로 반환된 레코드 배열\n * @example\n * // 전체 사용자 목록 조회\n * bizMOB.Database.executeSelect({\n * _sQuery: 'SELECT * FROM users',\n * _fCallback: function(response) {\n * if (response.result) {\n * response.data.result_set.rows.forEach(function(user) {\n * console.log('사용자:', user.name, user.email);\n * });\n * } else {\n * console.log('쿼리 실행 실패:', response.error_message);\n * }\n * }\n * });\n *\n * // 조건부 검색 (바인딩 파라미터 사용)\n * bizMOB.Database.executeSelect({\n * _sQuery: 'SELECT * FROM users WHERE age > ? AND city = ?',\n * _aBindingValues: [25, '서울'],",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 197,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 172,
    "char_count": 594,
    "created_at": "2025-08-01T15:32:20.353Z"
  },
  {
    "id": "e38eec38_0198",
    "content": "* _aBindingValues: [25, '서울'],\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('검색된 사용자 수:', response.data.result_set.rows.length);\n * }\n * }\n * });\n */\nbizMOB.Database.executeSelect = function () {\n bizMOB.gateway('Database', 'executeSelect', ['_sQuery', '_fCallback'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 198,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 89,
    "char_count": 317,
    "created_at": "2025-08-01T15:32:20.353Z"
  },
  {
    "id": "e38eec38_0199",
    "content": "/**\n * SQL쿼리문을 일괄 실행\n *\n * @param {String} _sQuery 실행할 SQL SELECT 쿼리문.\n * @param {Array} _aBindingValues 쿼리문의 각 변수 위치에 대입해줄 값의 배열.\n * @param {Function} _fCallback SQL쿼리문 실행 요청 후 호출되는 callback 함수.\n * @callback _fCallback\n * @param {Object} response - SQL 일괄 실행 결과\n * @param {boolean} response.result - SQL쿼리문 일괄 실행 결과 값\n * @param {string} response.error_message - SQL쿼리문 일괄 실행 실패시 오류 메세지\n * @param {Object} response.data - SQL 일괄 실행 응답 데이터\n * @param {number} response.data.affected_number - SQL쿼리문 일괄 실행 후 영향을 받은 레코드 수\n * @param {string} response.data.code - 오류 코드 (오류시에만 반환)\n * @example",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 199,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 181,
    "char_count": 586,
    "created_at": "2025-08-01T15:32:20.353Z"
  },
  {
    "id": "e38eec38_0200",
    "content": "* @param {string} response.data.code - 오류 코드 (오류시에만 반환)\n * @example\n * // 여러 사용자 정보를 한 번에 삽입\n * var insertQuery = 'INSERT INTO users (name, email, department, created_at) VALUES (?, ?, ?, DATETIME(\"now\"))';\n * var userList = [\n * ['김철수', 'kim@company.com', '개발팀'],\n * ['이영희', 'lee@company.com', '디자인팀'],\n * ['박민수', 'park@company.com', '기획팀']\n * ];\n *\n * bizMOB.Database.executeBatchSql({\n * _sQuery: insertQuery,\n * _aBindingValues: userList,\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('일괄 삽입 성공:', response.data.affected_number + '명 추가됨');\n * } else {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 200,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 172,
    "char_count": 586,
    "created_at": "2025-08-01T15:32:20.353Z"
  },
  {
    "id": "e38eec38_0201",
    "content": "* } else {\n * console.log('일괄 삽입 실패:', response.error_message);\n * if (response.data && response.data.code) {\n * console.log('오류 코드:', response.data.code);\n * }\n * }\n * }\n * });\n *\n * // 대량 데이터 업데이트 (성능 최적화)\n * var updateQuery = 'UPDATE products SET price = price * ? WHERE category = ?';\n * var priceUpdates = [\n * [1.1, 'electronics'], // 전자제품 10% 인상\n * [0.9, 'clothing'], // 의류 10% 할인\n * [1.05, 'books'] // 도서 5% 인상\n * ];\n *\n * bizMOB.Database.executeBatchSql({\n * _sQuery: updateQuery,\n * _aBindingValues: priceUpdates,\n * _fCallback: function(response) {\n * if (response.result) {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 201,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 166,
    "char_count": 585,
    "created_at": "2025-08-01T15:32:20.353Z"
  },
  {
    "id": "e38eec38_0202",
    "content": "* _fCallback: function(response) {\n * if (response.result) {\n * console.log('가격 일괄 업데이트 완료');\n * console.log('총 ' + response.data.affected_number + '개 상품 가격 변경');\n * } else {\n * console.log('가격 업데이트 실패:', response.error_message);\n * }\n * }\n * });\n *\n * // 로그 데이터 정리 (일괄 삭제)\n * var deleteQuery = 'DELETE FROM logs WHERE log_date < ? AND log_level = ?';\n * var cleanupConditions = [\n * ['2024-01-01', 'DEBUG'],\n * ['2024-01-01', 'INFO'],\n * ['2023-01-01', 'WARNING']\n * ];\n *\n * bizMOB.Database.executeBatchSql({\n * _sQuery: deleteQuery,\n * _aBindingValues: cleanupConditions,",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 202,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 164,
    "char_count": 574,
    "created_at": "2025-08-01T15:32:20.353Z"
  },
  {
    "id": "e38eec38_0203",
    "content": "* _sQuery: deleteQuery,\n * _aBindingValues: cleanupConditions,\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('로그 정리 완료:', response.data.affected_number + '개 레코드 삭제');\n * }\n * }\n * });\n */\nbizMOB.Database.executeBatchSql = function () {\n bizMOB.gateway('Database', 'executeBatchSql', ['_sQuery', '_aBindingValues', '_fCallback'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 203,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 104,
    "char_count": 377,
    "created_at": "2025-08-01T15:32:20.353Z"
  },
  {
    "id": "e38eec38_0204",
    "content": "/**\n * Http - RESTful API 통신 및 HTTP 요청 관리 시스템\n *\n * @description 웹 환경에서 REST API 호출 및 일반적인 HTTP 통신을 위한 시스템입니다.\n * bizMOB 서버 통신과는 별도로 외부 API나 다른 서버와의 통신에 사용되며,\n * 주로 웹 환경에서 fetch API를 기반으로 동작합니다.\n *\n * **주요 기능:**\n * - RESTful API 호출 (GET, POST, PUT, DELETE 등)\n * - 커스텀 HTTP 헤더 설정\n * - 요청/응답 데이터 변환 처리\n * - 타임아웃 및 재시도 로직\n *\n * **환경별 동작:**\n * - **앱 환경**: 기본 구조만 제공, Network 클래스 사용 권장\n * - **웹 환경**: fetch API 기반 HTTP 통신 완전 지원, CORS 정책 준수\n *\n * @class bizMOB.Http\n */\nbizMOB.Http = new Object();",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 204,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 166,
    "char_count": 491,
    "created_at": "2025-08-01T15:32:20.353Z"
  },
  {
    "id": "e38eec38_0205",
    "content": "/**\n * HTTP 요청 수행 (웹 환경 전용)\n *\n * @description 웹 환경에서 일반 API 통신을 위한 HTTP 요청 함수.\n * 앱 환경에서는 동작하지 않으며, bizMOB 서버가 아닌 외부 API와 통신할 때 사용한다.\n * JavaScript의 기본 fetch API를 기반으로 구현되어 fetch와 동일한 구조를 가진다.\n *\n * @param {Object} arg 요청 객체\n * @param {string} arg._sUrl 요청할 URL 주소\n * @param {string} arg._sMethod HTTP 요청 방식 (GET, POST, PUT, DELETE 등)\n * @param {number} [arg._nTimeout=60] 요청 제한시간 (초 단위, 기본값: 60초)\n * @param {number} [arg._nRetries=1] API 요청 재시도 횟수 (기본값: 1회)\n * @param {Object} [arg._oOption] fetch 옵션 객체 (추가 fetch 설정)\n * @param {Object} [arg._oHeader] HTTP 요청 헤더 객체",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 205,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 181,
    "char_count": 567,
    "created_at": "2025-08-01T15:32:20.353Z"
  },
  {
    "id": "e38eec38_0206",
    "content": "* @param {Object} [arg._oHeader] HTTP 요청 헤더 객체\n * @param {string} [arg._oBody] HTTP 요청 본문 - JSON.stringify(data) 또는 new URLSearchParams(data).toString() 형태\n * @param {Function} arg._fCallback 요청 완료 후 실행될 callback 함수\n * @callback arg._fCallback\n * @param {Object} response - HTTP 요청 결과\n * @param {boolean} response.ok - 요청 성공 여부 (HTTP 200-299 범위)\n * @param {number} response.status - HTTP 상태 코드 (200, 404, 500 등)\n * @param {string} response.statusText - HTTP 상태 텍스트 (\"OK\", \"Not Found\" 등)\n * @param {*} response.data - 응답 데이터 (성공 시 JSON 파싱된 데이터, 실패 시 null)\n * @example\n * // GET 요청으로 외부 API 호출",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 206,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 173,
    "char_count": 591,
    "created_at": "2025-08-01T15:32:20.353Z"
  },
  {
    "id": "e38eec38_0207",
    "content": "* @example\n * // GET 요청으로 외부 API 호출\n * bizMOB.Http.request({\n * _sUrl: 'https://jsonplaceholder.typicode.com/users',\n * _sMethod: 'GET',\n * _oHeader: { 'Accept': 'application/json' },\n * _fCallback: function(response) {\n * if (response.ok) {\n * console.log('사용자 목록:', response.data);\n * } else {\n * console.error('API 요청 실패:', response.status);\n * }\n * }\n * });\n *\n * // POST 요청으로 데이터 전송\n * bizMOB.Http.request({\n * _sUrl: 'https://api.example.com/posts',\n * _sMethod: 'POST',\n * _oHeader: { 'Content-Type': 'application/json' },\n * _oBody: JSON.stringify({ title: '제목', content: '내용' }),",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 207,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 166,
    "char_count": 588,
    "created_at": "2025-08-01T15:32:20.353Z"
  },
  {
    "id": "e38eec38_0208",
    "content": "* _oBody: JSON.stringify({ title: '제목', content: '내용' }),\n * _nTimeout: 30,\n * _nRetries: 2,\n * _fCallback: function(response) {\n * if (response.ok) {\n * console.log('게시글 생성 성공:', response.data);\n * } else {\n * console.log('게시글 생성 실패');\n * }\n * }\n * });\n *\n * @note 이 함수는 웹 환경에서만 동작하며, 앱 환경에서는 사용할 수 없습니다.\n */\nbizMOB.Http.request = function () {\n bizMOB.gateway('Http', 'request', [], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 208,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 120,
    "char_count": 402,
    "created_at": "2025-08-01T15:32:20.353Z"
  },
  {
    "id": "e38eec38_0209",
    "content": "/**\n * Localization - 다국어 지원 및 로케일 관리 시스템\n *\n * @description 애플리케이션의 다국어 처리와 로케일 관리를 담당하는 시스템입니다.\n * 언어 코드 설정, 지역별 언어 지원, 동적 언어 변경 등의 기능을 제공하며,\n * 앱과 웹 환경에서 각기 다른 언어 감지 방식을 사용합니다.\n *\n * **주요 기능:**\n * - 언어 코드 설정 및 조회 (ko, en, ja 등)\n * - 로케일 코드 관리 (ko-KR, en-US 등)\n * - 동적 언어 변경 및 적용\n * - 시스템 언어 감지 및 자동 설정\n *\n * **환경별 동작:**\n * - **앱 환경**: Native 디바이스 언어 설정 연동, 시스템 언어 자동 감지\n * - **웹 환경**: 브라우저 navigator.language 기반 언어 감지, localStorage 언어 설정 저장\n *\n * @class bizMOB.Localization\n */\nbizMOB.Localization = new Object();",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 209,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 182,
    "char_count": 516,
    "created_at": "2025-08-01T15:32:20.353Z"
  },
  {
    "id": "e38eec38_0210",
    "content": "/**\n * 언어 코드 설정\n *\n * @description 애플리케이션의 언어 코드를 설정하는 함수.\n * 앱 환경에서는 네이티브 설정을 통해 언어를 변경하고,\n * 웹 환경에서는 브라우저 환경에 맞는 언어코드를 저장한다.\n *\n * @param {string} _sLocaleCd 설정할 언어 코드 (예: \"ko\", \"ko-KR\", \"en\", \"en-US\")\n * @param {Function} _fCallback 언어 설정 완료 후 실행될 callback 함수\n * @callback _fCallback\n * @param {Object} response - 언어 설정 결과\n * @param {boolean} response.result - 성공 여부\n * @param {string} response.locale - 설정된 전체 언어 코드 (예: \"ko-KR\", \"en-US\")\n * @example\n * // 앱 언어를 한국어로 설정\n * bizMOB.Localization.setLocale({\n * _sLocaleCd: 'ko',\n * _fCallback: function(response) {\n * if (response.result) {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 210,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 186,
    "char_count": 591,
    "created_at": "2025-08-01T15:32:20.353Z"
  },
  {
    "id": "e38eec38_0211",
    "content": "* _fCallback: function(response) {\n * if (response.result) {\n * console.log('언어가 한국어로 설정되었습니다:', response.locale);\n * // UI 언어 변경\n * updateUILanguage('ko');\n * } else {\n * console.log('언어 설정에 실패했습니다');\n * }\n * }\n * });\n *\n * // 영어(미국)로 설정\n * bizMOB.Localization.setLocale({\n * _sLocaleCd: 'en-US',\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('Language set to English:', response.locale);\n * // 네트워크 통신 시 언어 정보도 자동 반영\n * bizMOB.Network.changeLocale({ _sLocaleCd: 'en-US' });\n * }\n * }\n * });\n *\n * // 사용자 선택에 따른 언어 변경\n * function changeLanguage(languageCode) {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 211,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 175,
    "char_count": 592,
    "created_at": "2025-08-01T15:32:20.353Z"
  },
  {
    "id": "e38eec38_0212",
    "content": "* });\n *\n * // 사용자 선택에 따른 언어 변경\n * function changeLanguage(languageCode) {\n * bizMOB.Localization.setLocale({\n * _sLocaleCd: languageCode,\n * _fCallback: function(response) {\n * if (response.result) {\n * // 언어 변경 후 페이지 새로고침\n * location.reload();\n * }\n * }\n * });\n * }\n */\nbizMOB.Localization.setLocale = function () {\n bizMOB.gateway('Localization', 'setLocale', ['_sLocaleCd', '_fCallback'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 212,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 116,
    "char_count": 410,
    "created_at": "2025-08-01T15:32:20.353Z"
  },
  {
    "id": "e38eec38_0213",
    "content": "/**\n * 현재 설정된 언어 코드 조회\n *\n * @description 현재 설정된 언어 코드를 조회하는 함수.\n * 앱 환경에서는 네이티브에서 설정된 언어 정보를 가져오고,\n * 웹 환경에서는 저장된 언어 코드 또는 브라우저 기본 언어를 반환한다.\n *\n * @param {Function} _fCallback 언어 조회 완료 후 실행될 callback 함수\n * @callback _fCallback\n * @param {Object} response - 언어 조회 결과\n * @param {boolean} response.result - 성공 여부\n * @param {string} response.locale - 현재 설정된 전체 언어 코드 (예: \"ko-KR\", \"en-US\")\n * @example\n * // 앱 시작 시 현재 언어 확인\n * bizMOB.Localization.getLocale({\n * _fCallback: function(response) {\n * if (response.result) {\n * console.log('현재 언어 설정:', response.locale);\n *\n * // 언어별 UI 초기화",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 213,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 187,
    "char_count": 582,
    "created_at": "2025-08-01T15:32:20.353Z"
  },
  {
    "id": "e38eec38_0214",
    "content": "* console.log('현재 언어 설정:', response.locale);\n *\n * // 언어별 UI 초기화\n * if (response.locale.startsWith('ko')) {\n * loadKoreanResources();\n * } else if (response.locale.startsWith('en')) {\n * loadEnglishResources();\n * } else if (response.locale.startsWith('ja')) {\n * loadJapaneseResources();\n * }\n * } else {\n * console.log('언어 정보 조회 실패');\n * // 기본 언어로 설정\n * bizMOB.Localization.setLocale({ _sLocaleCd: 'ko' });\n * }\n * }\n * });\n *\n * // 언어별 서버 API 엔드포인트 설정\n * bizMOB.Localization.getLocale({\n * _fCallback: function(response) {\n * if (response.result) {",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 214,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 158,
    "char_count": 551,
    "created_at": "2025-08-01T15:32:20.353Z"
  },
  {
    "id": "e38eec38_0215",
    "content": "* _fCallback: function(response) {\n * if (response.result) {\n * var apiUrl = getApiUrlForLocale(response.locale);\n * console.log('언어별 API URL:', apiUrl);\n * }\n * }\n * });\n */\nbizMOB.Localization.getLocale = function () {\n bizMOB.gateway('Localization', 'getLocale', ['_fCallback'], arguments[0]);\n};",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 215,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 82,
    "char_count": 299,
    "created_at": "2025-08-01T15:32:20.353Z"
  },
  {
    "id": "e38eec38_0216",
    "content": "/**\n * bizMOB SDK 스크립트 초기화 완료 알림\n *\n * 스크립트가 로드되고 모든 클래스와 함수가 준비되었음을 알리는 로그를 기록합니다.\n * 환경에 따라 다른 Core 파일을 호출합니다:\n * - 웹 환경: bizMOB-core-web.js의 Module.logger 호출\n * - 앱 환경: bizMOB-core.js의 Module.logger 호출\n *\n * @example\n * // 스크립트 로드 완료 시 자동으로 실행되어 다음과 같은 로그가 기록됩니다:\n * // Service: bizMOB, Action: ready, Type: I, Message: bizMOB script is ready.\n */\n(function () {\n bizMOB.gateway('Module', 'logger', [], { _sService: 'bizMOB', _sAction: 'ready', _sLogType: 'I', _sMessage: 'bizMOB script is ready.' });\n})();",
    "metadata": {
      "source_file": "data/source/code/bizmob-sdk/core/bizMOB-xross4.js",
      "file_name": "bizMOB-xross4.js",
      "file_type": "js",
      "chunk_index": 216,
      "total_chunks": 217,
      "chunk_strategy": "code/bizmob-sdk",
      "chunk_size": 600,
      "overlap": 80,
      "original_metadata": {
        "word_count": 16346,
        "parsed_at": "2025-08-01T07:01:18.410404"
      },
      "position": {}
    },
    "tokens": 162,
    "char_count": 510,
    "created_at": "2025-08-01T15:32:20.353Z"
  }
]